<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Cloudpods –
快速开始</title><link>https://www.cloudpods.org/zh/docs/quickstart/</link><description>Recent content in 快速开始 on Cloudpods</description><generator>Hugo -- gohugo.io</generator><atom:link href="https://www.cloudpods.org/zh/docs/quickstart/index.xml" rel="self" type="application/rss+xml"/><item><title>Docs: All in One 安装</title><link>https://www.cloudpods.org/zh/docs/quickstart/allinone/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.cloudpods.org/zh/docs/quickstart/allinone/</guid><description>
&lt;h2 id="前提">前提&lt;/h2>
&lt;div class="alert alert-warning" role="alert">
&lt;h4 class="alert-heading">注意&lt;/h4>
本章内容是通过部署工具快速搭建 Cloudpods 服务，如果想在生产环境部署高可用集群请参考: &lt;a href="../ha/">高可用安装&lt;/a> 。
&lt;/div>
&lt;h2 id="环境准备">环境准备&lt;/h2>
&lt;h3 id="机器配置要求">机器配置要求&lt;/h3>
&lt;ul>
&lt;li>操作系统: 根据 CPU 架构不同，支持的发行版也不一样
&lt;ul>
&lt;li>X86_64: &lt;a href="http://isoredirect.centos.org/centos/7/isos/x86_64/">CentOS 7&lt;/a>&lt;/li>
&lt;li>ARM64: &lt;a href="https://www.debian.org/releases/stable/arm64/">Debian 10(buster)&lt;/a> 或者 &lt;a href="https://www.chinauos.com/">统信 UOS&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>最低配置要求: CPU 4核, 内存 8GiB, 存储 100GiB&lt;/li>
&lt;li>虚拟机和服务使用的存储路径都在 &lt;strong>/opt&lt;/strong> 目录下，所以理想环境下建议单独给 &lt;strong>/opt&lt;/strong> 目录设置挂载点
&lt;ul>
&lt;li>比如把 /dev/sdb1 单独分区做 ext4 然后通过 /etc/fstab 挂载到 /opt 目录&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>以下为待部署机器的环境:&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th style="text-align:center">IP&lt;/th>
&lt;th style="text-align:center">登录用户&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td style="text-align:center">10.168.26.216&lt;/td>
&lt;td style="text-align:center">root&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;div class="alert alert-primary" role="alert">
&lt;h4 class="alert-heading">提示&lt;/h4>
&lt;blockquote>
&lt;p>10.168.26.216 是本次测试环境的 IP，请根据自己的环境做相应修改。&lt;/p>
&lt;/blockquote>
&lt;/div>
&lt;h3 id="本地环境配置要求">本地环境配置要求&lt;/h3>
&lt;p>本地环境即用户进行实际操作部署的环境。本次测试的本地环境为 MAC 操作系统的笔记本，也可在待部署机器上进行操作。&lt;/p>
&lt;ul>
&lt;li>ssh: 开启 ssh 免密登录&lt;/li>
&lt;li>本地环境安装部署 ansbile（Windows操作系统不支持安装 ansible）&lt;/li>
&lt;/ul>
&lt;h4 id="配置-ssh-免密登录">配置 ssh 免密登录&lt;/h4>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">&lt;span style="color:#8f5902;font-style:italic"># 生成本机的 ssh 秘钥 (如果本地已有 ~/.ssh/id_rsa.pub 则跳过此步骤)&lt;/span>
$ ssh-keygen
&lt;span style="color:#8f5902;font-style:italic"># 将生成的 ~/.ssh/id_rsa.pub 公钥拷贝到待部署机器&lt;/span>
$ ssh-copy-id -i ~/.ssh/id_rsa.pub root@10.168.26.216
&lt;span style="color:#8f5902;font-style:italic"># 尝试免密登录待部署机器，应该不需要输入登录密码即可拿到部署机器的 hostname&lt;/span>
$ ssh root@10.168.26.216 &lt;span style="color:#4e9a06">&amp;#34;hostname&amp;#34;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="安装ansible和git">安装ansible和git&lt;/h4>
&lt;p>首先需要安装ansible和git&lt;/p>
&lt;ul class="nav nav-tabs" id="ocboot_install" role="tablist">&lt;li class="nav-item">&lt;a data-toggle="tab" class="nav-link active" href="#ocboot_install-0" role="tab" aria-controls="ocboot_install-0" aria-selected="true">CentOS 7&lt;/a>&lt;/li>
&lt;li class="nav-item">&lt;a data-toggle="tab" class="nav-link" href="#ocboot_install-1" role="tab" aria-controls="ocboot_install-1">Debian 10&lt;/a>&lt;/li>
&lt;li class="nav-item">&lt;a data-toggle="tab" class="nav-link" href="#ocboot_install-2" role="tab" aria-controls="ocboot_install-2">其它操作系统&lt;/a>&lt;/li>&lt;/ul>
&lt;div class="tab-content" id="ocboot_install">&lt;div id="ocboot_install-0" class="tab-pane show active" role="tabpanel" aria-labelledby="ocboot_install-0">
&lt;p>&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">&lt;span style="color:#8f5902;font-style:italic"># 本地安装 ansible 和 git&lt;/span>
$ yum install -y epel-release ansible git
&lt;/code>&lt;/pre>&lt;/div>&lt;/div>
&lt;div id="ocboot_install-1" class="tab-pane" role="tabpanel" aria-labelledby="ocboot_install-1">
&lt;p>&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">&lt;span style="color:#8f5902;font-style:italic"># 本地安装 ansible 和 git&lt;/span>
$ apt install -y ansible git
&lt;/code>&lt;/pre>&lt;/div>&lt;/div>
&lt;div id="ocboot_install-2" class="tab-pane" role="tabpanel" aria-labelledby="ocboot_install-2">
&lt;p>&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">&lt;span style="color:#8f5902;font-style:italic"># 本地安装 ansible&lt;/span>
$ pip install ansible
&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;/div>
&lt;h2 id="安装cloudpods">安装Cloudpods&lt;/h2>
&lt;p>部署的工具是 &lt;a href="https://github.com/yunionio/ocboot">https://github.com/yunionio/ocboot&lt;/a> , 然后根据需要部署机器的配置， 利用 ansbile 远程登录到待部署的机器安装配置 Cloudpods 服务，以下操作都在本地环境上进行操作。操作步骤如下:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">&lt;span style="color:#8f5902;font-style:italic"># 下载 ocboot 工具到本地&lt;/span>
$ git clone https://github.com/yunionio/ocboot &lt;span style="color:#ce5c00;font-weight:bold">&amp;amp;&amp;amp;&lt;/span> &lt;span style="color:#204a87">cd&lt;/span> ./ocboot
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="快速部署">快速部署&lt;/h3>
&lt;p>可以直接执行run.py来快速部署一个AllInOne的Cloudpods实例，其中&amp;lt;host_ip&amp;gt;为部署所在主机的主IP地址。&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">$ ./run.py &amp;lt;host_ip&amp;gt;
&lt;/code>&lt;/pre>&lt;/div>&lt;p>这种方式其实是自动在当前目录生成一个名为config-allinone-current.yaml的配置文件，基于该配置文件的参数来执行部署。&lt;/p>
&lt;h3 id="自定义配置部署">自定义配置部署&lt;/h3>
&lt;p>也可以我们手工编辑一个配置文件，基于该配置文件，采用run.py来实现部署。&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">&lt;span style="color:#8f5902;font-style:italic"># 编写 config-allinone.yml 文件&lt;/span>
$ cat &lt;span style="color:#4e9a06">&amp;lt;&amp;lt;EOF &amp;gt;./config-allinone.yml
&lt;/span>&lt;span style="color:#4e9a06"># mariadb_node 表示需要部署 mariadb 服务的节点
&lt;/span>&lt;span style="color:#4e9a06">mariadb_node:
&lt;/span>&lt;span style="color:#4e9a06"> # 待部署节点 ip
&lt;/span>&lt;span style="color:#4e9a06"> hostname: 10.168.26.216
&lt;/span>&lt;span style="color:#4e9a06"> # 待部署节点登录用户
&lt;/span>&lt;span style="color:#4e9a06"> user: root
&lt;/span>&lt;span style="color:#4e9a06"> # mariadb 的用户
&lt;/span>&lt;span style="color:#4e9a06"> db_user: root
&lt;/span>&lt;span style="color:#4e9a06"> # mariadb 用户密码
&lt;/span>&lt;span style="color:#4e9a06"> db_password: your-sql-password
&lt;/span>&lt;span style="color:#4e9a06"># primary_master_node 表示运行 k8s 和 Cloudpods 服务的节点
&lt;/span>&lt;span style="color:#4e9a06">primary_master_node:
&lt;/span>&lt;span style="color:#4e9a06"> hostname: 10.168.26.216
&lt;/span>&lt;span style="color:#4e9a06"> user: root
&lt;/span>&lt;span style="color:#4e9a06"> # 数据库连接地址
&lt;/span>&lt;span style="color:#4e9a06"> db_host: 10.168.26.216
&lt;/span>&lt;span style="color:#4e9a06"> # 数据库用户
&lt;/span>&lt;span style="color:#4e9a06"> db_user: root
&lt;/span>&lt;span style="color:#4e9a06"> # 数据库密码
&lt;/span>&lt;span style="color:#4e9a06"> db_password: your-sql-password
&lt;/span>&lt;span style="color:#4e9a06"> # k8s 控制节点的 ip
&lt;/span>&lt;span style="color:#4e9a06"> controlplane_host: 10.168.26.216
&lt;/span>&lt;span style="color:#4e9a06"> # k8s 控制节点的端口
&lt;/span>&lt;span style="color:#4e9a06"> controlplane_port: &amp;#34;6443&amp;#34;
&lt;/span>&lt;span style="color:#4e9a06"> # Cloudpods 版本
&lt;/span>&lt;span style="color:#4e9a06"> onecloud_version: v3.8.4
&lt;/span>&lt;span style="color:#4e9a06"> # Cloudpods 登录用户
&lt;/span>&lt;span style="color:#4e9a06"> onecloud_user: admin
&lt;/span>&lt;span style="color:#4e9a06"> # Cloudpods 登录用户密码
&lt;/span>&lt;span style="color:#4e9a06"> onecloud_user_password: admin@123
&lt;/span>&lt;span style="color:#4e9a06"> # 该节点作为 Cloudpods 私有云计算节点
&lt;/span>&lt;span style="color:#4e9a06"> as_host: true
&lt;/span>&lt;span style="color:#4e9a06"> # 启用 minio 作为后端对象存储
&lt;/span>&lt;span style="color:#4e9a06"> enable_minio: true
&lt;/span>&lt;span style="color:#4e9a06">EOF&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>当填写完 config-allinone.yml 部署配置文件后，便可以执行 ocboot 里面的 &lt;code>./run.py ./config-allinone.yml&lt;/code> 部署集群了。&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">&lt;span style="color:#8f5902;font-style:italic"># 开始部署&lt;/span>
$ ./run.py ./config-allinone.yml
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="部署完成">部署完成&lt;/h2>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">....
&lt;span style="color:#8f5902;font-style:italic"># 部署完成后会有如下输出，表示运行成功&lt;/span>
&lt;span style="color:#8f5902;font-style:italic"># 浏览器打开 https://10.168.26.216&lt;/span>
&lt;span style="color:#8f5902;font-style:italic"># 使用 admin/admin@123 用户密码登录就能访问前端界面&lt;/span>
Initialized successfully!
Web page: https://10.168.26.216
User: admin
Password: admin@123
&lt;/code>&lt;/pre>&lt;/div>&lt;p>然后用浏览器访问 https://10.168.26.216 ，用户名输入 &lt;code>admin&lt;/code>，密码输入 &lt;code>admin@123&lt;/code> 就会进入 Cloudpods 的界面。&lt;/p>
&lt;p>&lt;img src="../images/index.png" alt="登录页">&lt;/p>
&lt;h2 id="开始使用cloudpods">开始使用Cloudpods&lt;/h2>
&lt;h3 id="创建第一台虚拟机">创建第一台虚拟机&lt;/h3>
&lt;p>通过如下三步创建出第一台虚拟机：&lt;/p>
&lt;h4 id="1-导入镜像">1. 导入镜像&lt;/h4>
&lt;p>浏览位于 &lt;a href="https://cloud.centos.org/centos/7/images/">CentOS 7云主机镜像&lt;/a> ，选择一个GenericCloud 镜像，拷贝镜像URL。&lt;/p>
&lt;p>在 &lt;code>主机&lt;/code> 菜单，选择 &lt;code>系统镜像&lt;/code>，选择 &lt;code>上传&lt;/code>。输入镜像名称，选择 &lt;code>输入镜像URL&lt;/code>，粘贴上述CentOS 7镜像URL，选择 &lt;code>确定&lt;/code>。&lt;/p>
&lt;p>可以访问 &lt;a href="https://docs.openstack.org/image-guide/obtain-images.html">https://docs.openstack.org/image-guide/obtain-images.html&lt;/a> 获得更多的虚拟机镜像。&lt;/p>
&lt;h4 id="2-创建网络vpc和ip子网">2. 创建网络（VPC和IP子网）&lt;/h4>
&lt;p>[新建VPC] 在 &lt;code>网络&lt;/code> 菜单，选择 &lt;code>VPC&lt;/code> 子菜单，选择 &lt;code>新建&lt;/code>。输入名称，例如 &lt;code>vpc0&lt;/code>，选择目标网段，例如 &lt;code>192.168.0.0/16&lt;/code>。点击 &lt;code>新建&lt;/code>。&lt;/p>
&lt;p>[新建IP子网] VPC创建完成后，选择 &lt;code>IP子网&lt;/code> 子菜单，选择 &lt;code>新建&lt;/code>。输入名称，例如 &lt;code>vnet0&lt;/code>，选择VPC为刚才创建的VPC &lt;code>vpc0&lt;/code>，选择可用区，输入 &lt;code>子网网段&lt;/code>，例如 &lt;code>192.168.100.0/24&lt;/code>。点击 &lt;code>新建&lt;/code>。&lt;/p>
&lt;h4 id="3-创建虚拟机">3. 创建虚拟机&lt;/h4>
&lt;p>在 &lt;code>主机&lt;/code> 菜单，选择 &lt;code>虚拟机&lt;/code>，选择 &lt;code>新建&lt;/code>。在此界面输入主机名，选择镜像和IP子网，创建虚拟机。&lt;/p>
&lt;h3 id="导入公有云或者其它私有云平台资源">导入公有云或者其它私有云平台资源&lt;/h3>
&lt;p>Cloudpods自身是一个完整的私有云，同时也可以统一纳管其他云平台的资源。&lt;/p>
&lt;p>在 &lt;code>多云管理&lt;/code> 菜单，选择 &lt;code>云账号&lt;/code> 并新建，根据自己的需求填写对应云平台的认证信息，配置完云账号后 Cloudpods 服务就会同步相应云平台的资源，同步完成后即可在前端查看。&lt;/p>
&lt;p>&lt;img src="../images/cloudaccount.png" alt="多云管理">&lt;/p>
&lt;h2 id="faq">FAQ&lt;/h2>
&lt;h3 id="1-在-all-in-one-中找不到虚拟机界面">1. 在 All in One 中找不到虚拟机界面？&lt;/h3>
&lt;p>All in One 部署的节点会部署 Cloudpods host 计算服务，作为宿主机，具有创建和管理私有云虚拟机的能力。没有虚拟机界面应该是 Cloudpods 环境中没有启用宿主机。&lt;/p>
&lt;p>请到 &lt;code>管理后台&lt;/code> 界面，点击 &lt;code>主机/基础资源/宿主机&lt;/code> 查看宿主机列表，启用相应的宿主机，刷新界面就会出现虚拟机界面。&lt;/p>
&lt;div class="alert alert-warning" role="alert">
&lt;h4 class="alert-heading">注意&lt;/h4>
&lt;p>如果要使用 Cloudpods 私有云虚拟机，需要宿主机使用 Cloudpods 编译的内核，可使用以下命令查看宿主机是否使用 Cloudpods 内核(包含 yn 关键字)。&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">&lt;span style="color:#8f5902;font-style:italic"># 查看是否使用 yn 内核&lt;/span>
$ uname -a &lt;span style="color:#000;font-weight:bold">|&lt;/span> grep yn
Linux office-controller 3.10.0-1160.6.1.el7.yn20201125.x86_64
&lt;span style="color:#8f5902;font-style:italic"># 如果内核不是带有 yn 关键字的版本，可能是第一次使用 ocboot 安装，重启即可进入 yn 内核&lt;/span>
$ reboot
&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;p>&lt;img src="../images/host.png" alt="宿主机">&lt;/p>
&lt;h3 id="2-修改节点的-hostname-有些服务启动失败">2. 修改节点的 hostname ，有些服务启动失败&lt;/h3>
&lt;p>k8s 管理节点，依赖于 hostname，请改回去。&lt;/p>
&lt;h3 id="3-如何重装">3. 如何重装&lt;/h3>
&lt;ol>
&lt;li>
&lt;p>重新运行 ocboot 的脚本&lt;/p>
&lt;/li>
&lt;li>
&lt;p>等待运行完毕，使用&lt;code>kubectl edit deployment onecloud-operator -n onecloud&lt;/code>加入下列参数，然后保存关闭。&lt;/p>
&lt;/li>
&lt;/ol>
&lt;p>&lt;img src="../images/oo_syncuser.png" alt="">&lt;/p>
&lt;ol start="3">
&lt;li>第2步的修改，会影响 onecloud-operator 的性能，所以等所有服务启动，可以将第2步的参数恢复。&lt;/li>
&lt;/ol>
&lt;h3 id="4-其它问题">4. 其它问题？&lt;/h3>
&lt;p>其它问题欢迎在 Cloudpods github issues 界面提交: &lt;a href="https://github.com/yunionio/cloudpods/issues">https://github.com/yunionio/cloudpods/issues&lt;/a> , 我们会尽快回复。&lt;/p></description></item><item><title>Docs: 高可用安装</title><link>https://www.cloudpods.org/zh/docs/quickstart/ha/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.cloudpods.org/zh/docs/quickstart/ha/</guid><description>
&lt;h2 id="环境准备">环境准备&lt;/h2>
&lt;p>关于环境的准备和不同架构 CPU 操作系统的要求，请参考 &lt;a href="../allinone#%E6%9C%BA%E5%99%A8%E9%85%8D%E7%BD%AE%E8%A6%81%E6%B1%82">All in One 安装/机器配置要求&lt;/a>。&lt;/p>
&lt;p>假设准备好了 3 台 CentOS7 机器，以及 1 台 Mariadb/MySQL 的机器，规划如下：&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>role&lt;/th>
&lt;th>ip&lt;/th>
&lt;th>interface&lt;/th>
&lt;th>note&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>k8s primary&lt;/td>
&lt;td>10.127.90.101&lt;/td>
&lt;td>eth0&lt;/td>
&lt;td>-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>k8s master 1&lt;/td>
&lt;td>10.127.90.102&lt;/td>
&lt;td>eth0&lt;/td>
&lt;td>-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>k8s master 2&lt;/td>
&lt;td>10.127.90.103&lt;/td>
&lt;td>eth0&lt;/td>
&lt;td>-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>k8s VIP&lt;/td>
&lt;td>10.127.190.10&lt;/td>
&lt;td>-&lt;/td>
&lt;td>-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>DB&lt;/td>
&lt;td>10.127.190.11&lt;/td>
&lt;td>-&lt;/td>
&lt;td>pswd=&amp;ldquo;0neC1oudDB#&amp;rdquo;, port=3306&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>其中 DB 的部署目前是不归 ocboot 部署工具管理的，需要提前手动部署，高可用的数据库部署可以参考文档 &lt;a href="../../setup/db-ha">部署 DB HA 环境&lt;/a> 。&lt;/p>
&lt;h2 id="开始安装">开始安装&lt;/h2>
&lt;h3 id="下载-ocboot">下载 ocboot&lt;/h3>
&lt;p>参考 &lt;a href="../allinone/#%E4%B8%8B%E8%BD%BD-ocboot">All in One 安装/下载 ocboot&lt;/a>。&lt;/p>
&lt;h3 id="编写部署配置">编写部署配置&lt;/h3>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">&lt;span style="color:#8f5902;font-style:italic"># 填充变量，生成配置&lt;/span>
&lt;span style="color:#000">DB_IP&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;10.127.190.11&amp;#34;&lt;/span>
&lt;span style="color:#000">DB_PORT&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">3306&lt;/span>
&lt;span style="color:#000">DB_PSWD&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;0neC1oudDB#&amp;#34;&lt;/span>
&lt;span style="color:#000">DB_USER&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>root
&lt;span style="color:#000">K8S_VIP&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>10.127.190.10
&lt;span style="color:#000">PRIMARY_INTERFACE&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;eth0&amp;#34;&lt;/span>
&lt;span style="color:#000">PRIMARY_IP&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>10.127.90.101
&lt;span style="color:#000">MASTER_1_INTERFACE&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;eth0&amp;#34;&lt;/span>
&lt;span style="color:#000">MASTER_1_IP&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>10.127.90.102
&lt;span style="color:#000">MASTER_2_INTERFACE&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;eth0&amp;#34;&lt;/span>
&lt;span style="color:#000">MASTER_2_IP&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>10.127.90.103
cat &amp;gt; config-k8s-ha.yml &lt;span style="color:#4e9a06">&amp;lt;&amp;lt;EOF
&lt;/span>&lt;span style="color:#4e9a06">primary_master_node:
&lt;/span>&lt;span style="color:#4e9a06"> hostname: $PRIMARY_IP
&lt;/span>&lt;span style="color:#4e9a06"> use_local: false
&lt;/span>&lt;span style="color:#4e9a06"> user: root
&lt;/span>&lt;span style="color:#4e9a06"> onecloud_version: &amp;#34;v3.8.4&amp;#34;
&lt;/span>&lt;span style="color:#4e9a06"> db_host: $DB_IP
&lt;/span>&lt;span style="color:#4e9a06"> db_user: &amp;#34;$DB_USER&amp;#34;
&lt;/span>&lt;span style="color:#4e9a06"> db_password: &amp;#34;$DB_PSWD&amp;#34;
&lt;/span>&lt;span style="color:#4e9a06"> db_port: &amp;#34;$DB_PORT&amp;#34;
&lt;/span>&lt;span style="color:#4e9a06"> skip_docker_config: true
&lt;/span>&lt;span style="color:#4e9a06"> image_repository: registry.cn-beijing.aliyuncs.com/yunionio
&lt;/span>&lt;span style="color:#4e9a06"> ha_using_local_registry: false
&lt;/span>&lt;span style="color:#4e9a06"> node_ip: &amp;#34;$PRIMARY_IP&amp;#34;
&lt;/span>&lt;span style="color:#4e9a06"> ip_autodetection_method: &amp;#34;can-reach=$PRIMARY_IP&amp;#34;
&lt;/span>&lt;span style="color:#4e9a06"> controlplane_host: $K8S_VIP
&lt;/span>&lt;span style="color:#4e9a06"> controlplane_port: &amp;#34;6443&amp;#34;
&lt;/span>&lt;span style="color:#4e9a06"> as_host: true
&lt;/span>&lt;span style="color:#4e9a06"> high_availability: true
&lt;/span>&lt;span style="color:#4e9a06"> use_ee: false
&lt;/span>&lt;span style="color:#4e9a06"> enable_minio: true
&lt;/span>&lt;span style="color:#4e9a06"> registry_mirrors:
&lt;/span>&lt;span style="color:#4e9a06"> - https://lje6zxpk.mirror.aliyuncs.com
&lt;/span>&lt;span style="color:#4e9a06"> insecure_registries:
&lt;/span>&lt;span style="color:#4e9a06"> - $PRIMARY_IP:5000
&lt;/span>&lt;span style="color:#4e9a06"> host_networks: &amp;#34;$PRIMARY_INTERFACE/br0/$PRIMARY_IP&amp;#34;
&lt;/span>&lt;span style="color:#4e9a06">
&lt;/span>&lt;span style="color:#4e9a06">master_nodes:
&lt;/span>&lt;span style="color:#4e9a06"> controlplane_host: $K8S_VIP
&lt;/span>&lt;span style="color:#4e9a06"> controlplane_port: &amp;#34;6443&amp;#34;
&lt;/span>&lt;span style="color:#4e9a06"> as_controller: true
&lt;/span>&lt;span style="color:#4e9a06"> as_host: true
&lt;/span>&lt;span style="color:#4e9a06"> ntpd_server: &amp;#34;$PRIMARY_IP&amp;#34;
&lt;/span>&lt;span style="color:#4e9a06"> registry_mirrors:
&lt;/span>&lt;span style="color:#4e9a06"> - https://lje6zxpk.mirror.aliyuncs.com
&lt;/span>&lt;span style="color:#4e9a06"> high_availability: true
&lt;/span>&lt;span style="color:#4e9a06"> hosts:
&lt;/span>&lt;span style="color:#4e9a06"> - user: root
&lt;/span>&lt;span style="color:#4e9a06"> hostname: &amp;#34;$MASTER_1_IP&amp;#34;
&lt;/span>&lt;span style="color:#4e9a06"> host_networks: &amp;#34;$MASTER_1_INTERFACE/br0/$MASTER_1_IP&amp;#34;
&lt;/span>&lt;span style="color:#4e9a06"> - user: root
&lt;/span>&lt;span style="color:#4e9a06"> hostname: &amp;#34;$MASTER_2_IP&amp;#34;
&lt;/span>&lt;span style="color:#4e9a06"> host_networks: &amp;#34;$MASTER_2_INTERFACE/br0/$MASTER_2_IP&amp;#34;
&lt;/span>&lt;span style="color:#4e9a06">EOF&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="开始部署">开始部署&lt;/h3>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">$ ./ocboot.py install ./config-k8s-ha.yml
&lt;/code>&lt;/pre>&lt;/div>&lt;p>等待部署完成后，就可以使用浏览器访问 https://10.127.190.10 (VIP), 输入用户名 &lt;code>admin&lt;/code> 和密码 &lt;code>admin@123&lt;/code>，进入前端。&lt;/p>
&lt;p>另外部署完成后，可以给已有集群添加节点，参考文档：&lt;a href="../../setup/host">添加计算节点&lt;/a>。&lt;/p></description></item><item><title>Docs: 多节点安装(已废弃)</title><link>https://www.cloudpods.org/zh/docs/quickstart/nodes/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.cloudpods.org/zh/docs/quickstart/nodes/</guid><description>
&lt;div class="alert alert-warning" role="alert">
&lt;h4 class="alert-heading">注意&lt;/h4>
&lt;p>多节点安装的内容已经废弃，不提倡使用这种方式，推荐用户先参考 &lt;a href="../allinone">All in One 安装&lt;/a> 或者 &lt;a href="../ha">高可用安装&lt;/a> 把集群搭建好，然后再使用 &lt;a href="../../setup/host">添加计算节点&lt;/a> 的方式添加计算节点到集群。&lt;/p>
&lt;p>以下内容只是作为保留作为参考。&lt;/p>
&lt;/div>
&lt;p>多节点安装和 &lt;a href="../allinone">All in One 安装&lt;/a> 一样，都使用 &lt;a href="https://github.com/yunionio/ocboot">https://github.com/yunionio/ocboot&lt;/a> 这个部署工具，根据配置执行 ansible playbook 部署节点。&lt;/p>
&lt;h2 id="环境准备">环境准备&lt;/h2>
&lt;p>关于环境的准备和不同架构 CPU 操作系统的要求，请参考 &lt;a href="../allinone#%E6%9C%BA%E5%99%A8%E9%85%8D%E7%BD%AE%E8%A6%81%E6%B1%82">All in One 安装/机器配置要求&lt;/a>。&lt;/p>
&lt;p>以下为待部署机器的环境，假设已经准备好了 5 台机器，IP 分别是 10.127.10.156-160 ，各个节点做出以下角色规划：&lt;/p>
&lt;ul>
&lt;li>mariadb_node: 这个角色表示该节点上部署并运行 mariadb 数据库服务，该角色不一定要写在配置中，如果环境中有准备好的数据库，也可以不部署
&lt;ul>
&lt;li>节点: 10.127.10.156&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>primary_master_node: 这个角色表示该节点是第一个部署并运行 k8s master 组件的节点，该角色必须存在于配置中，该角色运行 onecloud 控制服务
&lt;ul>
&lt;li>节点: 10.127.10.156&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>master_nodes: 这个角色表示这些节点运行控制服务，该角色可选，主要作用是和 primary_master_node 一起组成 Kubernetes 的 etcd 3 节点高可用
&lt;ul>
&lt;li>节点: 10.127.10.157-158&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>worker_nodes: 这个角色表示这些节点运行私有云计算服务，该角色可选，如果不需要内置的私有云功能，可以不配置
&lt;ul>
&lt;li>节点: 10.127.10.159-160&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th style="text-align:center">IP&lt;/th>
&lt;th style="text-align:center">登录用户&lt;/th>
&lt;th>角色&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td style="text-align:center">10.127.10.156&lt;/td>
&lt;td style="text-align:center">root&lt;/td>
&lt;td>mariadb_node &amp;amp; primary_master_node&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">10.127.10.157-158&lt;/td>
&lt;td style="text-align:center">root&lt;/td>
&lt;td>master_nodes&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">10.127.10.159-160&lt;/td>
&lt;td style="text-align:center">root&lt;/td>
&lt;td>worker_nodes&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="开始安装">开始安装&lt;/h2>
&lt;h3 id="下载-ocboot">下载 ocboot&lt;/h3>
&lt;p>参考 &lt;a href="../allinone/#%E4%B8%8B%E8%BD%BD-ocboot">All in One 安装/下载 ocboot&lt;/a>。&lt;/p>
&lt;h3 id="编写部署配置">编写部署配置&lt;/h3>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">&lt;span style="color:#8f5902;font-style:italic"># 编写 config-nodes.yml 文件&lt;/span>
$ cat &lt;span style="color:#4e9a06">&amp;lt;&amp;lt;EOF &amp;gt;./config-nodes.yml
&lt;/span>&lt;span style="color:#4e9a06">mariadb_node:
&lt;/span>&lt;span style="color:#4e9a06"> hostname: 10.127.10.156
&lt;/span>&lt;span style="color:#4e9a06"> user: root
&lt;/span>&lt;span style="color:#4e9a06"> db_user: root
&lt;/span>&lt;span style="color:#4e9a06"> db_password: your-sql-password
&lt;/span>&lt;span style="color:#4e9a06">primary_master_node:
&lt;/span>&lt;span style="color:#4e9a06"> onecloud_version: v3.8.4
&lt;/span>&lt;span style="color:#4e9a06"> hostname: 10.127.10.156
&lt;/span>&lt;span style="color:#4e9a06"> user: root
&lt;/span>&lt;span style="color:#4e9a06"> db_host: 10.127.10.156
&lt;/span>&lt;span style="color:#4e9a06"> db_user: root
&lt;/span>&lt;span style="color:#4e9a06"> db_password: your-sql-password
&lt;/span>&lt;span style="color:#4e9a06"> controlplane_host: 10.127.10.156
&lt;/span>&lt;span style="color:#4e9a06"> controlplane_port: &amp;#34;6443&amp;#34;
&lt;/span>&lt;span style="color:#4e9a06">master_nodes:
&lt;/span>&lt;span style="color:#4e9a06"> hosts:
&lt;/span>&lt;span style="color:#4e9a06"> - hostname: 10.127.10.157
&lt;/span>&lt;span style="color:#4e9a06"> user: root
&lt;/span>&lt;span style="color:#4e9a06"> - hostname: 10.127.10.158
&lt;/span>&lt;span style="color:#4e9a06"> user: root
&lt;/span>&lt;span style="color:#4e9a06"> controlplane_host: 10.127.10.156
&lt;/span>&lt;span style="color:#4e9a06"> controlplane_port: &amp;#34;6443&amp;#34;
&lt;/span>&lt;span style="color:#4e9a06">worker_nodes:
&lt;/span>&lt;span style="color:#4e9a06"> hosts:
&lt;/span>&lt;span style="color:#4e9a06"> - hostname: 10.127.10.159
&lt;/span>&lt;span style="color:#4e9a06"> user: root
&lt;/span>&lt;span style="color:#4e9a06"> - hostname: 10.127.10.160
&lt;/span>&lt;span style="color:#4e9a06"> user: root
&lt;/span>&lt;span style="color:#4e9a06"> controlplane_host: 10.127.10.156
&lt;/span>&lt;span style="color:#4e9a06"> controlplane_port: &amp;#34;6443&amp;#34;
&lt;/span>&lt;span style="color:#4e9a06">EOF&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="开始部署">开始部署&lt;/h3>
&lt;p>当填写完 config-nodes.yml 部署配置文件后，便可以执行 ocboot 里面的 &lt;code>./run.py ./config-nodes.yml&lt;/code> 部署集群了。&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">&lt;span style="color:#8f5902;font-style:italic"># 开始部署&lt;/span>
$ ./run.py ./config-nodes.yml
&lt;/code>&lt;/pre>&lt;/div>&lt;p>等待部署完成后，就可以使用浏览器访问 https://10.168.26.216 (primary_master_node 的 IP), 输入用户名 &lt;code>admin&lt;/code> 和密码 &lt;code>admin@123&lt;/code>，进入前端。&lt;/p>
&lt;p>然后就可以&lt;a href="../allinone/#%E5%88%9B%E5%BB%BA%E7%AC%AC%E4%B8%80%E5%8F%B0%E8%99%9A%E6%8B%9F%E6%9C%BA">创建私有云虚拟机&lt;/a>或者&lt;a href="../allinone/#%E5%AF%BC%E5%85%A5%E5%85%AC%E6%9C%89%E4%BA%91%E6%88%96%E8%80%85%E5%85%B6%E5%AE%83%E7%A7%81%E6%9C%89%E4%BA%91%E5%B9%B3%E5%8F%B0%E8%B5%84%E6%BA%90">纳管公有云资源&lt;/a>。&lt;/p></description></item></channel></rss>