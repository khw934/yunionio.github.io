<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Cloudpods –
网络</title><link>https://www.cloudpods.org/zh/docs/function_principle/onpremise/network/</link><description>Recent content in 网络 on Cloudpods</description><generator>Hugo -- gohugo.io</generator><lastBuildDate>Fri, 25 Jun 2021 10:53:20 +0800</lastBuildDate><atom:link href="https://www.cloudpods.org/zh/docs/function_principle/onpremise/network/index.xml" rel="self" type="application/rss+xml"/><item><title>Docs: 宿主机网络</title><link>https://www.cloudpods.org/zh/docs/function_principle/onpremise/network/host/</link><pubDate>Tue, 03 Aug 2021 10:53:20 +0800</pubDate><guid>https://www.cloudpods.org/zh/docs/function_principle/onpremise/network/host/</guid><description>
&lt;h2 id="经典网络">经典网络&lt;/h2>
&lt;p>宿主机内通过host服务的配置项networks（/etc/yunion/host.conf）指定宿主机的网络配置，该配置指定宿主机的指定物理网卡对应的二层网络，有两种配置方式：&lt;/p>
&lt;ul>
&lt;li>
&lt;p>网卡名称/网桥名称/网卡IP，例如：eth0/br0/192.168.222.10。这种配置模式告诉系统，宿主机的物理网卡eth0对接了192.168.222.10这个IP对应的IP子网对应的二层网络，并且将该物理网卡和网桥br0桥接。这种模式的物理网卡要被宿主机用来和外界通信，因此要配置一个有效的IP地址。在host服务启动时，会检测该IP是否配置在这个物理网卡上，如果不匹配，host服务会放弃启动。以此避免误配置该网卡。启动成功后，host服务会自动创建网桥，把物理网卡计入该网桥，并且把物理网卡上的IP配置信息迁移到网桥，以维持宿主机的正常网络通信。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>网卡名称/网桥名称/二层网络名称，例如：eth1/brpub/wire1。这种配置模式告诉系统，宿主机的物理网卡eth1对接了二层网络wire1，该网卡不需要配置有效IP地址，并且该物理网卡和网桥brpub桥接。这种模式的物理网卡不被宿主机用来通信，因此不需要显式地配置有效的IP地址。在host服务启动时，会检查该物理网卡是否没有IP，如果有IP，则会放弃启动。以此避免误操作。启动成功后，会自动创建网桥，把物理网卡加入该网桥，并且会自动分配一个169.254.0.0/16的IP给这个网桥。&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h3 id="宿主机网络配置对调度的影响">宿主机网络配置对调度的影响&lt;/h3>
&lt;p>当创建一台经典网络的虚拟机，调度器会查看虚拟机准备对接的IP子网，根据IP子网的二层网络过滤出对接的宿主机，把这些宿主机作为候选宿主机。&lt;/p>
&lt;h3 id="vlan支持">VLAN支持&lt;/h3>
&lt;p>Cloudpods经典网络支持VLAN（802.1Q）。同一个经典网络下的二层网络的IP子网可以归属于不同的VLAN，这时需要设置IP子网的VLAN ID。IP子网的VLAN ID默认为1。&lt;/p>
&lt;p>当一个IP子网的VLAN ID不为1时，则虚拟机接入该IP子网的网络接口将自动加入该VLAN。其底层实现原理为，在把虚拟机的虚拟网络接口加入OVS网桥时，设置该接口的VLAN tag为指定tag。为了允许一台宿主机上的虚拟机能够加入不同的VLAN，需要将宿主机的物理网口设置为Trunk模式，以允许同一条物理链路上不同VLAN tag的报文能够同时通过。&lt;/p>
&lt;img src="../vm_vlan_access.png" width="500">
&lt;h4 id="host-vlan">Host VLAN&lt;/h4>
&lt;p>为了允许虚拟机接入不同的VLAN，宿主机对应的网络接口必须以TRUNK模式接入交换机。这时，如果宿主机也需要通过该网络接口通信，则需要根据情况进行设置。1）如果宿主机该网络接口的VLAN ID为默认VLAN（VLAN=1）时，则宿主机不需要做特殊配置。2）如果宿主机该网络接口的VLAN ID不为1，则有两种解决方案：&lt;/p>
&lt;p>（1）为该网络接口设置一个VLAN tag为宿主机VLAN的别名网口(Alias Interface)，将宿主机的IP地址配置在该别名网口上，宿主机将使用该别名网口通信。&lt;/p>
&lt;img src="../host_alias_vlan_nic.png" width="500">
&lt;p>以物理机的网口为em1，VLAN ID为100，em1的虚拟机网桥br0为例，以下为配置脚本：&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">ip link add link em1 name em1.100 &lt;span style="color:#204a87">type&lt;/span> vlan id &lt;span style="color:#0000cf;font-weight:bold">100&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">&amp;amp;&amp;amp;&lt;/span> ip addr flush dev br0 &lt;span style="color:#ce5c00;font-weight:bold">&amp;amp;&amp;amp;&lt;/span> ip addr add 10.192.4.20/22 dev em1.100 &lt;span style="color:#ce5c00;font-weight:bold">&amp;amp;&amp;amp;&lt;/span> ip link &lt;span style="color:#204a87">set&lt;/span> dev em1.100 up
&lt;/code>&lt;/pre>&lt;/div>&lt;p>（2）在交换机设置该trunk接口的默认VLAN ID为宿主机的VLAN ID。&lt;/p>
&lt;h4 id="brtrunk模式">BRTRUNK模式&lt;/h4>
&lt;p>在某些应用场景，例如用户在虚拟机内通过macvlan或网桥等技术为多个容器提供接入网络，用户可能有需要在虚拟机同一个网口虚拟多个vlan接口，发送多个VLAN tag的报文，这种情况下，需要做如下特殊设置，才能允许虚拟机的一个网口发送携带多个不同VLAN tag的报文：&lt;/p>
&lt;p>1）该网口对应的IP子网的VLAN ID为1（默认VLAN），这样从该网口发出的报文只会被OVS网桥透明转发，不会再打上VLAN tag。
2）该虚拟机需要关闭“源IP和MAC地址检查”（在主机菜单：网络与安全-设置源/目标检查）。
3）宿主机对应网口为trunk模式。
4）交换机在对应网口放行对应的VLAN tag。&lt;/p>
&lt;img src="../brtrunk.png" width="500">
&lt;h2 id="vpc网络">VPC网络&lt;/h2>
&lt;p>在host服务启动后，会在宿主机内创建用于vpc通信的网桥（默认名称为brvpc），所有对接VPC网络的虚拟机的虚拟网卡都要加入这个网桥。&lt;/p></description></item><item><title>Docs: 裸金属网络</title><link>https://www.cloudpods.org/zh/docs/function_principle/onpremise/network/baremetal/</link><pubDate>Tue, 03 Aug 2021 10:53:20 +0800</pubDate><guid>https://www.cloudpods.org/zh/docs/function_principle/onpremise/network/baremetal/</guid><description>
&lt;p>目前，裸金属服务器只能使用经典网络。&lt;/p>
&lt;h2 id="经典网络">经典网络&lt;/h2>
&lt;p>一台裸金属服务器有多个网卡，系统需要检测出这台裸金属的每个网口跟哪个二层网络对接，这样在分配裸金属服务器时，才能根据二层网络信息选择正确的IP子网。&lt;/p>
&lt;p>系统通过两种方式探测裸金属的网卡对接的二层网络：&lt;/p>
&lt;ul>
&lt;li>
&lt;p>自动探测：在裸金属的prepare阶段，裸金属会自动设置每个网卡进行dhcp探测，当这个网卡所在网络的交换机配置了dhcp relay，则会把发出的dhcp请求转发到baremetal agent。baremetal Agent根据dhcp报文的来源IP找到匹配的IP子网，从而判断出该物理机网卡归属的二层子网。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>手动设置：通过执行climc命令或者在前端界面，可以设置裸金属服务每个网卡对应的二层网络。&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>对应的climc命令为：&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">climc host-add-netif &amp;lt;host_id&amp;gt; &amp;lt;wire_id&amp;gt; &amp;lt;mac&amp;gt; &amp;lt;index&amp;gt;
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="裸金属网络配置对调度的影响">裸金属网络配置对调度的影响&lt;/h3>
&lt;p>当用户申请一台裸金属服务器，并给定裸金属服务器对接的IP子网信息时，调度器会过滤出物理网口对接了该IP子网对应的二层网络的裸金属，作为候选。&lt;/p>
&lt;p>如果用户申请的裸金属服务器的网卡要做bonding，则调度器会选择同时具有两个网卡，并且两个网卡都对接了指定IP子网对应的二层网络。
如果不存在这样的物理机，则会报调度失败的错误。&lt;/p></description></item><item><title>Docs: 域名设置</title><link>https://www.cloudpods.org/zh/docs/function_principle/onpremise/network/dns/</link><pubDate>Tue, 03 Aug 2021 10:53:20 +0800</pubDate><guid>https://www.cloudpods.org/zh/docs/function_principle/onpremise/network/dns/</guid><description>
&lt;p>Cloudpods 虚拟机的域名涉及如下几个服务：&lt;/p>
&lt;ul>
&lt;li>region负责生成虚拟机的域名信息&lt;/li>
&lt;li>host负责通过dhcp将域名信息注入到虚拟机内&lt;/li>
&lt;li>region_dns负责虚拟机之间的域名解析，实现基于主机名和主机IP的解析。&lt;/li>
&lt;/ul>
&lt;p>每台虚拟机都需要配置其域名解析服务器和域名解析地址前缀，这两个信息是由region生成，并且同步到host，最后通过dhcp下发到虚拟机内部。&lt;/p>
&lt;p>region服务提供如下两个配置项指定虚拟机的dns服务器地址和搜索域名后缀&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>配置选项&lt;/th>
&lt;th>说明&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>dns_server&lt;/td>
&lt;td>全局的dns服务器地址，默认为该集群内region_dns所在节点的IP&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>dns_domain&lt;/td>
&lt;td>全局的dns搜索后缀，默认值为 cloud.onecloud.io&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>同时，每个IP子网都有两个属性，用于override全局的region配置选项，提供个性化的域名服务器和后缀&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>属性&lt;/th>
&lt;th>说明&lt;/th>
&lt;th>默认值&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>guest_dns&lt;/td>
&lt;td>该IP子网的虚拟机的域名解析服务器地址&lt;/td>
&lt;td>region的dns_server选项&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>guest_domain&lt;/td>
&lt;td>该IP子网的虚拟机的域名后缀&lt;/td>
&lt;td>region的dns_domain选项&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table></description></item><item><title>Docs: VPC网络</title><link>https://www.cloudpods.org/zh/docs/function_principle/onpremise/network/vpc/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.cloudpods.org/zh/docs/function_principle/onpremise/network/vpc/</guid><description>
&lt;p>平台内置私有云提供VPC网络功能，并支持将经典网络的IP子网网段作为弹性公网IP池使用，供VPC内的虚拟机与外界访问。&lt;/p></description></item><item><title>Docs: 典型网络配置</title><link>https://www.cloudpods.org/zh/docs/function_principle/onpremise/network/examples/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.cloudpods.org/zh/docs/function_principle/onpremise/network/examples/</guid><description>
&lt;h2 id="单网口经典网络计算节点单个网口虚拟机使用多vlan经典网络">（单网口经典网络）计算节点单个网口，虚拟机使用多VLAN经典网络&lt;/h2>
&lt;p>这种场景下，每个计算节点只有一个网口(可以为Bonding)，既做管理口，也做业务口。虚拟机之间的业务流量是由宿主机对接的三层交换机转发。&lt;/p>
&lt;img src="../singleport.png" width="400">
&lt;h3 id="vpc配置">VPC配置&lt;/h3>
&lt;p>采用&lt;em>Default&lt;/em> VPC&lt;/p>
&lt;h3 id="二层网络配置">二层网络配置&lt;/h3>
&lt;p>在&lt;em>Default&lt;/em> VPC新建一个二层网络&lt;em>bcast0&lt;/em>&lt;/p>
&lt;h3 id="ip子网配置">IP子网配置&lt;/h3>
&lt;p>在二层网络&lt;em>bcast0&lt;/em>创建至少2个IP子网，其中一个IP子网给宿主机管理口使用，需要包含宿主机的管理口IP。另外一个子网给虚拟机用。可以配置更多的IP子网给虚拟机使用，并且这些虚拟机用IP子网可以配置不同的VLAN ID（非1的VLAN ID）。这些IP子网的网关以及对应的VLAN都需要配置在物理机连接的三层交换机上。&lt;/p>
&lt;h3 id="宿主机配置">宿主机配置&lt;/h3>
&lt;p>宿主机的网口在交换机上需要配置为trunk模式，宿主机管理口&lt;em>必须&lt;/em>采用默认VLAN ID。一般来说，默认VLAN ID 为 1。但目前交换机也支持为TRUNK口设置非1的VLAN ID，具体请参考交换机的配置手册。&lt;/p>
&lt;p>宿主机host.conf的networks配置：&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="color:#204a87;font-weight:bold">networks&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>- &lt;span style="color:#000">&amp;lt;host_ifname&amp;gt;/br0/&amp;lt;host_management_ip&amp;gt;&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>例如:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="color:#204a87;font-weight:bold">networks&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>- &lt;span style="color:#000">eth0/br0/10.168.20.2&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="宿主机管理口使用非1的vlan-id并且交换机不支持设置trunk口的默认vlan-id这种情况如何配置">宿主机管理口使用非1的VLAN ID，并且交换机不支持设置TRUNK口的默认VLAN ID，这种情况如何配置？&lt;/h4>
&lt;img src="../singleportvlan.png" width="400">
&lt;p>这种情况需要为宿主机设置一个VLAN子接口，宿主机使用这个VLAN子接口作为管理口，并且虚拟机交换机需要桥接到主接口上。下面以宿主机主接口为bond0，宿主机管理口的VLAN ID为3001为示例说明：&lt;/p>
&lt;p>1、在宿主机配置VLAN子接口 bond0.3001，配置如下：&lt;/p>
&lt;pre>&lt;code># /etc/sysconfig/network-scripts/ifcfg-bond0.3001
VLAN=yes
NAME=bond0.3001
DEVICE=bond0.3001
IPADDR=&amp;lt;management_ip&amp;gt;
PREFIX=&amp;lt;prefix&amp;gt;
DEFROUTE=yes
ONBOOT=yes
&lt;/code>&lt;/pre>&lt;ol start="2">
&lt;li>修改/etc/yunion/host.conf，设置如下:&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="color:#204a87;font-weight:bold">listen_interface&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">bond0.3001&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">networks&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>- &lt;span style="color:#000">bond0/br0/bcast0&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>需要注意的是，这种配置下，虚拟机将不能使用和宿主机相同的VLAN ID（这里是3001)。&lt;/p>
&lt;h3 id="eip配置">EIP配置&lt;/h3>
&lt;p>经典网络模式下，外部能直接访问虚拟机IP，无需配置EIP&lt;/p>
&lt;h2 id="单网口vpc网络-计算节点单个网口虚拟机使用vpc网络">(单网口VPC网络) 计算节点单个网口，虚拟机使用VPC网络&lt;/h2>
&lt;p>这种场景下，每个计算节点宿主机只有一个网口做管理口。管理口也承载业务流量，但是虚拟机之间的业务流量经过ovn的geneve隧道封装。&lt;/p>
&lt;h3 id="宿主机网络配置">宿主机网络配置&lt;/h3>
&lt;p>宿主机的管理口依然接入经典网络。&lt;/p>
&lt;p>需要在&lt;em>Default&lt;/em> VPC下配置二层网络&lt;em>bcast0&lt;/em>，并在该二层网络下配置宿主机管理口IP所用的IP子网。&lt;/p>
&lt;p>宿主机的 host.conf networks配置同&lt;em>单网口经典网络&lt;/em>模式&lt;/p>
&lt;p>例如，宿主机IP子网为 10.128.26.2。则宿主机的配置也是：&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="color:#204a87;font-weight:bold">networks&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>- &lt;span style="color:#000">eth0/br0/10.128.26.2&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="虚拟机网络配置">虚拟机网络配置&lt;/h3>
&lt;p>虚拟机的网络为VPC管理，用户可以任意创建VPC，并在VPC内分配任意的IP子网。不同VPC之间的IP子网之间相互隔离，无法访问。相同VPC内的IP子网之间无隔离。&lt;/p>
&lt;h3 id="eip配置-1">EIP配置&lt;/h3>
&lt;p>这种模式下，需要配置EIP，用于云平台外访问VPC内部的虚拟机。&lt;/p>
&lt;p>最简单的EIP配置是选择一台宿主机，修改/etc/yunion/host.conf，将 sdn_enable_eip_man 设置true。更具体配置方式请参见文档。使用ALL IN ONE模式安装的第一台宿主机自动开启了 sdn_enable_eip_man。&lt;/p>
&lt;h4 id="eip网关的路由配置">EIP网关的路由配置&lt;/h4>
&lt;p>为了使用EIP，还需要在平台bcast0下增加一条用于EIP分配的IP网段（注意EIP网段应该避免和宿主机的管理IP在同一个网段，也就是网络地址需要不一样，例如宿主机的管理网口是 10.168.22.2/24，则EIP网段是 10.168.23.0/24），在交换机上添加EIP网段的静态路由，NextHop设置为 ALL IN ONE 部署的第一台宿主机的管理口IP。&lt;/p>
&lt;h2 id="双网卡经典网络-计算节点两个网口虚拟机使用多vlan经典网络">(双网卡经典网络) 计算节点两个网口，虚拟机使用多VLAN经典网络&lt;/h2>
&lt;p>这种场景下，每个计算节点有两个网口，一个做管理口，另外一个做业务口。虚拟机之间的业务流量是由宿主机业务口对接的三层交换机转发。但也有部分虚拟机需要对接管理口。&lt;/p>
&lt;h3 id="vpc配置-1">VPC配置&lt;/h3>
&lt;p>采用Default VPC&lt;/p>
&lt;h3 id="二层网络配置-1">二层网络配置&lt;/h3>
&lt;p>在Default VPC新建两个二层网络：bcast0（管理）和bcast1（业务）&lt;/p>
&lt;h3 id="ip子网配置-1">IP子网配置&lt;/h3>
&lt;p>在bcast0上创建至少两个IP子网，其中一个IP子网给宿主机管理口使用，需要包含宿主机的管理口IP。另外一个子网给有对接管理网需求的虚拟机使用。&lt;/p>
&lt;p>在bcast1上创建1个或者多个IP子网给虚拟机使用，并且这些虚拟机用IP子网可以配置不同的VLAN ID（非1的VLAN ID）。这些IP子网的网关和对应VLAN都需要配置在物理机连接的对应三层交换机上。&lt;/p>
&lt;h3 id="宿主机配置-1">宿主机配置&lt;/h3>
&lt;p>宿主机的管理口需配置管理IP，该管理口在交换机上为Access模式。&lt;/p>
&lt;p>宿主机的业务口不需要配置IP，但业务网口在交换机上需要配置为trunk模式。&lt;/p>
&lt;p>宿主机 /etc/yunion/host.conf 中需要有两条记录，一条给管理口，一条给业务口&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="color:#204a87;font-weight:bold">networks&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>- &lt;span style="color:#000">&amp;lt;host_ifname0&amp;gt;/br0/&amp;lt;host_management_ip&amp;gt;&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>- &lt;span style="color:#000">&amp;lt;host_ifname1&amp;gt;/br1/bcast1&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>例如:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="color:#204a87;font-weight:bold">networks&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>- &lt;span style="color:#000">eth0/br0/10.168.20.2&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>- &lt;span style="color:#000">eth1/br1/bcast1&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="eip配置-2">EIP配置&lt;/h3>
&lt;p>这种模式下，外部能直接访问虚拟机IP，无需配置EIP&lt;/p>
&lt;h2 id="双网口vpc网络-计算节点两个网口虚拟机使用vpc网络">(双网口VPC网络) 计算节点两个网口，虚拟机使用VPC网络&lt;/h2>
&lt;p>这种场景下，每个计算节点宿主机有两个网口，其中一个管理口，承载管理流量。另外一个是业务口，承载业务流量。虚拟机之间的业务流量经过ovn的geneve隧道封装，通过宿主机的业务口转发。&lt;/p>
&lt;h3 id="宿主机网络配置-1">宿主机网络配置&lt;/h3>
&lt;p>同理，宿主机的管理口采用经典网络。&lt;/p>
&lt;p>需要在&lt;em>Default&lt;/em> VPC下配置二层网络&lt;em>bcast0&lt;/em>，并在该二层网络下配置宿主机管理口所用的IP子网。&lt;/p>
&lt;p>例如，宿主机IP子网为 10.128.26.2。则宿主机 /etc/yunion/host.conf 的配置是：&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="color:#204a87;font-weight:bold">networks&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>- &lt;span style="color:#000">eth0/br0/10.128.26.2&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>同时，宿主机的业务口也需要配置IP，且该业务口IP和管理口IP不应该在一个二层网络。&lt;/p>
&lt;p>为了确保虚拟机之前的ovn流量经过业务口，需要配置 /etc/yunion/host.conf 的 ovn_encap_ip 为宿主机业务口的IP。&lt;/p>
&lt;p>例如，宿主机的管理口IP为 10.128.26.2/24，业务口IP为 10.129.26.2/24，则 /etc/yunion/host.conf 配置为：&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="color:#204a87;font-weight:bold">ovn_encap_ip&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#0000cf;font-weight:bold">10.129.26.2&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">networks&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>- &lt;span style="color:#000">eth0/br0/10.128.26.2&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>- &lt;span style="color:#000">eth1/br1/10.129.26.2&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>配置后，虚拟机之前的VPC网络流量都会封装为源和目的IP地址为业务网段的geneve流量。网络上只需要确保业务口之前网络互通，宿主机的业务口的VLAN模式无论是TRUNK还是Access都不影响。&lt;/p>
&lt;h3 id="虚拟机网络配置-1">虚拟机网络配置&lt;/h3>
&lt;p>同理，这种模式下，虚拟机的网络为VPC管理，用户可以任意创建VPC，并在VPC内分配任意的IP子网。不同VPC之间的IP子网之间相互隔离，无法访问。相同VPC内的IP子网之间无隔离。由于宿主机配置了 ovn_encap_ip 为宿主机的业务口IP，所以虚拟机之前的ovn流量都是通过宿主机的业务口转发。&lt;/p>
&lt;h3 id="eip配置-3">EIP配置&lt;/h3>
&lt;p>VPC网络模式下，需要配置EIP，用于外部访问指定的内部虚拟机。同理，也需要配置EIP网关和EIP网段。&lt;/p>
&lt;h4 id="eip网关的路由配置-1">EIP网关的路由配置&lt;/h4>
&lt;p>和&lt;em>单网口VPC网络&lt;/em>不同的地方是，为了确保EIP流量也要经过业务口，需要确保如下两个配置：&lt;/p>
&lt;ul>
&lt;li>在交换机上配置EIP网段的NextHop时，需要将EIP网关所在节点的业务网口IP作为NextHop IP。(确保进入EIP的流量走业务口)&lt;/li>
&lt;li>在EIP网关所在节点，需要将业务口设置为缺省路由出口。(确保流出EIP的流量走业务口)&lt;/li>
&lt;/ul></description></item><item><title>Docs: 如何在平台添加宿主机网络</title><link>https://www.cloudpods.org/zh/docs/function_principle/onpremise/network/addnetwork/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.cloudpods.org/zh/docs/function_principle/onpremise/network/addnetwork/</guid><description>
&lt;p>当用户部署环境时使用了千兆网络，后续扩展环境部署了万兆网络绑定等，下面介绍如何将该万兆网络加入到平台。&lt;/p>
&lt;h2 id="新建万兆的二层网络">新建万兆的二层网络&lt;/h2>
&lt;ol>
&lt;li>在网络-二层网络页面，单击列表上方 &lt;strong>&lt;em>&amp;ldquo;新建&amp;rdquo;&lt;/em>&lt;/strong> 按钮，弹出新建新建对话框。&lt;/li>
&lt;li>设置以下信息：
&lt;ul>
&lt;li>指定域：选择二层网络的所属域。&lt;/li>
&lt;li>专有网络：选择本地区域以及本地VDC。&lt;/li>
&lt;li>可用区：选择二层网络属于的可用区。&lt;/li>
&lt;li>名称：设置二层网络的名称，例如wire10g。&lt;/li>
&lt;li>带宽：设置二层网络支持的网络带宽，包括百兆（100M）、千兆（1G）、双千兆（2x1G）、万兆（10G）、双万兆（2x10G）、25G、40G、100G。二层网络带宽主要为了统计网络利用率，来确定虚拟机的网络负载情况。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>单击 &lt;strong>&lt;em>&amp;ldquo;确定&amp;rdquo;&lt;/em>&lt;/strong> 按钮。&lt;/li>
&lt;/ol>
&lt;h2 id="修改宿主机配置">修改宿主机配置&lt;/h2>
&lt;p>默认宿主机以网卡对应二层网络，所以需要在宿主机上配置网卡与二层网络的对应关系。&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">&lt;span style="color:#8f5902;font-style:italic"># 在宿主机上操作&lt;/span>
$ vi /etc/yunion/host.conf
&lt;span style="color:#8f5902;font-style:italic"># 在networks下添加&lt;/span>
networks
- eth0/br0/192.168.1.1
- bond1/br1/wire10g
&lt;/code>&lt;/pre>&lt;/div>&lt;p>配置完成后，需要重启host服务。&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">&lt;span style="color:#8f5902;font-style:italic"># 找到该宿主机对应的host服务&lt;/span>
$ kubectl get pods -n onecloud -o wide &lt;span style="color:#000;font-weight:bold">|&lt;/span>grep host
&lt;span style="color:#8f5902;font-style:italic"># 如pod名称为default-host-zgrkg&lt;/span>
$ kubectl delete pods -n onecloud default-host-zgrkg
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="创建ip子网">创建IP子网&lt;/h2>
&lt;p>在上面创建的二层网络wire10g下创建IP子网，后续创建虚拟机使用这些IP子网，则将自动接入万兆网络。&lt;/p></description></item><item><title>Docs: 如何更改宿主机网卡接入的二层网络</title><link>https://www.cloudpods.org/zh/docs/function_principle/onpremise/network/replacewire/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.cloudpods.org/zh/docs/function_principle/onpremise/network/replacewire/</guid><description>
&lt;p>在对Cloudpods网络概念不太清晰的情况下，新接入宿主机时，经常发生无法判断是否需要新增二层网络，导致宿主机接入错误的二层网络的情况。&lt;/p>
&lt;p>本文介绍在宿主机接入二层网络配置错误的情况下，如果通过命令修正，更改宿主机接入的二层网络。&lt;/p>
&lt;p>首先需要确认宿主机上没有虚拟机。&lt;/p>
&lt;p>查看宿主机的接入参数，执行如下命令：&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">climc host-wire-list --host &amp;lt;host_id&amp;gt; --details
&lt;/code>&lt;/pre>&lt;/div>&lt;p>一般输出参数如下：&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="第一步把宿主机对接二层网络的记录删除">第一步：把宿主机对接二层网络的记录删除&lt;/h2>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">climc host-remove-netif localhost &lt;span style="color:#4e9a06">&amp;#39;0c:c4:7a:0e:fa:f5&amp;#39;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="第二步把对应的ip子网删除">第二步：把对应的IP子网删除&lt;/h2>
&lt;p>此时，宿主机接入的IP子网也配置在了错误的二层网络之上。目前，不支持更改IP子网的二层网络。因此，需要先把对应的IP子网删除，再在新的二层网络上重建该IP子网。&lt;/p>
&lt;p>删除旧的宿主机IP子网&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">climc network-delete adm4
&lt;/code>&lt;/pre>&lt;/div>&lt;p>在新的二层网络重新建宿主机IP子网&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">climc network-create --gateway 10.2.53.254 --server-type baremetal &amp;lt;name_of_new_wire&amp;gt; adm4 10.2.53.55 10.2.53.55 &lt;span style="color:#0000cf;font-weight:bold">24&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="第三步重建宿主机的对接网络记录">第三步：重建宿主机的对接网络记录&lt;/h2>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">climc host-add-netif --ip-addr 192.168.3.201 --bridge br0 --interface bond0 --type admin localhost 73710abe-a0cf-48de-8fcd0-0b7b0492f4ef &lt;span style="color:#4e9a06">&amp;#39;0c:c4:7a:0e:fa:f4&amp;#39;&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">0&lt;/span>
&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Docs: 网卡多队列</title><link>https://www.cloudpods.org/zh/docs/function_principle/onpremise/network/multiqueue/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.cloudpods.org/zh/docs/function_principle/onpremise/network/multiqueue/</guid><description>
&lt;p>平台支持虚拟机的虚拟网卡开启多队列特性。&lt;/p>
&lt;h2 id="qemu命令行参数">Qemu命令行参数&lt;/h2>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">-netdev &lt;span style="color:#000">type&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>tap,id&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>GUESTNET1-219,queues&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>4,ifname&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>GUESTNET1-219,vhost&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>on,vhostforce&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>off,script&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#204a87;font-weight:bold">if&lt;/span>-up-br1-GUESTNET1-219.sh,downscript&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#204a87;font-weight:bold">if&lt;/span>-down-br1-GUESTNET1-219.sh -device virtio-net-pci,mq&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>on,vectors&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>9,id&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>netdev-GUESTNET1-219,netdev&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>GUESTNET1-219,mac&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>00:22:02:a1:0f:da
&lt;/code>&lt;/pre>&lt;/div>&lt;p>参数设置：&lt;/p>
&lt;ul>
&lt;li>queues&lt;/li>
&lt;/ul>
&lt;p>queues 是队列数量，包括收发包；一般来说队列数为 cpu的数量的一半，最多16个队列。 如 8C 4个队列，16C 8个队列，32C 及以上 16个队列。如果需要更好的网络性能可以自定义队列数量，但数量不是越大越好，和虚机CPU的数量挂钩&lt;/p>
&lt;ul>
&lt;li>vectors&lt;/li>
&lt;/ul>
&lt;p>vectors是该设备中断向量的数量，一般为 queues * 2 + 1，每个个队列有两个向量，分别对应收包和发包，再加上配置空间的中断向量&lt;/p>
&lt;h2 id="宿主机上验证">宿主机上验证&lt;/h2>
&lt;p>当设置虚拟网卡queues=4之后，宿主机上，可以看到该网卡对应的4个vhost线程。这四个线程独立于 VCPU线程，需要占用 宿主机 CPU，网络繁忙的时候CPU使用率较高，没有绑核的话可能会对其他虚机造成干扰。如果需要更好的网络性能可以分配一些 CPU 给这部分线程使用。&lt;/p>
&lt;h2 id="虚拟机内验证">虚拟机内验证&lt;/h2>
&lt;p>在虚拟机内，通过ethtool查看虚拟网卡的队列数：&lt;/p>
&lt;pre>&lt;code># ethtool -l eth0
Channel parameters for eth0:
Pre-set maximums:
RX: 0
TX: 0
Other: 0
Combined: 4
&lt;/code>&lt;/pre>&lt;p>如果有必要配置队列数&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">&lt;span style="color:#8f5902;font-style:italic"># ethtool -L eth0 combined 4&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>查看网卡设备的中断处理CPU&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">&lt;span style="color:#8f5902;font-style:italic"># cat /proc/interrupts | grep virtio&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>检查虚拟机镜像中是否带了irqbalance服务来打散多队列的中断到不同的CPU上：&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">systemctl status irqbalance
&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Docs: 网络配置</title><link>https://www.cloudpods.org/zh/docs/function_principle/onpremise/network/configuration/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.cloudpods.org/zh/docs/function_principle/onpremise/network/configuration/</guid><description>
&lt;p>本节介绍私有云虚拟机的网络设置，包括DHCP，DNS，NTP等设置。&lt;/p>
&lt;h2 id="dhcp">DHCP&lt;/h2>
&lt;p>虚拟机默认开启DHCP，通过DHCP获取IP地址，静态路由，域名，NTP等设置。物理机则默认是通过静态写入配置文件方式获取这些配置。&lt;/p>
&lt;h2 id="dns配置">DNS配置&lt;/h2>
&lt;h3 id="全局配置">全局配置&lt;/h3>
&lt;p>全局主机DNS server需要在两个地方配置：&lt;/p>
&lt;ol>
&lt;li>region配置&lt;/li>
&lt;/ol>
&lt;p>climc service-config-edit region2&lt;/p>
&lt;p>修改配置：dns_server&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="color:#204a87;font-weight:bold">default&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">...&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">dns_domain&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">office.yunion.io&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">dns_server&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#0000cf;font-weight:bold">172.16.22.11&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">...&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="2">
&lt;li>endpoint配置&lt;/li>
&lt;/ol>
&lt;p>首先注册dns服务&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">climc service-create dns dns
&lt;/code>&lt;/pre>&lt;/div>&lt;p>其次注册DNS服务的地址，可以注册多个。每个对应一条endpoint记录。&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">climc endpoint-create dns region0 public &amp;lt;dns_ip&amp;gt;
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="ip子网配置">IP子网配置&lt;/h3>
&lt;p>针对每个IP子网，可以修改这个IP子网的guest_dns配置，可以设置多个，以逗号分隔。&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">climc network-update --dns &lt;span style="color:#4e9a06">&amp;#39;172.16.22.11,172.16.22.12&amp;#39;&lt;/span> &amp;lt;network&amp;gt;
&lt;/code>&lt;/pre>&lt;/div>&lt;p>如果同时配置了全局的DNS配置和IP子网的DNS配置，以IP子网的DNS配置优先生效。&lt;/p>
&lt;h2 id="ntp配置">NTP配置&lt;/h2>
&lt;p>从v3.8开始，支持通过平台配置虚拟机的NTP服务器，并通过DHCP自动下发到虚拟机。&lt;/p>
&lt;h3 id="全局配置-1">全局配置&lt;/h3>
&lt;p>同DNS配置，通过注册ntp的endpoint来配置平台的NTP服务器信息。&lt;/p>
&lt;p>首先注册ntp服务&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">climc service-create ntp ntp
&lt;/code>&lt;/pre>&lt;/div>&lt;p>其次注册NTP服务的地址，可以注册多个。每个对应一条endpoint记录。&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">climc endpoint-create ntp region0 public &amp;lt;dns_ip&amp;gt;
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="ip子网配置-1">IP子网配置&lt;/h3>
&lt;p>针对每个IP子网，可以修改这个IP子网的guest_ntp配置，可以设置多个，以逗号分隔。&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">climc network-update --ntp &lt;span style="color:#4e9a06">&amp;#39;172.16.22.11,172.16.22.12&amp;#39;&lt;/span> &amp;lt;network&amp;gt;
&lt;/code>&lt;/pre>&lt;/div>&lt;p>如果同时配置了全局的NTP配置和IP子网的NTP配置，以IP子网的NTP配置优先生效。&lt;/p>
&lt;p>另外，和DNS配置不同，DNS服务器地址必须使用IP，而NTP服务器的地址可以使用域名。&lt;/p></description></item><item><title>Docs: 流量镜像</title><link>https://www.cloudpods.org/zh/docs/function_principle/onpremise/network/mirror/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.cloudpods.org/zh/docs/function_principle/onpremise/network/mirror/</guid><description>
&lt;p>本节介绍流量镜像的概念和操作。流量镜像是用来抓取任意虚拟机的网络流量送到指定的虚拟机的虚拟网卡或者物理机的物理网卡，无论该虚拟机在哪台宿主机，在哪个VPC，以及虚拟机的操作系统。可以采用第三方流量抓取软件从该虚拟或物理网卡获取流量，进行流量分析，流量回放测试等。&lt;/p>
&lt;h2 id="功能组件">功能组件&lt;/h2>
&lt;p>流量镜像功能包含两个资源：&lt;/p>
&lt;ul>
&lt;li>
&lt;p>镜像目的(tap_service)：用于定义收集流量的虚拟网卡。如果镜像目的是一台虚拟机，则平台会为这台虚拟机增加一个虚拟网卡，专门用于采集流量。如果镜像目的是一台物理机，则需要指定采集流量的物理网卡的mac地址，平台将把该物理网卡加入网桥，将采集到的流量输出到该物理网卡。(在镜像目的为物理机的场景，该物理网卡必须为未使用的物理网卡。)&lt;/p>
&lt;/li>
&lt;li>
&lt;p>镜像源(tap_flow)：用于定义流量的来源。流量的来源可以是指定虚拟机的指定网卡。也可以是指定宿主机的某个虚拟交换机（通过二层网络指定）的全部或部分流量。&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h2 id="工作原理">工作原理&lt;/h2>
&lt;p>每台宿主机有一个专门用于流量镜像采集的虚拟网桥brtap。&lt;/p>
&lt;p>如果虚拟机作为镜像目的，则该虚拟机增加一个虚拟网卡，并且该网卡自动加入所在宿主机的brtap。如果该宿主机作为镜像目的，则该宿主机用于流量采集的网卡自动加入宿主机的网桥brtap。&lt;/p>
&lt;p>如果镜像源和镜像目的在同一台宿主机，则会通过patch port，将源虚拟机的流量送到brtap。如果镜像源和镜像目的不在同一台宿主机，则会通过GRE隧道将流量送到镜像目的所在宿主机的brtap。&lt;/p>
&lt;p>宿主机上的sdnagent负责配置brtap的流表，将归属于镜像目的镜像源的流量发送到镜像目的网络端口。&lt;/p>
&lt;h2 id="操作方法">操作方法&lt;/h2>
&lt;h3 id="创建镜像目的">创建镜像目的&lt;/h3>
&lt;p>1、创建虚拟机镜像目的&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">climc tap-service-create --type guest --target-id &amp;lt;id_of_guest&amp;gt; &amp;lt;name_of_tap_service&amp;gt;
&lt;/code>&lt;/pre>&lt;/div>&lt;p>2、创建物理机镜像目的&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">climc tap-service-create --type host --target-id &amp;lt;id_of_host&amp;gt; --mac-addr &amp;lt;mac_addr&amp;gt; &amp;lt;name_of_tap_service&amp;gt;
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="创建镜像源">创建镜像源&lt;/h3>
&lt;p>1、创建虚拟机网卡镜像源&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">climc tap-flow-create --guest-id &amp;lt;guest_id&amp;gt; --mac-addr &amp;lt;mac_addr&amp;gt; --ip-addr &amp;lt;ip_addr&amp;gt; --direction &amp;lt;IN&lt;span style="color:#000;font-weight:bold">|&lt;/span>OUT&lt;span style="color:#000;font-weight:bold">|&lt;/span>BOTH&amp;gt; --tap-id &amp;lt;tap_service_id&amp;gt; --type vnic &amp;lt;name_of_tap_flow&amp;gt;
&lt;/code>&lt;/pre>&lt;/div>&lt;p>2、创建虚拟交换机镜像源&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">climc tap-flow-create --host-id &amp;lt;host_id&amp;gt; --wire-id &amp;lt;wire_id&amp;gt; --vlan-id &amp;lt;vlan_id&amp;gt; --direction &amp;lt;IN&lt;span style="color:#000;font-weight:bold">|&lt;/span>OUT&lt;span style="color:#000;font-weight:bold">|&lt;/span>BOTH&amp;gt; --tap-id &amp;lt;tap_service_id&amp;gt; --type vswitch &amp;lt;name_of_tap_flow&amp;gt;
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="启用镜像目的和源">启用镜像目的和源&lt;/h3>
&lt;ol>
&lt;li>镜像目的创建后默认是禁用状态，需要手动启用&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">climc tap-service-enable &amp;lt;tap_service_id&amp;gt;
climc tap-service-disable &amp;lt;tap_service_id&amp;gt;
&lt;/code>&lt;/pre>&lt;/div>&lt;p>2、镜像源创建后默认启用状态&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">climc tap-flow-disable &amp;lt;tap_flow_id&amp;gt;
climc tap-flow-enable &amp;lt;tap_flow_id&amp;gt;
&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Docs: 网卡流量限制</title><link>https://www.cloudpods.org/zh/docs/function_principle/onpremise/network/traffic_limit/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.cloudpods.org/zh/docs/function_principle/onpremise/network/traffic_limit/</guid><description>
&lt;p>本节介绍设置网卡流量限制。网卡流量限制分为上行下行流量，只要有一边的流量超标将会切断网卡。网卡流量限制是通过采集网卡收发包监控数据来实现的，采集周期为一分钟，所以可能流量超标了但是还是需要等到流量采集周期到了才会切断网卡。&lt;/p>
&lt;h2 id="设置流量限制">设置流量限制&lt;/h2>
&lt;h3 id="创建虚机时设置流量限制">创建虚机时设置流量限制&lt;/h3>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">$ climc server-create --network rx-traffic-limit&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>102400000,tx-traffic-limit&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">102400000&lt;/span> ...
&lt;span style="color:#8f5902;font-style:italic"># tx-traffic-limit为上行，rx-traffic-limit为下行单位均为字节 byte&lt;/span>
&lt;span style="color:#8f5902;font-style:italic"># 查看网卡详细信息&lt;/span>
$ climc server-network-show &amp;lt;SERVER_ID&amp;gt; &amp;lt;NETWORK_ID&amp;gt;
&lt;span style="color:#000;font-weight:bold">|&lt;/span> rx_traffic_limit &lt;span style="color:#000;font-weight:bold">|&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">102400000&lt;/span> &lt;span style="color:#000;font-weight:bold">|&lt;/span>
&lt;span style="color:#000;font-weight:bold">|&lt;/span> rx_traffic_used &lt;span style="color:#000;font-weight:bold">|&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">0&lt;/span> &lt;span style="color:#000;font-weight:bold">|&lt;/span>
......
&lt;span style="color:#000;font-weight:bold">|&lt;/span> tx_traffic_limit &lt;span style="color:#000;font-weight:bold">|&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">102400000&lt;/span> &lt;span style="color:#000;font-weight:bold">|&lt;/span>
&lt;span style="color:#000;font-weight:bold">|&lt;/span> tx_traffic_used &lt;span style="color:#000;font-weight:bold">|&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">0&lt;/span> &lt;span style="color:#000;font-weight:bold">|&lt;/span>
&lt;span style="color:#8f5902;font-style:italic"># rx_traffic_used/tx_traffic_used 是已使用的网卡流量信息，单位均为字节 byte&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="为网卡单独设置流量限制">为网卡单独设置流量限制&lt;/h3>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">&lt;span style="color:#8f5902;font-style:italic">#设置流量限制的接口有两个：&lt;/span>
$ server-set-nic-traffic-limit
Usage: climc server-set-nic-traffic-limit &lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span>--tx-traffic-limit TX_TRAFFIC_LIMIT&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span>--help&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span>--rx-traffic-limit RX_TRAFFIC_LIMIT&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span> &amp;lt;ID&amp;gt; &amp;lt;MAC&amp;gt;
$ server-reset-nic-traffic-limit
Usage: climc server-reset-nic-traffic-limit &lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span>--tx-traffic-limit TX_TRAFFIC_LIMIT&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span>--help&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span>--rx-traffic-limit RX_TRAFFIC_LIMIT&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span> &amp;lt;ID&amp;gt; &amp;lt;MAC&amp;gt;
&lt;span style="color:#8f5902;font-style:italic"># server-set-nic-traffic-limit 设置网卡流量上限，不重置已使用的流量&lt;/span>
&lt;span style="color:#8f5902;font-style:italic"># server-reset-nic-traffic-limit 设置网卡流量上限的同时重置已使用的流量&lt;/span>
&lt;span style="color:#8f5902;font-style:italic"># 参数中 MAC 为网卡的 mac 地址&lt;/span>
&lt;span style="color:#8f5902;font-style:italic"># 设置完成查看网卡信息&lt;/span>
$ climc server-network-show &amp;lt;SERVER_ID&amp;gt; &amp;lt;NETWORK_ID&amp;gt;
&lt;/code>&lt;/pre>&lt;/div>&lt;p>网卡流量到达上限后会切断网卡，需要调用这两个接口设置更高的流量上限或者重置网卡已使用的流量来恢复网卡。&lt;/p></description></item><item><title>Docs: IP预留</title><link>https://www.cloudpods.org/zh/docs/function_principle/onpremise/network/reservedip/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.cloudpods.org/zh/docs/function_principle/onpremise/network/reservedip/</guid><description>
&lt;h2 id="ip预留池">IP预留池&lt;/h2>
&lt;p>平台维护了IP预留池，将未被平台分配但被其他系统使用的IP放入IP预留池，防止IP被分配给虚拟机或其他平台管理的资源。&lt;/p>
&lt;h3 id="ip地址占用检测">IP地址占用检测&lt;/h3>
&lt;p>平台会每隔6小时做一次全局ping检测，把所有经典网络的IP地址进行ping。并且把平台未维护，但是响应ping的IP标记为预留IP，防止被平台分配，避免IP冲突。如果IP被检测在线并预留后，就不会被自动释放了。需要用户手动释放。&lt;/p>
&lt;p>在创建主机时，如果确认这个IP没有被使用，并且有可能放到预留IP里，可以在创建的network参数里，加一个reserved: true的参数，这样即使IP被预留了，也会被自动从预留IP池中释放用于分配。&lt;/p>
&lt;h2 id="预留ip的使用">预留IP的使用&lt;/h2>
&lt;h3 id="预留ip">预留IP&lt;/h3>
&lt;p>预留指定网络里的指定IP地址，并且可以预留自动释放的预留IP，即先预留IP，在指定时间后，自动释放该预留IP。&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">climc network-reserve-ip &lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span>--duration DURATION&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span> &amp;lt;NETWORK&amp;gt; &amp;lt;NOTES&amp;gt; &amp;lt;IPS&amp;gt; ...
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="查看预留ip">查看预留IP&lt;/h3>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">climc reserved-ip-list &lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span>--network NETID&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="释放预留ip">释放预留IP&lt;/h3>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">climc network-release-reserved-ip &amp;lt;NETWORK&amp;gt; &amp;lt;IP&amp;gt;
&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Docs: 网卡附属IP(SubIPs)</title><link>https://www.cloudpods.org/zh/docs/function_principle/onpremise/network/subips/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.cloudpods.org/zh/docs/function_principle/onpremise/network/subips/</guid><description>
&lt;p>默认情况下，虚拟机的虚拟网卡只能分配一个IP，但可以通过如下方式给一个网卡分配诺干个附属IP，平台默认会检查虚拟机网卡流量的源IP进行检查，通过附属IP，可以允许在虚拟机内使用多个IP。&lt;/p>
&lt;p>申请附属IP的API为：&lt;/p>
&lt;pre>&lt;code>POST /servers/&amp;lt;sid&amp;gt;/add-sub-ips
{
&amp;quot;mac&amp;quot;: &amp;quot;aa:bb:cc:dd:ee:ff&amp;quot;,
&amp;quot;count&amp;quot;: 10,
&amp;quot;sub_ips&amp;quot;: [&amp;quot;192.168.20.2&amp;quot;, &amp;quot;192.168.20.3&amp;quot;],
}
&lt;/code>&lt;/pre>&lt;p>也可以通过climc为虚拟机的指定网卡申请附属IP：&lt;/p>
&lt;pre>&lt;code>climc server-add-sub-ips &amp;lt;sid&amp;gt; --mac &amp;quot;aa:bb:cc:dd:ee:ff&amp;quot; --count 10 --sub-ips 192.168.20.2 --sub-ips 192.168.20.3
&lt;/code>&lt;/pre>&lt;p>查看附属IP：&lt;/p>
&lt;pre>&lt;code>climc server-network-show &amp;lt;sid&amp;gt; &amp;lt;nid&amp;gt; --mac &amp;lt;mac&amp;gt;
&lt;/code>&lt;/pre>&lt;p>删除附属IP：&lt;/p>
&lt;pre>&lt;code>DELETE /networkaddress/&amp;lt;id&amp;gt;
&lt;/code>&lt;/pre>&lt;pre>&lt;code>climc networkaddress-delete &amp;lt;id1&amp;gt; &amp;lt;id2&amp;gt; ...
&lt;/code>&lt;/pre>&lt;p>一般分配的附属IP用于虚拟机内容器的IP，允许容器直接使用和虚拟机网络同一平面的IP，避免额外的容器网络虚拟化带来的性能开销。&lt;/p></description></item></channel></rss>