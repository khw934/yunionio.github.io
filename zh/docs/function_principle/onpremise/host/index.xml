<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Cloudpods –
宿主机</title><link>https://www.cloudpods.org/zh/docs/function_principle/onpremise/host/</link><description>Recent content in 宿主机 on Cloudpods</description><generator>Hugo -- gohugo.io</generator><lastBuildDate>Wed, 17 Jul 2019 11:35:12 +0800</lastBuildDate><atom:link href="https://www.cloudpods.org/zh/docs/function_principle/onpremise/host/index.xml" rel="self" type="application/rss+xml"/><item><title>Docs: Host服务启动失败或有warning如何处理</title><link>https://www.cloudpods.org/zh/docs/function_principle/onpremise/host/host-service/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.cloudpods.org/zh/docs/function_principle/onpremise/host/host-service/</guid><description>
&lt;h2 id="禁用-dhcp-服务">禁用 dhcp 服务&lt;/h2>
&lt;p>如果你看到了这样的提示：&lt;code>dhcp: dhcp client is enabled before host agent start, please disable it.&lt;/code>&lt;/p>
&lt;p>说明你的机器之前启用过dhcp client.&lt;/p>
&lt;p>如何禁用 dhcp client：&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">&lt;span style="color:#8f5902;font-style:italic"># 一般 centos7 的 dhcp client 都是由 NetworkManager 启动的&lt;/span>
$ systemctl disable NetworkManager --now
&lt;span style="color:#8f5902;font-style:italic"># 我们会检查 /var/run/dhclient-&amp;lt;nic&amp;gt;.pid 下是否有dhclient的pid文件来决定是否要输出 warning&lt;/span>
&lt;span style="color:#8f5902;font-style:italic"># 所以同时你需要清除 /var/run 下的 dhclient-&amp;lt;nic&amp;gt;.pid 文件, nic 需要替换成自己的网卡名，如 eth0&lt;/span>
$ rm -f /var/run/dhclient-&amp;lt;nic&amp;gt;.pid
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="内核模块不匹配">内核模块不匹配&lt;/h2>
&lt;p>使用我们的平台的 host 服务需要用我们的内核，如果你看到了这样的提示：&lt;/p>
&lt;p>&lt;code>openvswitch: kernel module openvswitch paramters version not found, is kernel version correct ??&lt;/code>&lt;/p>
&lt;p>或者 &lt;code>uname -r&lt;/code> 输出结果中字段不包含 yn. 正确的：&lt;code>3.10.0-514.26.2.el7.yn20180608.x86_64&lt;/code>&lt;/p>
&lt;p>说明你的机器使用的不是我们的内核，需要安装我们的内核然后重启，安装内核步骤如下。&lt;/p>
&lt;h3 id="环境">环境&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>操作系统: CentOS 7.x&lt;/p>
&lt;/li>
&lt;li>
&lt;p>硬件要求:&lt;/p>
&lt;ul>
&lt;li>Virtualization: CPU 要支持虚拟化，用于虚拟机 KVM 加速&lt;/li>
&lt;li>打开 iommu，VT-d: 用于 GPU 透传(不用GPU可以不开)&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>网络:&lt;/p>
&lt;ul>
&lt;li>当前可用的网段: 虚拟机可以直接使用和计算节点所在的扁平网段，需要预先划分保留对应端给云平台虚拟机使用，防止被其它设备占用，最后 IP 冲突&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>虚拟机和服务使用的存储路径都在 &lt;strong>/opt&lt;/strong> 目录下，所以理想环境下建议单独给 &lt;strong>/opt&lt;/strong> 目录设置挂载点&lt;/p>
&lt;ul>
&lt;li>比如把 /dev/sdb1 单独分区做 ext4 然后通过 /etc/fstab 挂载到 /opt 目录&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>备注:&lt;/p>
&lt;ul>
&lt;li>如果是以测试为目的，可以拿一台虚拟机部署计算节点的服务，但可能无法使用 KVM 加速和 GPU 透传&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h3 id="使用-ocboot-添加对应节点">使用 ocboot 添加对应节点&lt;/h3>
&lt;p>以下操作在控制节点进行，在控制节点使用 &lt;code>ocboot add-node&lt;/code> 命令把对应计算节点添加进来。&lt;/p>
&lt;p>假设要给控制节点 10.168.26.216 添加计算节点 10.168.222.140 首先需要 ssh root 免密码登录对应的计算节点以及控制节点自身。&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">&lt;span style="color:#8f5902;font-style:italic"># 将控制节点自己设置成免密登录&lt;/span>
$ ssh-copy-id -i ~/.ssh/id_rsa.pub root@10.168.26.216
&lt;span style="color:#8f5902;font-style:italic"># 尝试免密登录控制节点是否成功&lt;/span>
$ ssh root@10.168.26.216 &lt;span style="color:#4e9a06">&amp;#34;hostname&amp;#34;&lt;/span>
&lt;span style="color:#8f5902;font-style:italic"># 将生成的 ~/.ssh/id_rsa.pub 公钥拷贝到待部署的计算机器&lt;/span>
$ ssh-copy-id -i ~/.ssh/id_rsa.pub root@10.168.222.140
&lt;span style="color:#8f5902;font-style:italic"># 尝试免密登录待部署机器，应该不需要输入登录密码即可拿到部署机器的 hostname&lt;/span>
$ ssh root@10.168.222.140 &lt;span style="color:#4e9a06">&amp;#34;hostname&amp;#34;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">&lt;span style="color:#8f5902;font-style:italic"># 本地安装 ansible&lt;/span>
$ yum install -y python3-pip
$ python3 -m pip install --upgrade pip setuptools wheel
$ python3 -m pip install --upgrade ansible paramiko
&lt;span style="color:#8f5902;font-style:italic"># 下载 ocboot 工具到本地&lt;/span>
$ git clone -b release/3.9 https://github.com/yunionio/ocboot &lt;span style="color:#ce5c00;font-weight:bold">&amp;amp;&amp;amp;&lt;/span> &lt;span style="color:#204a87">cd&lt;/span> ./ocboot
&lt;span style="color:#8f5902;font-style:italic"># 使用 ocboot 添加节点&lt;/span>
$ ./ocboot.py add-node 10.168.26.216 10.168.222.140
&lt;/code>&lt;/pre>&lt;/div>&lt;p>该命令会使用 ansible-playbook 把对应的计算节点加入进来。&lt;/p>
&lt;h3 id="启用计算节点宿主机">启用计算节点(宿主机)&lt;/h3>
&lt;p>等计算节点添加完成后，需要启用刚才上报的计算节点，只有启用的宿主机才能运行虚拟机。&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">&lt;span style="color:#8f5902;font-style:italic"># 使用 climc 查看注册的 host 列表&lt;/span>
$ climc host-list
+--------------------------------------+-------------------------+-------------------+----------------+----------------------------+---------+---------+-------------+----------+-----------+------------+---------------+--------------+------------+-------------------------+--------------+
&lt;span style="color:#000;font-weight:bold">|&lt;/span> ID &lt;span style="color:#000;font-weight:bold">|&lt;/span> Name &lt;span style="color:#000;font-weight:bold">|&lt;/span> Access_mac &lt;span style="color:#000;font-weight:bold">|&lt;/span> Access_ip &lt;span style="color:#000;font-weight:bold">|&lt;/span> Manager_URI &lt;span style="color:#000;font-weight:bold">|&lt;/span> Status &lt;span style="color:#000;font-weight:bold">|&lt;/span> enabled &lt;span style="color:#000;font-weight:bold">|&lt;/span> host_status &lt;span style="color:#000;font-weight:bold">|&lt;/span> mem_size &lt;span style="color:#000;font-weight:bold">|&lt;/span> cpu_count &lt;span style="color:#000;font-weight:bold">|&lt;/span> node_count &lt;span style="color:#000;font-weight:bold">|&lt;/span> sn &lt;span style="color:#000;font-weight:bold">|&lt;/span> storage_type &lt;span style="color:#000;font-weight:bold">|&lt;/span> host_type &lt;span style="color:#000;font-weight:bold">|&lt;/span> version &lt;span style="color:#000;font-weight:bold">|&lt;/span> storage_size &lt;span style="color:#000;font-weight:bold">|&lt;/span>
+--------------------------------------+-------------------------+-------------------+----------------+----------------------------+---------+---------+-------------+----------+-----------+------------+---------------+--------------+------------+-------------------------+--------------+
&lt;span style="color:#000;font-weight:bold">|&lt;/span> 3830870e-a499-459d-89df-bb6979b5e1ff &lt;span style="color:#000;font-weight:bold">|&lt;/span> lzx-allinone-standalone &lt;span style="color:#000;font-weight:bold">|&lt;/span> 00:22:39:4c:6c:e9 &lt;span style="color:#000;font-weight:bold">|&lt;/span> 10.168.222.140 &lt;span style="color:#000;font-weight:bold">|&lt;/span> http://10.168.222.140:8885 &lt;span style="color:#000;font-weight:bold">|&lt;/span> running &lt;span style="color:#000;font-weight:bold">|&lt;/span> &lt;span style="color:#204a87">false&lt;/span> &lt;span style="color:#000;font-weight:bold">|&lt;/span> online &lt;span style="color:#000;font-weight:bold">|&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">8192&lt;/span> &lt;span style="color:#000;font-weight:bold">|&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">4&lt;/span> &lt;span style="color:#000;font-weight:bold">|&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">1&lt;/span> &lt;span style="color:#000;font-weight:bold">|&lt;/span> Not Specified &lt;span style="color:#000;font-weight:bold">|&lt;/span> rotate &lt;span style="color:#000;font-weight:bold">|&lt;/span> hypervisor &lt;span style="color:#000;font-weight:bold">|&lt;/span> master&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>7ab047419092301&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#000;font-weight:bold">|&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">50141&lt;/span> &lt;span style="color:#000;font-weight:bold">|&lt;/span>
+--------------------------------------+-------------------------+-------------------+----------------+----------------------------+---------+---------+-------------+----------+-----------+------------+---------------+--------------+------------+-------------------------+--------------+
*** Total: &lt;span style="color:#0000cf;font-weight:bold">0&lt;/span> Pages: &lt;span style="color:#0000cf;font-weight:bold">0&lt;/span> Limit: &lt;span style="color:#0000cf;font-weight:bold">20&lt;/span> Offset: &lt;span style="color:#0000cf;font-weight:bold">0&lt;/span> Page: &lt;span style="color:#0000cf;font-weight:bold">1&lt;/span> ***
&lt;span style="color:#8f5902;font-style:italic"># 启动 host&lt;/span>
$ climc host-enable lzx-allinone-standalone
&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Docs: 查看宿主机列表</title><link>https://www.cloudpods.org/zh/docs/function_principle/onpremise/host/list/</link><pubDate>Mon, 07 Feb 2022 18:24:15 +0800</pubDate><guid>https://www.cloudpods.org/zh/docs/function_principle/onpremise/host/list/</guid><description>
&lt;h3 id="查询宿主机">查询宿主机&lt;/h3>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">&lt;span style="color:#8f5902;font-style:italic"># 查询 kvm 这种类型的宿主机&lt;/span>
$ climc host-list --hypervisor kvm
&lt;span style="color:#8f5902;font-style:italic"># 查询被禁用的 kvm 宿主机&lt;/span>
$ climc host-list --hypervisor kvm --disabled
&lt;span style="color:#8f5902;font-style:italic"># 查询启用的 kvm 宿主机&lt;/span>
$ climc host-list --hypervisor kvm --enabled
&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Docs: Host服务问题排障技巧</title><link>https://www.cloudpods.org/zh/docs/function_principle/onpremise/host/troubleshooting/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.cloudpods.org/zh/docs/function_principle/onpremise/host/troubleshooting/</guid><description>
&lt;p>Host服务可能因为各种原因启动失败，现象为Host服务重启之后，在云平台宿主机列表，宿主机的状态一直为离线。&lt;/p>
&lt;p>本文介绍一般的排查问题的思路。&lt;/p>
&lt;h2 id="host服务对应容器pod介绍">Host服务对应容器Pod介绍&lt;/h2>
&lt;p>首先，我们需要了解Host服务对应的Pod。&lt;/p>
&lt;p>Host服务由k8s的onecloud命名空间下的Daemonset default-host定义，在每个节点上都会运行一个名为 default-host-xxxxx 的容器，其中 xxxxx 为随机的字符串。&lt;/p>
&lt;p>Default-host Pod中有三个容器：&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>容器名称&lt;/th>
&lt;th>功能&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>host&lt;/td>
&lt;td>Host服务的主服务进程，实现和控制器的通信，控制qemu虚拟机进程，管理存储和网络&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>ovn-controller&lt;/td>
&lt;td>ovn在每个节点的控制进程，从ovn-northd维护的数据库同步节点配置信息，并下发到ovs&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>sdnagent&lt;/td>
&lt;td>实现经典网络的安全组和流控，VPC网络辅助ovn-controller实现VPC网络功能&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="定位宿主机的host容器">定位宿主机的host容器&lt;/h2>
&lt;p>通过如下命里找到在指定宿主机上运行的Host容器&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">kubectl -n onecloud get pods -o wide &lt;span style="color:#000;font-weight:bold">|&lt;/span> grep &amp;lt;ip_of_host&amp;gt;
&lt;/code>&lt;/pre>&lt;/div>&lt;p>例如：&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">&lt;span style="color:#8f5902;font-style:italic"># kubectl -n onecloud get pods -o wide | grep office-03-host01&lt;/span>
default-host-xc2t5 3/3 Running &lt;span style="color:#0000cf;font-weight:bold">0&lt;/span> 4h7m 192.168.222.3 office-03-host01 &amp;lt;none&amp;gt; &amp;lt;none&amp;gt;
default-host-deployer-zv6tk 1/1 Running &lt;span style="color:#0000cf;font-weight:bold">0&lt;/span> 5d15h 10.40.33.249 office-03-host01 &amp;lt;none&amp;gt; &amp;lt;none&amp;gt;
default-host-image-cql69 1/1 Running &lt;span style="color:#0000cf;font-weight:bold">132&lt;/span> 128d 192.168.222.3 office-03-host01 &amp;lt;none&amp;gt; &amp;lt;none&amp;gt;
default-telegraf-q8fl9 2/2 Running &lt;span style="color:#0000cf;font-weight:bold">40&lt;/span> 128d 192.168.222.3 office-03-host01 &amp;lt;none&amp;gt; &amp;lt;none&amp;gt;
&lt;/code>&lt;/pre>&lt;/div>&lt;p>这几个Pod的功能解释如下：&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Pod&lt;/th>
&lt;th>说明&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>default-host-xxxxx&lt;/td>
&lt;td>DaemonSet default-host 的pod&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>default-host-deployer-xxxxx&lt;/td>
&lt;td>DaemonSet default-host-deployer 的pod，实现虚拟机磁盘的初始化和识别&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>default-host-image-xxxxx&lt;/td>
&lt;td>DaemonSet default-host-image 的pod，实现本地虚拟机磁盘的读取&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>default-telegraf-xxxxx&lt;/td>
&lt;td>DaemonSet default-telegraf 的pod，实现宿主机的监控数据采集&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="重启host服务">重启Host服务&lt;/h2>
&lt;p>有时候，重启就能解决问题，重启host服务只需要删除对应的pod，k8s会立即重建对应pod，实现host服务的重启.&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">kubectl -n onecloud delete pods default-host-xxxxx
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="查看host服务的日志">查看Host服务的日志&lt;/h2>
&lt;p>采用如下命令查看Host服务的日志。由于host pod中有三个容器，因此需要用 -c 参数指定容器（-c host）。如下命令查看从过去10分钟开始（&amp;ndash;since 10m）的host容器的日志，并且不退出（-f），持续输出日志到控制台。&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">kubectl -n onecloud logs default-host-xxxxx -c host --since 10m -f
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Host服务在启动时会执行如下检查：&lt;/p>
&lt;ul>
&lt;li>设置和优化内核参数，例如io调度器参数&lt;/li>
&lt;li>检查关键软件，例如qemu，内核nbd模块，openvswitch等&lt;/li>
&lt;li>初始化并配置网络&lt;/li>
&lt;li>初始化并配置存储&lt;/li>
&lt;li>&amp;hellip;&lt;/li>
&lt;/ul>
&lt;p>在每一步都可能出错，此时可以通过查看输出日志，定位原因。&lt;/p></description></item><item><title>Docs: 启用/禁用</title><link>https://www.cloudpods.org/zh/docs/function_principle/onpremise/host/enable/</link><pubDate>Mon, 07 Feb 2022 18:24:26 +0800</pubDate><guid>https://www.cloudpods.org/zh/docs/function_principle/onpremise/host/enable/</guid><description>
&lt;h3 id="启用">启用&lt;/h3>
&lt;p>&lt;big>&lt;strong>climc操作&lt;/strong>&lt;/big>&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">&lt;span style="color:#8f5902;font-style:italic"># 找到禁用的宿主机&lt;/span>
$ climc host-list --disabled
&lt;span style="color:#8f5902;font-style:italic"># 启用宿主机&lt;/span>
$ climc host-enable &amp;lt;host_id&amp;gt;
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="禁用">禁用&lt;/h3>
&lt;p>&lt;big>&lt;strong>climc操作&lt;/strong>&lt;/big>&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">&lt;span style="color:#8f5902;font-style:italic"># 禁用宿主机&lt;/span>
$ climc host-disable &amp;lt;host_id&amp;gt;
&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Docs: 宕机自动迁移</title><link>https://www.cloudpods.org/zh/docs/function_principle/onpremise/host/auto-migrate-on-hostdown/</link><pubDate>Mon, 07 Feb 2022 18:24:26 +0800</pubDate><guid>https://www.cloudpods.org/zh/docs/function_principle/onpremise/host/auto-migrate-on-hostdown/</guid><description>
&lt;h2 id="简介">简介&lt;/h2>
&lt;p>当检测到宿主机宕机时，宿主机上运行中的虚机自动迁移到其他宿主机上。&lt;/p>
&lt;h3 id="原理介绍">原理介绍&lt;/h3>
&lt;p>宕机检测依赖 etcd watch 机制。host-agent 启动时向 etcd 注册一个 key。 region watch 到 host key 消失后一段时间时(60s)发起宕机迁移，将宿主机上共享存储的虚机乔伊到其他宿主机上。&lt;/p>
&lt;p>所以宕机自动迁移依赖 onecloud operator 部署的 etcd。&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">&lt;span style="color:#8f5902;font-style:italic"># 查看 onecloud operator 部署的 etcd 状态&lt;/span>
kubectl get pods -n onecloud &lt;span style="color:#000;font-weight:bold">|&lt;/span> grep default-etcd
&lt;/code>&lt;/pre>&lt;/div>&lt;p>host-agent 启动时会向 etcd 注册一个 key. 当开启宕机自动迁移，宿主机断网时一段时间后 host-agent 会将宿主机上的虚机关机，防止网络恢复后磁盘双写。&lt;/p>
&lt;h2 id="使用介绍">使用介绍&lt;/h2>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">&lt;span style="color:#8f5902;font-style:italic"># climc 命令&lt;/span>
&lt;span style="color:#8f5902;font-style:italic"># 修改region服务的配置&lt;/span>
$ climc service-config --config &lt;span style="color:#4e9a06">&amp;#39;{&amp;#34;default&amp;#34;:{&amp;#34;enable_host_health_check&amp;#34;:true}}&amp;#39;&lt;/span> region2
$ climc host-auto-migrate-on-host-down --help
Usage: climc host-auto-migrate-on-host-down &lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span>--auto-migrate-on-host-shutdown &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>enable,disable&lt;span style="color:#ce5c00;font-weight:bold">}]&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span>--help&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span>--auto-migrate-on-host-down &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>enable,disable&lt;span style="color:#ce5c00;font-weight:bold">}]&lt;/span> &amp;lt;ID&amp;gt; ...
&lt;span style="color:#8f5902;font-style:italic"># 开启宕机自动迁移&lt;/span>
$ climc host-auto-migrate-on-host-down --auto-migrate-on-host-down &lt;span style="color:#204a87">enable&lt;/span> &amp;lt;ID&amp;gt;
&lt;span style="color:#8f5902;font-style:italic"># 开启宕机自动迁移同时开启关机自动迁移&lt;/span>
$ climc host-auto-migrate-on-host-down --auto-migrate-on-host-down &lt;span style="color:#204a87">enable&lt;/span> --auto-migrate-on-host-shutdown &lt;span style="color:#204a87">enable&lt;/span> &amp;lt;ID&amp;gt;
&lt;span style="color:#8f5902;font-style:italic"># 取消宕机自动迁移&lt;/span>
$ climc host-auto-migrate-on-host-down &amp;lt;ID&amp;gt;
&lt;span style="color:#8f5902;font-style:italic"># 重启region服务&lt;/span>
kubectl -n onecloud rollout restart deployment default-region
&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Docs: 宿主机 CPU 预留</title><link>https://www.cloudpods.org/zh/docs/function_principle/onpremise/host/reservecpus/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.cloudpods.org/zh/docs/function_principle/onpremise/host/reservecpus/</guid><description>
&lt;h2 id="功能介绍">功能介绍&lt;/h2>
&lt;p>宿主机 CPU 预留功能支持将部分 CPU 预留给其他进程使用，不再分配给虚拟机使用。&lt;/p>
&lt;h2 id="使用介绍">使用介绍&lt;/h2>
&lt;p>确保这台宿主机上没有运行中的虚机，然后选择合适的 CPU 作为预留 CPU。宿主机 hostagent 初始化时会创建 cloudpods.hostagent.reserved 的 cgroup。&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">$ climc host-reserve-cpus --help
Usage: climc host-reserve-cpus &lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span>--mems MEMS&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span>--disable-sched-load-balance&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span>--help&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span>--cpus CPUS&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span> &amp;lt;ID&amp;gt; ...
&lt;span style="color:#8f5902;font-style:italic"># 三个参数&lt;/span>
&lt;span style="color:#8f5902;font-style:italic"># --cpus 对应的是 cpuset.cpus: 限制进程组使用的 CPU。&lt;/span>
&lt;span style="color:#8f5902;font-style:italic"># --mems 对应的是 cpuset.mems, 限制可以使用的memory节点。&lt;/span>
&lt;span style="color:#8f5902;font-style:italic"># --disable-sched-load-balance 对应 cpuset.sched_load_balance flag，关闭预留 cpuset 内的 cpu balance。&lt;/span>
$ climc host-reserve-cpus --mems 0-1 --disable-sched-load-balance --cpus &lt;span style="color:#4e9a06">&amp;#34;1-2,38-39&amp;#34;&lt;/span> 3bce9607-2597-469f-8d9b-977345456739
&lt;span style="color:#8f5902;font-style:italic"># 宿主机上查看&lt;/span>
$ cat /sys/fs/cgroup/cpuset/cloudpods.hostagent.reserved/cpuset.cpus
1-2,38-39
$ cat /sys/fs/cgroup/cpuset/cloudpods.hostagent.reserved/cpuset.mems
0-1
$ cat /sys/fs/cgroup/cpuset/cloudpods.hostagent.reserved/cpuset.sched_load_balance
&lt;span style="color:#0000cf;font-weight:bold">0&lt;/span>
&lt;/code>&lt;/pre>&lt;/div></description></item></channel></rss>