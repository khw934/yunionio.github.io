<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Cloudpods –
其他功能</title><link>https://www.cloudpods.org/zh/docs/function_principle/misc/</link><description>Recent content in 其他功能 on Cloudpods</description><generator>Hugo -- gohugo.io</generator><lastBuildDate>Fri, 19 Jul 2019 20:58:54 +0800</lastBuildDate><atom:link href="https://www.cloudpods.org/zh/docs/function_principle/misc/index.xml" rel="self" type="application/rss+xml"/><item><title>Docs: 日志</title><link>https://www.cloudpods.org/zh/docs/function_principle/misc/log/</link><pubDate>Tue, 18 Jan 2022 10:28:41 +0800</pubDate><guid>https://www.cloudpods.org/zh/docs/function_principle/misc/log/</guid><description/></item><item><title>Docs: 配置管理</title><link>https://www.cloudpods.org/zh/docs/function_principle/misc/configuration/</link><pubDate>Fri, 19 Jul 2019 20:58:54 +0800</pubDate><guid>https://www.cloudpods.org/zh/docs/function_principle/misc/configuration/</guid><description>
&lt;p>本文介绍 Cloudpods 的服务配置的管理原理。&lt;/p>
&lt;p>大部分服务的配置信息有三个来源：&lt;/p>
&lt;ul>
&lt;li>命令行参数&lt;/li>
&lt;li>配置文件，配置文件路径一般在 /etc/yunion/&amp;lt;service_name&amp;gt;.conf&lt;/li>
&lt;li>Keystone中保存的服务配置&lt;/li>
&lt;/ul>
&lt;p>如果一个参数在三个来源都有设置，则越排在后的配置来源优先级最高。&lt;/p>
&lt;h2 id="命令行参数">命令行参数&lt;/h2>
&lt;p>服务配置首先通过命令行参数设置，如果存在 &amp;ndash;config 的配置，则会加载 &amp;ndash;config 指定的配置文件的内容，根据配置文件的内容设置参数。&lt;/p>
&lt;p>以下配置项是只能通过命令行指定的参数：&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>配置项&lt;/th>
&lt;th>类型&lt;/th>
&lt;th>说明&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>config&lt;/td>
&lt;td>string&lt;/td>
&lt;td>指定配置文件路径&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>help&lt;/td>
&lt;td>bool&lt;/td>
&lt;td>显示帮助信息并退出&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>version&lt;/td>
&lt;td>bool&lt;/td>
&lt;td>显示版本信息并退出&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>pid_file&lt;/td>
&lt;td>string&lt;/td>
&lt;td>pid文件路径&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="配置文件">配置文件&lt;/h2>
&lt;p>配置文件格式可以是Key=Value的方式设置参数，也可以是YAML的格式。配置文件的配置项在服务器启动时由服务程序从配置文件中一次性读取，程序启动后对配置文件的修改不会被动态加载。&lt;/p>
&lt;p>部分服务则会进一步地从keystone的服务配置中加载配置信息，并且监听keystone的服务配置的变化，动态地更新服务配置。&lt;/p>
&lt;p>并不是所有配置项都能从keystone的服务配置中动态加载。以下配置项是只能通过命令行参数或者文件配置指定的参数。这些配置项主要包含服务的认证信息，数据库配置信息等。&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>配置项&lt;/th>
&lt;th>类型&lt;/th>
&lt;th>说明&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>region&lt;/td>
&lt;td>string&lt;/td>
&lt;td>服务实例归属区域的名称, 一般为 region0&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>application_id&lt;/td>
&lt;td>string&lt;/td>
&lt;td>服务的应用名称&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>log_level&lt;/td>
&lt;td>string&lt;/td>
&lt;td>输出日志的级别，默认为info，即仅输出info&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>log_verbose_level&lt;/td>
&lt;td>int&lt;/td>
&lt;td>日志的冗余度 （deprecated）&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>temp_path&lt;/td>
&lt;td>string&lt;/td>
&lt;td>存储本地临时文件的目录&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>address&lt;/td>
&lt;td>string&lt;/td>
&lt;td>服务API监听地址&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>port&lt;/td>
&lt;td>string&lt;/td>
&lt;td>服务API监听端口&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>port_v2&lt;/td>
&lt;td>string&lt;/td>
&lt;td>v2端口 （deprecated）&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>admin_port&lt;/td>
&lt;td>string&lt;/td>
&lt;td>管理端口 （deprecaated）&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>session_endpoint_type&lt;/td>
&lt;td>string&lt;/td>
&lt;td>访问其他服务的Endpoint的类型，默认为 internal&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>admin_password&lt;/td>
&lt;td>string&lt;/td>
&lt;td>Keystone服务账号密码&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>admin_project&lt;/td>
&lt;td>string&lt;/td>
&lt;td>Keystone服务账号所属项目&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>admin_project_domain&lt;/td>
&lt;td>string&lt;/td>
&lt;td>Keystone服务账号所属项目的域名称，默认为Default&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>admin_user&lt;/td>
&lt;td>string&lt;/td>
&lt;td>Keystone服务账号用户名&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>admin_domain&lt;/td>
&lt;td>string&lt;/td>
&lt;td>Keystone服务账号用户所属域名称，默认为 Default&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>auth_url&lt;/td>
&lt;td>string&lt;/td>
&lt;td>keystone的认证URL，一般为 https://&lt;keystone>:30500/v3&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>enable_ssl&lt;/td>
&lt;td>string&lt;/td>
&lt;td>是否启用TLS（https）&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>ssl_certfile&lt;/td>
&lt;td>string&lt;/td>
&lt;td>TLS证书的证书文件路径&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>ssl_keyfile&lt;/td>
&lt;td>string&lt;/td>
&lt;td>TLS证书的私钥路径&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>ssl_ca_certs&lt;/td>
&lt;td>string&lt;/td>
&lt;td>TLS证书的CA证书路径，该选项可选，如果certfile为包含了full chain的证书，则该选项可以为空&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>is_slave_node&lt;/td>
&lt;td>bool&lt;/td>
&lt;td>该运行实例是否为SLAVE状态。每个服务的定时任务只会在MASTER实例上运行&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>config_sync_period_seconds&lt;/td>
&lt;td>int&lt;/td>
&lt;td>从keystoneb被动同步下拉配置的时间间隔，默认为1800秒&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>sql_connection&lt;/td>
&lt;td>string&lt;/td>
&lt;td>定义通用的数据库的SQL连接字符串，默认为空&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>clickhouse&lt;/td>
&lt;td>string&lt;/td>
&lt;td>定义clickhouse的SQL连接字符串，默认为空&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>ops_log_with_clickhouse&lt;/td>
&lt;td>bool&lt;/td>
&lt;td>是否采用clickhouse来记录操作日志（opslog），默认为false，在设置了clickhouse，并且 ops_log_with_clickhouse 为true时，opslog记录保存在clickhouse&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>db_checksum_skip_init&lt;/td>
&lt;td>bool&lt;/td>
&lt;td>开启数据库完整性校验后，是否跳过数据库的初始化。如果不跳过，则需要等待较长的数据库 checksum 重新计算的时间&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>db_checksum_tables&lt;/td>
&lt;td>bool&lt;/td>
&lt;td>是否开启数据库完整性校验，如果开启，则对enable_db_checksum_tables的表做完整性校验&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>enable_db_checksum_tables&lt;/td>
&lt;td>[]string&lt;/td>
&lt;td>指定数据库完整性校验的数据库表名&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>auto_sync_table&lt;/td>
&lt;td>bool&lt;/td>
&lt;td>自动同步数据库schema，默认为false&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>exit_after_db_init&lt;/td>
&lt;td>bool&lt;/td>
&lt;td>初始化完数据库后，服务自动退出。如果auto_sync_table=true且 exit_after_db_init=true，则执行完数据库schema同步后，服务自动退出&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>global_virtual_resource_namespace&lt;/td>
&lt;td>bool&lt;/td>
&lt;td>是否资源使用全局名字空间，默认为true，也就是不同项目的资源名称不能重复&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>debug_sqlchemy&lt;/td>
&lt;td>bool&lt;/td>
&lt;td>是否打开sqlchemy的debug模式，默认为false，也就是不输出sqlchemy的日志&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>lockman_method&lt;/td>
&lt;td>string&lt;/td>
&lt;td>资源锁的实现机制，可选值为inmemory和etcd，默认为inmemory。如果服务启用多实例，则应该设置为etcd，实现分布式锁&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>etcd_lock_prefix&lt;/td>
&lt;td>string&lt;/td>
&lt;td>etcd分布锁的key的前缀&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>etcd_lock_ttl&lt;/td>
&lt;td>string&lt;/td>
&lt;td>etcd锁的过期时间，默认为5秒&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>etcd_endpoints&lt;/td>
&lt;td>string&lt;/td>
&lt;td>ectd的服务地址列表&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>etcd_username&lt;/td>
&lt;td>string&lt;/td>
&lt;td>etcd认证用户名&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>etcd_password&lt;/td>
&lt;td>string&lt;/td>
&lt;td>etcd认证用户密码&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>etcd_use_tls&lt;/td>
&lt;td>string&lt;/td>
&lt;td>ectd使用启用TLS&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>etcd_skip_tls_verify&lt;/td>
&lt;td>string&lt;/td>
&lt;td>etcd启用LTS，是否验证证书有效性&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>etcd_cacert&lt;/td>
&lt;td>string&lt;/td>
&lt;td>etcd启用TLS，CA证书文件的路径&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>etcd_cert&lt;/td>
&lt;td>string&lt;/td>
&lt;td>etcd启用TLS，证书文件的路径&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>etcd_key&lt;/td>
&lt;td>string&lt;/td>
&lt;td>etcd启用TLS，私钥文件的路径&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>splitable_max_duration_hours&lt;/td>
&lt;td>string&lt;/td>
&lt;td>日志启用自动分表，每个表保存时间的间隔，默认为一个月 30*24=720 小时&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>ops_log_max_keep_months&lt;/td>
&lt;td>string&lt;/td>
&lt;td>日志启用自动分表，默认保留的时间间隔，默认6个月&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>如果服务运行在Kubernetes中，配置信息以yaml形式保存在onecloud命名空间（namespace）下的configmap中，例如 region 服务的配置保存在 default-region 这个configmap中，服务启动时，该configmaps的内容被挂载到容器的 /etc/yunion/&lt;service>.conf 文件路径上，被服务以文件配置形式加载。因此，为了修改配置文件的内容，需要修改对应的configmaps的内容。&lt;/p>
&lt;p>通过如下命令修改configmap的配置：&lt;/p>
&lt;pre>&lt;code>kubectl -n onecloud edit configmap default-region
&lt;/code>&lt;/pre>&lt;p>修改configmap之后，需要重启服务才能使配置生效.&lt;/p>
&lt;h2 id="keystone服务配置">Keystone服务配置&lt;/h2>
&lt;p>部分服务实现了从Keystone的服务配置动态加载配置参数的能力，这些服务包括：notify, log, baremetal-agent, scheduler, keystone, glance, cloudid, region, webconsole, apigateway, meter, report。&lt;/p>
&lt;p>这些服务启动后，首先加载命令行参数和配置文件的配置参数，之后会加载存储在keystone的服务配置，并且保持准实时同步。在外部更新服务配置后，Keystone通过etcd推送配置更新到各个服务。&lt;/p>
&lt;p>每个服务存储在Keystone的配置又分为两部分：公共配置和个性化配置。如果一个配置项同时在公共配置和个性化配置中有效，则公共配置中的配置项优先级更高。&lt;/p>
&lt;h3 id="公共配置">公共配置&lt;/h3>
&lt;p>公共配置为所有服务共享的配置，存储在一个叫&amp;quot;common&amp;quot;的服务配置中，可以通过如下climc命令访问common的服务配置。&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">&lt;span style="color:#8f5902;font-style:italic"># 按json格式查看公共配置&lt;/span>
climc service-config-show common
&lt;span style="color:#8f5902;font-style:italic"># 按Yaml格式编辑公共服务配置&lt;/span>
climc service-config-edit common
&lt;/code>&lt;/pre>&lt;/div>&lt;p>支持的公共配置参数如下：&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>配置项&lt;/th>
&lt;th>类型&lt;/th>
&lt;th>说明&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>enable_quota_check&lt;/td>
&lt;td>bool&lt;/td>
&lt;td>是否开启配额，默认为 false，开启后，新建资源需要检查对应项目或域的配额&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>default_quota_value&lt;/td>
&lt;td>string&lt;/td>
&lt;td>开启配额后，新的域或项目的默认初始配额，有三种取值：unlimit(默认无上限), zero(默认0配额), default(默认初始值，由各个服务定制每个资源配额的默认值)，默认为default&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>non_default_domain_projects&lt;/td>
&lt;td>bool&lt;/td>
&lt;td>是否允许非Default域拥有项目，也就是是否允许三级权限。如果为true，则资源按照全局，域，项目三级组织&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>time_zone&lt;/td>
&lt;td>string&lt;/td>
&lt;td>平台部署的时区，默认是中国时区，即 “Asia/Shanghai”&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>domainized_namespace&lt;/td>
&lt;td>bool&lt;/td>
&lt;td>是否每个租户是一个独立的名字空间，默认false&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>api_server&lt;/td>
&lt;td>string&lt;/td>
&lt;td>平台对外服务的地址，浏览器打开平台web控制台的URL地址&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>customized_private_prefixes&lt;/td>
&lt;td>[]string&lt;/td>
&lt;td>自定义的私有IP地址段，如果不设置，则默认为 RFC1918(&lt;a href="https://datatracker.ietf.org/doc/html/rfc1918">https://datatracker.ietf.org/doc/html/rfc1918&lt;/a>) 定义的私有云IP地址空间&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>global_http_proxy&lt;/td>
&lt;td>string&lt;/td>
&lt;td>全局http代理地址&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>global_https_proxy&lt;/td>
&lt;td>string&lt;/td>
&lt;td>全局https代理地址&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>ignore_nonrunning_guests&lt;/td>
&lt;td>bool&lt;/td>
&lt;td>是否忽略未运行的虚拟机的内存分配，默认为true，即虚拟机停机后，其内存不预留，可以被其他虚拟机占用。在资源紧张的情况，一台虚拟机关机后，不能保障是否有足够的内存允许其再次启动&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>platform_name&lt;/td>
&lt;td>string&lt;/td>
&lt;td>平台的缺省名称&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>platform_names&lt;/td>
&lt;td>map[string]string&lt;/td>
&lt;td>各语言下的平台名称，例如 map[string]string{&amp;ldquo;zh_CN&amp;rdquo;: &amp;ldquo;云&amp;rdquo;, &amp;ldquo;en_US&amp;rdquo;: &amp;ldquo;Cloud&amp;rdquo;}&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="服务个性化配置">服务个性化配置&lt;/h3>
&lt;p>除了公共配置，每个服务都有各自的个性化配置。可以使用如下climc命令访问存储在keystone的指定服务的配置信息：&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">&lt;span style="color:#8f5902;font-style:italic"># 按json格式查看配置&lt;/span>
climc service-config-show &amp;lt;service_name&amp;gt;
&lt;span style="color:#8f5902;font-style:italic"># 按Yaml格式编辑配置信息&lt;/span>
climc service-config-edit &amp;lt;service_name&amp;gt;
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="host-agent的服务配置">Host Agent的服务配置&lt;/h2>
&lt;p>和其他服务的服务配置相比，Host Agent的服务配置有一些特殊。首先，Host Agent的服务配置没有实现从keystone获取服务配置的功能，只支持从命令行参数和配置文件加载配置项。其次，Host Agent的文件配置分为两部分：一部分个是公共配置，位于/etc/yunion/common/common.conf，一部分是每台宿主机的个性化配置，位于/etc/yunion/host.conf。&lt;/p>
&lt;p>对于Kubernetes中部署的HostAgent服务，公共配置存储在 onecloud 命名空间下的名称为 default-host 的 configmap 中。个性化配置存储在每台宿主机的 /etc/yunion/host.conf 的配置文件中。&lt;/p>
&lt;p>常见的 HostAgent 公共配置项如下：&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>配置项&lt;/th>
&lt;th>类型&lt;/th>
&lt;th>说明&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>ExecutorSocketPath&lt;/td>
&lt;td>string&lt;/td>
&lt;td>本宿主机yunion-executor服务的监听socket地址，默认是 /var/run/onecloud/exec.sock&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>DeployServerSocketPath&lt;/td>
&lt;td>string&lt;/td>
&lt;td>本宿主机host-deployer服务的监听socket地址，默认是 /var/run/onecloud/deploy.sock&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>EnableRemoteExecutor&lt;/td>
&lt;td>bool&lt;/td>
&lt;td>是否使用yunion-executor来执行命令，默认 false。如果host在容器中运行，必须为 true&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>ManageNtpConfiguration&lt;/td>
&lt;td>bool&lt;/td>
&lt;td>HostAgent是否管理宿主机的ntp配置，默认是 true&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>DisableSecurityGroup&lt;/td>
&lt;td>bool&lt;/td>
&lt;td>是否在本宿主机禁用安全组功能，默认是 false&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>HostCpuPassthrough&lt;/td>
&lt;td>bool&lt;/td>
&lt;td>是否给虚拟机透传宿主机的CPU型号，如果不透传，虚拟机的CPU型号qemu64。默认为 true，即透传宿主机CPU 到虚拟机&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>DefaultQemuVersion&lt;/td>
&lt;td>string&lt;/td>
&lt;td>缺省的qemu版本，在3.9之后，默认版本为 4.2.0，在3.9之前，默认版本是 2.12.1&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="查看服务的当前配置参数">查看服务的当前配置参数&lt;/h2>
&lt;p>从3.9开始，部分服务增加了一个app-options的API，可以获得该服务当前生效的配置参数。&lt;/p>
&lt;p>可以通过如下climc命令读取指定服务的配置参数，支持的服务有：identity, compute, image, baremetal, meter&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">climc app-options-show &amp;lt;service-type&amp;gt;
&lt;/code>&lt;/pre>&lt;/div>&lt;p>可以通过如下climc命令，获取指定宿主机的host服务的配置参数：&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">climc host-app-options &amp;lt;host-id&amp;gt;
&lt;/code>&lt;/pre>&lt;/div></description></item></channel></rss>