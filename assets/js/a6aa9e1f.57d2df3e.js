"use strict";(self.webpackChunkdocs_new=self.webpackChunkdocs_new||[]).push([[7643],{82052:(e,t,n)=>{n.r(t),n.d(t,{default:()=>v});n(96540);var s=n(18215),i=n(44586),a=n(61213),r=n(17559),o=n(26535),l=n(21312),c=n(39022),g=n(74848);function d(e){const{metadata:t}=e,{previousPage:n,nextPage:s}=t;return(0,g.jsxs)("nav",{className:"pagination-nav","aria-label":(0,l.T)({id:"theme.blog.paginator.navAriaLabel",message:"Blog list page navigation",description:"The ARIA label for the blog pagination"}),children:[n&&(0,g.jsx)(c.A,{permalink:n,title:(0,g.jsx)(l.A,{id:"theme.blog.paginator.newerEntries",description:"The label used to navigate to the newer blog posts page (previous page)",children:"Newer Entries"})}),s&&(0,g.jsx)(c.A,{permalink:s,title:(0,g.jsx)(l.A,{id:"theme.blog.paginator.olderEntries",description:"The label used to navigate to the older blog posts page (next page)",children:"Older Entries"}),isNext:!0})]})}var p=n(41463),h=n(7131),u=n(24651);function x(e){let{items:t,component:n=u.A}=e;return(0,g.jsx)(g.Fragment,{children:t.map((e=>{let{content:t}=e;return(0,g.jsx)(h.i,{content:t,children:(0,g.jsx)(n,{children:(0,g.jsx)(t,{})})},t.metadata.permalink)}))})}var j=n(5260),m=n(6676);function b(e){const t=(0,m.k)(e);return(0,g.jsx)(j.A,{children:(0,g.jsx)("script",{type:"application/ld+json",children:JSON.stringify(t)})})}function A(e){const{metadata:t}=e,{siteConfig:{title:n}}=(0,i.A)(),{blogDescription:s,blogTitle:r,permalink:o}=t,l="/"===o?n:r;return(0,g.jsxs)(g.Fragment,{children:[(0,g.jsx)(a.be,{title:l,description:s}),(0,g.jsx)(p.A,{tag:"blog_posts_list"})]})}function f(e){const{metadata:t,items:n,sidebar:s}=e;return(0,g.jsxs)(o.A,{sidebar:s,children:[(0,g.jsx)(x,{items:n}),(0,g.jsx)(d,{metadata:t})]})}function v(e){return(0,g.jsxs)(a.e3,{className:(0,s.A)(r.G.wrapper.blogPages,r.G.page.blogListPage),children:[(0,g.jsx)(A,{...e}),(0,g.jsx)(b,{...e}),(0,g.jsx)(f,{...e})]})}},67332:(e,t,n)=>{n.d(t,{A:()=>a});n(96540);var s=n(52830),i=n(74848);function a(e){const t={...e};return t?.code?.length>2&&(t.code=t.code.split("\n").map((e=>e.length>2&&"$ "===e.substring(0,2)?e.substring(2):e)).join("\n")),(0,i.jsx)(i.Fragment,{children:(0,i.jsx)(s.A,{...t})})}}}]);