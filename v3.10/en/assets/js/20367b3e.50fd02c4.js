"use strict";(self.webpackChunkdocs_new=self.webpackChunkdocs_new||[]).push([[7645],{15558:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>s,default:()=>u,frontMatter:()=>o,metadata:()=>a,toc:()=>l});var i=t(74848),r=t(28453);const o={sidebar_position:1},s="Query API",a={id:"development/monitor/query",title:"Query API",description:"Overview of the query interface for the unifiedmonitor monitoring service provided by monitor.",source:"@site/i18n/en/docusaurus-plugin-content-docs/current/development/monitor/query.md",sourceDirName:"development/monitor",slug:"/development/monitor/query",permalink:"/v3.10/en/docs/development/monitor/query",draft:!1,unlisted:!1,editUrl:"https://github.com/yunionio/website/tree/master/docs/development/monitor/query.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"\u76d1\u63a7",permalink:"/v3.10/en/docs/development/monitor/"},next:{title:"CHANGELOG",permalink:"/v3.10/en/docs/development/changelog/"}},c={},l=[{value:"Query Request",id:"query-request",level:2},{value:"Query Example",id:"query-example",level:3},{value:"SDK",id:"sdk",level:2},{value:"Signature",id:"signature",level:2},{value:"Disabling Signature",id:"disabling-signature",level:3},{value:"Calculation Method",id:"calculation-method",level:3},{value:"Command-line Tool",id:"command-line-tool",level:2},{value:"Directly Querying Monitoring Data",id:"directly-querying-monitoring-data",level:2},{value:"Querying VictoriaMetrics Data",id:"query-victoric-metrics-data",level:3},{value:"Query InfluxDB data",id:"query-influxdb-data",level:3}];function d(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",li:"li",ol:"ol",p:"p",pre:"pre",ul:"ul",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h1,{id:"query-api",children:"Query API"}),"\n",(0,i.jsxs)(n.p,{children:["Overview of the query interface for the ",(0,i.jsx)(n.code,{children:"unifiedmonitor"})," monitoring service provided by monitor."]}),"\n",(0,i.jsx)(n.h2,{id:"query-request",children:"Query Request"}),"\n",(0,i.jsx)(n.p,{children:"Currently, the backend of the monitoring service interfaces with InfluxDB. Query requests are converted to InfluxDB query requests, and then related metrics are returned."}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Method: ",(0,i.jsx)(n.code,{children:"POST"})]}),"\n",(0,i.jsxs)(n.li,{children:["Path: ",(0,i.jsx)(n.code,{children:"/api/v1/unifiedmonitors/query/"})]}),"\n",(0,i.jsx)(n.li,{children:"Body: See example below"}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"query-example",children:"Query Example"}),"\n",(0,i.jsx)(n.p,{children:"The following query request will be converted to an InfluxDB query request:"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:"Query CPU usage of a virtual machine"}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-javascript",children:'{\n    "metric_query": [\n        {\n            "model": {\n                "measurement": "vm_cpu", // Corresponding to measurement in InfluxDB\n                "select": [ // Corresponding to `SELECT`\n                    [\n                        {\n                            "type": "field",\n                            "params": [\n                                "usage_active" // The queried indicator field\n                            ]\n                        },\n                        {\n                            "type": "mean", // Take the average value, other supported types please refer to: https://github.com/yunionio/cloudpods/blob/v3.10.0-rc2/pkg/monitor/tsdb/driver/influxdb/query_part.go#L36-L116\n                            "params": []\n                        },\n                        {\n                            "type": "alias", // Set the alias\n                            "params": [\n                                "CPU usage"\n                            ]\n                        }\n                    ]\n                ],\n                "tags": [ // Corresponding to `WHERE`\n                    {\n                        "key": "vm_id",\n                        "value": "49d1f759-138e-4495-8e35-94c2128374f1",\n                        "operator": "="\n                    },\n                    {\n                        "condition": "OR", // Can be set to `OR` and `AND`\n                        "key": "hostname",\n                        "value": "vm1",\n                        "operator": "="\n                    }\n                ],\n                "group_by": [ // Corresponding to `GROUP BY`\n                    {\n                        "type": "tag",\n                        "params": [\n                            "vm_id"\n                        ]\n                    }\n                ]\n            }\n        }\n    ],\n    "scope": "system", // Query resource scope: system represents global scope, domain represents domain scope, project represents project scope\n        "from": "1h", // Query metrics from the past 1 hour\n        "to": "now", // Until now, not required, default is from to now\n        "interval": "1m", // Metric interval\n        "skip_check_series": false, // Whether to skip resource check by cloud platform and supplement missing tag\n        "signature": "3be888cf6e45cb72cc1103ec0fd789572e2f3dc93566a8fe86694518e83625e8" // Signature calculated based on the above fields\n}\n'})}),"\n",(0,i.jsx)(n.p,{children:"The converted InfluxDB request is:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sql",children:'SELECT mean("usage_active") AS "CPU Usage" FROM "vm_cpu"\nWHERE ("vm_id" = \'49d1f759-138e-4495-8e35-94c2128374f1\' OR "hostname" = \'vm1\') and time > now() - 1h\nGROUP BY "vm_id", time(1m) fill(none)\n'})}),"\n",(0,i.jsx)(n.p,{children:"More supported queries can be found here:"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"https://github.com/yunionio/cloudpods/blob/v3.10.0-rc2/pkg/monitor/tsdb/driver/influxdb/query_test.go",children:"https://github.com/yunionio/cloudpods/blob/v3.10.0-rc2/pkg/monitor/tsdb/driver/influxdb/query_test.go"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:'# The following request body corresponds to the InfluxDB query: "SELECT mean(\\"free\\") / mean(\\"total\\") FROM \\"disk\\" WHERE (\\"path\\" = \'/\') AND time > now() - 1h GROUP BY *, time(2m) fill(none)"\n\n{\n\t"database": "telegraf",\n\t"measurement": "disk",\n\t"select": [\n\t\t[\n\t\t\t{\n\t\t\t\t"type": "field",\n\t\t\t\t"params": [\n\t\t\t\t\t"free"\n\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\t"type": "mean"\n\t\t\t},\n\t\t\t{\n\t\t\t\t"type": "math",\n\t\t\t\t"params": [\n\t\t\t\t\t"/ mean(\\"total\\")"\n\t\t\t\t]\n\t\t\t}\n\t\t]\n\t],\n\t"tags": [\n\t\t{\n\t\t\t"key": "path",\n\t\t\t"value": "/",\n\t\t\t"operator": "="\n\t\t}\n\t]\n}\n'})}),"\n",(0,i.jsxs)(n.ol,{start:"2",children:["\n",(0,i.jsx)(n.li,{children:"Customized query time range"}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["By setting the ",(0,i.jsx)(n.code,{children:"from"})," and ",(0,i.jsx)(n.code,{children:"to"})," parameters, the query time range can be customized. InfluxDB retains metrics for 30 days by default."]}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"from"})," and ",(0,i.jsx)(n.code,{children:"to"})," parameters need to be converted to a Unix Epoch format. For example:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-javascript",children:'{\n  "metric_query": [...],\n  "from": "1474973725473", // Tuesday, September 27, 2016, 6:55:25 PM GMT+08:00\n  "to":   "1474975757930", // Tuesday, September 27, 2016, 7:29:17 PM GMT+08:00\n}\n'})}),"\n",(0,i.jsx)(n.h2,{id:"sdk",children:"SDK"}),"\n",(0,i.jsx)(n.p,{children:"The following SDK can be used to construct monitoring query requests:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"Go:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Construct query request: ",(0,i.jsx)(n.a,{href:"https://github.com/yunionio/cloudpods/blob/release/3.10/pkg/mcclient/modules/monitor/helper.go#L587-L672",children:"MetricQueryInput"})]}),"\n",(0,i.jsxs)(n.li,{children:["Send a request: ",(0,i.jsx)(n.a,{href:"https://github.com/yunionio/cloudpods/blob/release/3.10/pkg/mcclient/modules/monitor/mod_unifiedmonitor.go#L52-L54",children:"PerformQuery"})]}),"\n",(0,i.jsxs)(n.li,{children:["Usage examples:","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://github.com/yunionio/cloudpods/blob/release/3.10/pkg/mcclient/options/monitor/unifiedmonitor.go#L67-L116",children:"Command line parameters"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://github.com/yunionio/cloudpods/blob/release/3.10/pkg/monitor/models/unifiedmonitor.go#L533-L555",children:"Server-side Construction"})}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"Java:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Construct query request: ",(0,i.jsx)(n.a,{href:"https://github.com/yunionio/mcclient_java/blob/v3.2.10/src/main/java/com/yunionyun/mcp/mcclient/managers/impl/monitor/MetricQueryInput.java",children:"MetricQueryInput"})]}),"\n",(0,i.jsxs)(n.li,{children:["Request initiation: ",(0,i.jsx)(n.a,{href:"https://github.com/yunionio/mcclient_java/blob/v3.2.10/src/main/java/com/yunionyun/mcp/mcclient/managers/impl/monitor/UnifiedMonitorManager.java#L30-L32",children:"PerformQuery"})]}),"\n",(0,i.jsxs)(n.li,{children:["Example usage: ",(0,i.jsx)(n.a,{href:"https://github.com/yunionio/mcclient_java/pull/52/files#diff-64be3a95e81733de6ac3e486a4631b18b031c2720106473fbb16d25a9cae4dd9R19-R35",children:"Refer to this PR"})]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"signature",children:"Signature"}),"\n",(0,i.jsx)(n.p,{children:"The purpose of a signature is to prevent tampering with query conditions. If this feature is not needed, the monitor service can be configured to disable it."}),"\n",(0,i.jsx)(n.h3,{id:"disabling-signature",children:"Disabling Signature"}),"\n",(0,i.jsx)(n.p,{children:"Use the following method to disable signature verification:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"# Edit the monitor service configmap\n$ kubectl edit configmap -n onecloud default-monitor\n...\n    # Set this configuration to true\n    disable_query_signature_check: true\n...\n\n# Restart the monitor service\n$ kubectl rollout restart deployment -n onecloud default-monitor\n"})}),"\n",(0,i.jsx)(n.h3,{id:"calculation-method",children:"Calculation Method"}),"\n",(0,i.jsx)(n.p,{children:"If you need to use the signature verification feature, you can refer to the following method to calculate the signature:"}),"\n",(0,i.jsxs)(n.p,{children:["The calculation method of the signature can refer to the frontend JavaScript code here: ",(0,i.jsx)(n.a,{href:"https://github.com/yunionio/dashboard/blob/v3.10.0-rc2/src/utils/crypto.js#L11-L18",children:"https://github.com/yunionio/dashboard/blob/v3.10.0-rc2/src/utils/crypto.js#L11-L18"})]}),"\n",(0,i.jsx)(n.h2,{id:"command-line-tool",children:"Command-line Tool"}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"climc monitor-unifiedmonitor-query"})," command can be used to query platform monitoring data."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"# Query the `usage_active` indicator in the vm_cpu measurement\n$ climc --debug monitor-unifiedmonitor-query vm_cpu usage_active\n\n# Set the indicator interval to `1m` and filter using `--tags`\n$ climc --debug monitor-unifiedmonitor-query --interval 1m --tags vm_id=e0d3c5ce-ec65-42ad-89d9-0b75953f841e --tags zone=YunionHQ vm_cpu usage_active\n\n# Query data within a time period\n$ climc --debug monitor-unifiedmonitor-query --from 2023-12-07T23:54:42.123Z --to 2023-12-08T13:54:42.123Z vm_cpu usage_active\n"})}),"\n",(0,i.jsx)(n.h2,{id:"directly-querying-monitoring-data",children:"Directly Querying Monitoring Data"}),"\n",(0,i.jsx)(n.p,{children:"The platform now supports storing monitoring data in either VictoriaMetrics or InfluxDB. The following method can be used to query the monitoring data of the corresponding time series databases."}),"\n",(0,i.jsxs)(n.p,{children:["Regarding the switch from InfluxDB to VictoriaMetrics, refer to the document: ",(0,i.jsx)(n.a,{href:"/v3.10/en/docs/operations/monitoring/migrating-to-vm",children:"Switching from InfluxDB to VictoriaMetrics"}),"."]}),"\n",(0,i.jsx)(n.h3,{id:"query-victoric-metrics-data",children:"Querying VictoriaMetrics Data"}),"\n",(0,i.jsxs)(n.p,{children:["If you use VictoriaMetrics as the monitoring backend, you can access the VictoriaMetrics frontend web interface through ",(0,i.jsx)(n.code,{children:"https://control-node-IP:30428/vmui/"}),". VictoriaMetrics uses MetricsQL query syntax, please refer to the following documents for specific usage:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'# Query CPU usage_active metrics\ncpu_usage_active\n\n# Query the disk free metric and filter it to host_id="32d41926-6038-42a3-8a31-40c08274823b"\ndisk_free{host_id="32d41926-6038-42a3-8a31-40c08274823b"}\n\n# Query the disk free indicator, filter by device="sda2", path="/opt/cloud"\ndisk_free{device="sda2",path="/opt/cloud"}\n\n# Query metrics starting with mem_\n{__name__=~"mem_.*"}\n\n# Query the mem used metric, and use the regular expression host=~"ha-test0[1,2].*"\nmem_used{host=~"ha-test0[1,2].*"}\n'})}),"\n",(0,i.jsx)(n.p,{children:"For more information, please refer to the following documentation:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"https://docs.victoriametrics.com/MetricsQL.html",children:"MetricsQL"})}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"The following is a description of the telegraf for reporting monitoring metrics:"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.admonition,{type:"tip",children:[(0,i.jsx)(n.p,{children:"Currently, the format for reporting monitoring data is InfluxDB line format. When monitoring metrics are sent to VictoriaMetrics, they will be automatically converted to the corresponding format."}),(0,i.jsxs)(n.p,{children:["For example, the InfluxDB line format: ",(0,i.jsx)(n.code,{children:"cpu,tag1=value1 usage_active=30"})]}),(0,i.jsxs)(n.p,{children:["Will be converted to VictoriaMetrics format: ",(0,i.jsx)(n.code,{children:'cpu_usage_active{tag1="value1"} 30'})]}),(0,i.jsx)(n.p,{children:"Please reference the following document for specific format conversions:"}),(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://docs.victoriametrics.com/Single-server-VictoriaMetrics.html#how-to-send-data-from-influxdb-compatible-agents-such-as-telegraf",children:"How to send data from InfluxDB-compatible agents such as Telegraf"})}),"\n"]})]}),"\n",(0,i.jsx)(n.h3,{id:"query-influxdb-data",children:"Query InfluxDB data"}),"\n",(0,i.jsx)(n.p,{children:"If you use InfluxDB as the monitoring backend, you can directly enter the InfluxDB container to use the command line for querying metrics using the following method:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"$ kubectl exec -ti -n onecloud $(kubectl get pods -n onecloud | grep default-influxdb | awk '{print $1}') -- influx -host 127.0.0.1 -port 30086 -type influxql -ssl  -precision rfc3339 -unsafeSsl\n\n# Use telegraf database\nuse telegraf\n\n# View available measurements\nshow measurements\n"})})]})}function u(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>s,x:()=>a});var i=t(96540);const r={},o=i.createContext(r);function s(e){const n=i.useContext(o);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:s(e.components),i.createElement(o.Provider,{value:n},e.children)}}}]);