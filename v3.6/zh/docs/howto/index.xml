<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Cloudpods – 操作管理</title><link>https://www.cloudpods.org//v3.6/zh/docs/howto/</link><description>Recent content in 操作管理 on Cloudpods</description><generator>Hugo -- gohugo.io</generator><lastBuildDate>Tue, 26 Nov 2019 16:57:43 +0800</lastBuildDate><atom:link href="https://www.cloudpods.org//v3.6/zh/docs/howto/index.xml" rel="self" type="application/rss+xml"/><item><title>Docs: 命令行工具</title><link>https://www.cloudpods.org//v3.6/zh/docs/howto/climc/</link><pubDate>Thu, 11 Jul 2019 20:39:39 +0800</pubDate><guid>https://www.cloudpods.org//v3.6/zh/docs/howto/climc/</guid><description>
&lt;p>云平台的命令行管理工具是 &lt;code>climc&lt;/code>, 可以通过该工具向后端各个服务发送API请求, 实现对资源的操控。&lt;/p>
&lt;p>通过快速开始的&lt;a href="../../quickstart/allinone/">All in One安装&lt;/a>或&lt;a href="../../setup">安装部署&lt;/a>章节搭建开源版Cloudpods环境时，控制节点都会安装climc，可直接跳过安装climc章节直接查看使用climc章节。&lt;/p>
&lt;p>下面介绍如何在非控制节点上安装climc。&lt;/p>
&lt;h2 id="安装">安装&lt;/h2>
&lt;p>可以通过 yum 或者源码编译的方式安装climc。&lt;/p>
&lt;h3 id="rpm-安装">RPM 安装&lt;/h3>
&lt;p>添加 yunion 的 yum 源，如果已经添加可以忽略这一步。&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">$ cat &lt;span style="color:#4e9a06">&amp;lt;&amp;lt;EOF &amp;gt;/etc/yum.repos.d/yunion.repo
&lt;/span>&lt;span style="color:#4e9a06">[yunion]
&lt;/span>&lt;span style="color:#4e9a06">name=Packages for Yunion Multi-Cloud Platform
&lt;/span>&lt;span style="color:#4e9a06">baseurl=https://iso.yunion.cn/yumrepo-3.2
&lt;/span>&lt;span style="color:#4e9a06">sslverify=0
&lt;/span>&lt;span style="color:#4e9a06">failovermethod=priority
&lt;/span>&lt;span style="color:#4e9a06">enabled=1
&lt;/span>&lt;span style="color:#4e9a06">gpgcheck=0
&lt;/span>&lt;span style="color:#4e9a06">EOF&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>安装 climc&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">$ sudo yum install -y yunion-climc
$ ls -alh /opt/yunion/bin/climc
-rwxr-xr-x &lt;span style="color:#0000cf;font-weight:bold">1&lt;/span> root root 24M Jul &lt;span style="color:#0000cf;font-weight:bold">18&lt;/span> 19:04 /opt/yunion/bin/climc
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="源码编译安装">源码编译安装&lt;/h3>
&lt;p>首先需要搭建 go 的开发环境，然后 clone 代码，参考: &lt;a href="../../contribute/contrib">开发贡献&lt;/a>&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">&lt;span style="color:#8f5902;font-style:italic"># 编译 climc&lt;/span>
$ &lt;span style="color:#204a87">cd&lt;/span> &lt;span style="color:#000">$GOPATH&lt;/span>/src/yunion.io/x/onecloud
$ make cmd/climc
&lt;span style="color:#8f5902;font-style:italic"># 等待编译完成后，climc 在 _output/bin 目录下&lt;/span>
$ ls -alh _output/bin/climc
-rwxr-xr-x &lt;span style="color:#0000cf;font-weight:bold">1&lt;/span> lzx lzx 25M Jul &lt;span style="color:#0000cf;font-weight:bold">15&lt;/span> 17:10 _output/bin/climc
&lt;/code>&lt;/pre>&lt;/div>&lt;p>可以根据自己的需要，将编译好的 climc 放到对应的目录，或者直接写 alias 对应到 $GOPATH/src/yunion.io/x/onecloud/_output/bin/climc 。&lt;/p>
&lt;h2 id="使用">使用&lt;/h2>
&lt;p>安装好 climc 后，可以将对应的可执行目录加入到 PATH 环境变量，下面假设 climc 所在的目录是 /opt/yunion/bin 。&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">&lt;span style="color:#8f5902;font-style:italic"># 根据自己的需要加到 bash 或者 zsh 配置文件里面&lt;/span>
$ &lt;span style="color:#204a87">echo&lt;/span> &lt;span style="color:#4e9a06">&amp;#39;export PATH=$PATH:/opt/yunion/bin&amp;#39;&lt;/span> &amp;gt;&amp;gt; ~/.bashrc &lt;span style="color:#ce5c00;font-weight:bold">&amp;amp;&amp;amp;&lt;/span> &lt;span style="color:#204a87">source&lt;/span> ~/.bashrc
$ climc --help
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="认证配置">认证配置&lt;/h3>
&lt;p>climc 请求云平台后端服务的流程如下:&lt;/p>
&lt;ol>
&lt;li>通过配置信息，使用用户名密码从 keystone 获取 token&lt;/li>
&lt;li>token 中包含了后端服务的 endpoint 地址&lt;/li>
&lt;li>climc 将对应资源的 CURD 请求发往所属的后端服务&lt;/li>
&lt;/ol>
&lt;p>所以在操作资源前，我们需要通过环境变量告诉 climc 想要操作的云平台和认证信息。&lt;/p>
&lt;p>目前climc支持两种认证方式：&lt;/p>
&lt;ul>
&lt;li>通过用户名／密码认证&lt;/li>
&lt;li>通过Access Key／Secret认证（从2.11开始支持）&lt;/li>
&lt;/ul>
&lt;h4 id="控制节点认证配置">控制节点认证配置&lt;/h4>
&lt;p>在控制节点上可直接通过以下命令认证配置。&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">&lt;span style="color:#8f5902;font-style:italic"># 获取环境变量&lt;/span>
$ ocadm cluster rcadmin
&lt;span style="color:#204a87">export&lt;/span> &lt;span style="color:#000">OS_AUTH_URL&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>https://192.168.0.246:5000/v3
&lt;span style="color:#204a87">export&lt;/span> &lt;span style="color:#000">OS_USERNAME&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>sysadmin
&lt;span style="color:#204a87">export&lt;/span> &lt;span style="color:#000">OS_PASSWORD&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>3hV3***84srk
&lt;span style="color:#204a87">export&lt;/span> &lt;span style="color:#000">OS_PROJECT_NAME&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>system
&lt;span style="color:#204a87">export&lt;/span> &lt;span style="color:#000">YUNION_INSECURE&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#204a87">true&lt;/span>
&lt;span style="color:#204a87">export&lt;/span> &lt;span style="color:#000">OS_REGION_NAME&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>region0
&lt;span style="color:#204a87">export&lt;/span> &lt;span style="color:#000">OS_ENDPOINT_TYPE&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>publicURL
&lt;span style="color:#8f5902;font-style:italic"># 认证环境变量&lt;/span>
$ &lt;span style="color:#204a87">source&lt;/span> &amp;lt;&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>ocadm cluster rcadmin&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>注意: 如果执行 climc 时出现 &lt;em>Error: Missing OS_AUTH_URL&lt;/em> 的错误提示时，请重新执行 &lt;code>source &amp;lt;(ocadm cluster rcadmin)&lt;/code> 命令。&lt;/p>
&lt;h4 id="非控制节点认证配置">非控制节点认证配置&lt;/h4>
&lt;p>在非控制节点做认证配置上首先需要在对应的控制节点上执行&lt;code>ocadm cluster rcadmin&lt;/code>；
将输出的认证信息保存到本地的文件中，通过source命令认证配置。&lt;/p>
&lt;p>以下为用户名／密码认证的配置文件模板，通过OS_USERNAME, OS_DOMAIN_NAME, OS_PASSWORD, OS_PROJECT_NAME, OS_PROJECT_DOMAIN等字段指定用户的信息和项目的信息。&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">&lt;span style="color:#8f5902;font-style:italic"># 在控制节点上获取认证所需要的配置信息。&lt;/span>
$ ocadm cluster rcadmin
&lt;span style="color:#204a87">export&lt;/span> &lt;span style="color:#000">OS_AUTH_URL&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>https://192.168.0.246:5000/v3
&lt;span style="color:#204a87">export&lt;/span> &lt;span style="color:#000">OS_USERNAME&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>sysadmin
&lt;span style="color:#204a87">export&lt;/span> &lt;span style="color:#000">OS_PASSWORD&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>3hV3***84srk
&lt;span style="color:#204a87">export&lt;/span> &lt;span style="color:#000">OS_PROJECT_NAME&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>system
&lt;span style="color:#204a87">export&lt;/span> &lt;span style="color:#000">YUNION_INSECURE&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#204a87">true&lt;/span>
&lt;span style="color:#204a87">export&lt;/span> &lt;span style="color:#000">OS_REGION_NAME&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>region0
&lt;span style="color:#204a87">export&lt;/span> &lt;span style="color:#000">OS_ENDPOINT_TYPE&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>publicURL
&lt;span style="color:#8f5902;font-style:italic"># 将上述认证信息保存到文件中，方便 source 使用&lt;/span>
$ cat &lt;span style="color:#4e9a06">&amp;lt;&amp;lt;EOF &amp;gt; ~/test_rc_admin
&lt;/span>&lt;span style="color:#4e9a06"># keystone 认证地址
&lt;/span>&lt;span style="color:#4e9a06">export OS_AUTH_URL=https://192.168.0.246:5000/v3
&lt;/span>&lt;span style="color:#4e9a06"># 用户名
&lt;/span>&lt;span style="color:#4e9a06">export OS_USERNAME=sysadmin
&lt;/span>&lt;span style="color:#4e9a06"># 用户密码
&lt;/span>&lt;span style="color:#4e9a06">export OS_PASSWORD=3hV3***84srk
&lt;/span>&lt;span style="color:#4e9a06"># 用户所属项目名称
&lt;/span>&lt;span style="color:#4e9a06">export OS_PROJECT_NAME=system
&lt;/span>&lt;span style="color:#4e9a06"># 允许 insecure https 连接
&lt;/span>&lt;span style="color:#4e9a06">export YUNION_INSECURE=true
&lt;/span>&lt;span style="color:#4e9a06"># 对应的 region
&lt;/span>&lt;span style="color:#4e9a06">export OS_REGION_NAME=region0
&lt;/span>&lt;span style="color:#4e9a06"># endpoint 类型为 public
&lt;/span>&lt;span style="color:#4e9a06">export OS_ENDPOINT_TYPE=publicURL
&lt;/span>&lt;span style="color:#4e9a06">EOF&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>以下为Access Key/Secret认证的配置文件模板，通过OS_ACCESS_KEY, OS_SECRET_KEY等两个字段指定用户的Access Key/secret。&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">&lt;span style="color:#8f5902;font-style:italic"># 在控制节点上获取用户在一个项目中的Access Key/Secret&lt;/span>
&lt;span style="color:#8f5902;font-style:italic"># 生成 Secret Key&lt;/span>
$ climc credential-create-aksk
+--------+----------------------------------------------+
&lt;span style="color:#000;font-weight:bold">|&lt;/span> Field &lt;span style="color:#000;font-weight:bold">|&lt;/span> Value &lt;span style="color:#000;font-weight:bold">|&lt;/span>
+--------+----------------------------------------------+
&lt;span style="color:#000;font-weight:bold">|&lt;/span> expire &lt;span style="color:#000;font-weight:bold">|&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">0&lt;/span> &lt;span style="color:#000;font-weight:bold">|&lt;/span>
&lt;span style="color:#000;font-weight:bold">|&lt;/span> secret &lt;span style="color:#000;font-weight:bold">|&lt;/span> &lt;span style="color:#000">VGFxZkE3QTd2MmhCbmZkVkJDcFZFaGJYdUQ2c05mUXM&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000;font-weight:bold">|&lt;/span>
+--------+----------------------------------------------+
&lt;span style="color:#8f5902;font-style:italic"># ID为 Access Key&lt;/span>
$ climc credential-list
+-----------------------+------------+------------+-----------------------+---------+---------+-----------+---------+-----------------------+-------------+--------------+-----------------------+------+-----------------------+----------------------+----------+----------------------+
&lt;span style="color:#000;font-weight:bold">|&lt;/span> blob &lt;span style="color:#000;font-weight:bold">|&lt;/span> can_delete &lt;span style="color:#000;font-weight:bold">|&lt;/span> can_update &lt;span style="color:#000;font-weight:bold">|&lt;/span> created_at &lt;span style="color:#000;font-weight:bold">|&lt;/span> deleted &lt;span style="color:#000;font-weight:bold">|&lt;/span> domain &lt;span style="color:#000;font-weight:bold">|&lt;/span> domain_id &lt;span style="color:#000;font-weight:bold">|&lt;/span> enabled &lt;span style="color:#000;font-weight:bold">|&lt;/span> id &lt;span style="color:#000;font-weight:bold">|&lt;/span> is_emulated &lt;span style="color:#000;font-weight:bold">|&lt;/span> name &lt;span style="color:#000;font-weight:bold">|&lt;/span> project_id &lt;span style="color:#000;font-weight:bold">|&lt;/span> &lt;span style="color:#204a87">type&lt;/span> &lt;span style="color:#000;font-weight:bold">|&lt;/span> update_version &lt;span style="color:#000;font-weight:bold">|&lt;/span> updated_at &lt;span style="color:#000;font-weight:bold">|&lt;/span> user &lt;span style="color:#000;font-weight:bold">|&lt;/span> user_id &lt;span style="color:#000;font-weight:bold">|&lt;/span>
+-----------------------+------------+------------+-----------------------+---------+---------+-----------+---------+-----------------------+-------------+--------------+-----------------------+------+-----------------------+----------------------+----------+----------------------+
&lt;span style="color:#000;font-weight:bold">|&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;expire&amp;#34;&lt;/span>:0,&lt;span style="color:#4e9a06">&amp;#34;secret&amp;#34;&lt;/span>: &lt;span style="color:#000;font-weight:bold">|&lt;/span> &lt;span style="color:#204a87">true&lt;/span> &lt;span style="color:#000;font-weight:bold">|&lt;/span> &lt;span style="color:#204a87">true&lt;/span> &lt;span style="color:#000;font-weight:bold">|&lt;/span> 2020-06-15T11:43:32.0 &lt;span style="color:#000;font-weight:bold">|&lt;/span> &lt;span style="color:#204a87">false&lt;/span> &lt;span style="color:#000;font-weight:bold">|&lt;/span> Default &lt;span style="color:#000;font-weight:bold">|&lt;/span> default &lt;span style="color:#000;font-weight:bold">|&lt;/span> &lt;span style="color:#204a87">true&lt;/span> &lt;span style="color:#000;font-weight:bold">|&lt;/span> 0d184a3c9c484e4c892f4 &lt;span style="color:#000;font-weight:bold">|&lt;/span> &lt;span style="color:#204a87">false&lt;/span> &lt;span style="color:#000;font-weight:bold">|&lt;/span> --1592221412 &lt;span style="color:#000;font-weight:bold">|&lt;/span> d53ea650bfe144da8ee8f &lt;span style="color:#000;font-weight:bold">|&lt;/span> aksk &lt;span style="color:#000;font-weight:bold">|&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">0&lt;/span> &lt;span style="color:#000;font-weight:bold">|&lt;/span> 2020-06-15T11:43:32. &lt;span style="color:#000;font-weight:bold">|&lt;/span> sysadmin &lt;span style="color:#000;font-weight:bold">|&lt;/span> a063d8e2cd584cc48194 &lt;span style="color:#000;font-weight:bold">|&lt;/span>
&lt;span style="color:#000;font-weight:bold">|&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;VGFxZkE3QTd2MmhCbmZk | | | 00000Z | | | | | 855935e37e7 | | | 3fba417b904 | | | 000000Z | | 5e7169280435 |
&lt;/span>&lt;span style="color:#4e9a06">| VkJDcFZFaGJYdUQ2c05mU | | | | | | | | | | | | | | | | |
&lt;/span>&lt;span style="color:#4e9a06">| XM=&amp;#34;&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span> &lt;span style="color:#000;font-weight:bold">|&lt;/span> &lt;span style="color:#000;font-weight:bold">|&lt;/span> &lt;span style="color:#000;font-weight:bold">|&lt;/span> &lt;span style="color:#000;font-weight:bold">|&lt;/span> &lt;span style="color:#000;font-weight:bold">|&lt;/span> &lt;span style="color:#000;font-weight:bold">|&lt;/span> &lt;span style="color:#000;font-weight:bold">|&lt;/span> &lt;span style="color:#000;font-weight:bold">|&lt;/span> &lt;span style="color:#000;font-weight:bold">|&lt;/span> &lt;span style="color:#000;font-weight:bold">|&lt;/span> &lt;span style="color:#000;font-weight:bold">|&lt;/span> &lt;span style="color:#000;font-weight:bold">|&lt;/span> &lt;span style="color:#000;font-weight:bold">|&lt;/span> &lt;span style="color:#000;font-weight:bold">|&lt;/span> &lt;span style="color:#000;font-weight:bold">|&lt;/span> &lt;span style="color:#000;font-weight:bold">|&lt;/span> &lt;span style="color:#000;font-weight:bold">|&lt;/span>
+-----------------------+------------+------------+-----------------------+---------+---------+-----------+---------+-----------------------+-------------+--------------+-----------------------+------+-----------------------+----------------------+----------+----------------------+
*** Total: &lt;span style="color:#0000cf;font-weight:bold">1&lt;/span> Pages: &lt;span style="color:#0000cf;font-weight:bold">1&lt;/span> Limit: &lt;span style="color:#0000cf;font-weight:bold">2048&lt;/span> Offset: &lt;span style="color:#0000cf;font-weight:bold">0&lt;/span> Page: &lt;span style="color:#0000cf;font-weight:bold">1&lt;/span> ***
&lt;span style="color:#8f5902;font-style:italic"># 将认证信息保存到文件中，方便 source 使用&lt;/span>
$ cat &lt;span style="color:#4e9a06">&amp;lt;&amp;lt;EOF &amp;gt; ~/test_rc_aksk
&lt;/span>&lt;span style="color:#4e9a06"># Access Key
&lt;/span>&lt;span style="color:#4e9a06">export OS_ACCESS_KEY=0d184a3c9c484e4c892f4855935e37e7
&lt;/span>&lt;span style="color:#4e9a06"># Secret
&lt;/span>&lt;span style="color:#4e9a06">export OS_SECRET_KEY=VG***5mUXM=
&lt;/span>&lt;span style="color:#4e9a06"># 允许 insecure https 连接
&lt;/span>&lt;span style="color:#4e9a06">export YUNION_INSECURE=true
&lt;/span>&lt;span style="color:#4e9a06"># keystone 认证地址
&lt;/span>&lt;span style="color:#4e9a06">export OS_AUTH_URL=https://192.168.0.246:5000/v3
&lt;/span>&lt;span style="color:#4e9a06"># 对应的 region
&lt;/span>&lt;span style="color:#4e9a06">export OS_REGION_NAME=region0
&lt;/span>&lt;span style="color:#4e9a06">EOF&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>模板配置完成后，通过以下名称认证环境变量。&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">&lt;span style="color:#8f5902;font-style:italic"># source 认证环境变量&lt;/span>
$ &lt;span style="color:#204a87">source&lt;/span> ~/test_rc_admin
&lt;span style="color:#8f5902;font-style:italic"># 或者想要使用 Access Key/Secret 登陆&lt;/span>
&lt;span style="color:#8f5902;font-style:italic"># source ~/test_rc_aksk&lt;/span>
&lt;span style="color:#8f5902;font-style:italic"># 执行climc。例如，查看虚拟机列表&lt;/span>
$ climc server-list
&lt;/code>&lt;/pre>&lt;/div>&lt;p>注意: 如果执行 climc 时出现 &lt;em>Error: Missing OS_AUTH_URL&lt;/em> 的错误提示时，请 source 或设置认证云平台的环境变量。&lt;/p>
&lt;p>可以通过查看 climc 的版本号来获取构建的信息。&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">$ climc --version
Yunion API client version:
&lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#4e9a06">&amp;#34;major&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;0&amp;#34;&lt;/span>,
&lt;span style="color:#4e9a06">&amp;#34;minor&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;0&amp;#34;&lt;/span>,
&lt;span style="color:#4e9a06">&amp;#34;gitVersion&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;v3.1.9-20200609.1&amp;#34;&lt;/span>,
&lt;span style="color:#4e9a06">&amp;#34;gitBranch&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;tags/v3.1.8^0&amp;#34;&lt;/span>,
&lt;span style="color:#4e9a06">&amp;#34;gitCommit&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;5591bbec4&amp;#34;&lt;/span>,
&lt;span style="color:#4e9a06">&amp;#34;gitTreeState&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;clean&amp;#34;&lt;/span>,
&lt;span style="color:#4e9a06">&amp;#34;buildDate&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;2020-06-09T12:00:48Z&amp;#34;&lt;/span>,
&lt;span style="color:#4e9a06">&amp;#34;goVersion&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;go1.13.9&amp;#34;&lt;/span>,
&lt;span style="color:#4e9a06">&amp;#34;compiler&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;gc&amp;#34;&lt;/span>,
&lt;span style="color:#4e9a06">&amp;#34;platform&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;linux/amd64&amp;#34;&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="运行模式">运行模式&lt;/h3>
&lt;p>climc 有命令行运行和交互两种运行模式。&lt;/p>
&lt;ul>
&lt;li>命令行运行: 执行完对应的资源操作命令就退出，这种模式你知道自己在做什么，并且可以作为 bash function/script 的一部分。&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">&lt;span style="color:#8f5902;font-style:italic"># 删除 server1, server2, server3&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">for&lt;/span> id in server1 server2 server3&lt;span style="color:#000;font-weight:bold">;&lt;/span> &lt;span style="color:#204a87;font-weight:bold">do&lt;/span>
climc server-update --delete &lt;span style="color:#204a87">enable&lt;/span> &lt;span style="color:#000">$id&lt;/span>
climc server-delete &lt;span style="color:#000">$id&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">done&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>交互模式: 在 shell 输入 climc，就会进入交互模式，这种模式下有自动补全和参数提示。
&lt;img src="images/climc-repl.png" alt="">&lt;/li>
&lt;/ul>
&lt;h3 id="子命令语法">子命令语法&lt;/h3>
&lt;p>云平台有很多资源，对应 climc 的子命令, 比如 &lt;code>climc server-list&lt;/code> 中的 &lt;code>server-list&lt;/code> 就是子命令，可以查询虚拟机的列表。通用格式如下:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">&amp;lt;Resource&amp;gt;-&amp;lt;Action&amp;gt;: Resource 表示资源, Action 表示行为
&lt;/code>&lt;/pre>&lt;/div>&lt;p>语法举例:&lt;/p>
&lt;ul>
&lt;li>server-delete: 删除虚拟机
&lt;ul>
&lt;li>server 是资源, delete 是行为&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>host-list: 查询宿主机列表
&lt;ul>
&lt;li>host 是资源, list 是行为&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>CRUD 举例:&lt;/p>
&lt;ul>
&lt;li>&lt;em>C&lt;/em>: server-create, disk-create 创建资源&lt;/li>
&lt;li>&lt;em>R&lt;/em>: server-show, disk-list 查询资源&lt;/li>
&lt;li>&lt;em>U&lt;/em>: server-update, host-update 更新资源&lt;/li>
&lt;li>&lt;em>D&lt;/em>: server-delete, image-delete 删除资源&lt;/li>
&lt;/ul>
&lt;p>行为举例:&lt;/p>
&lt;p>&lt;Resource>-&lt;Action> 中的 Action 会对应资源的操作，不同的资源会根据可进行的操作进行命名。&lt;/p>
&lt;ul>
&lt;li>server-migrate: migrate 表示迁移虚拟机&lt;/li>
&lt;li>server-change-config: change-config 表示调整虚拟机配置&lt;/li>
&lt;li>host-ipmi: ipmi 表示查询宿主机的 IPMI 信息&lt;/li>
&lt;/ul>
&lt;p>想要知道资源有哪些操作，可以进入交互模式补全查询。&lt;/p>
&lt;h3 id="使用帮助-help">使用帮助 help&lt;/h3>
&lt;p>climc 的子命令有很多参数，参数分为必填参数和可选参数，使用 &lt;code>climc help &amp;lt;subcommand&amp;gt;&lt;/code> 这种格式，&lt;strong>help&lt;/strong> 子命令会获取 &lt;subcommand> 提供的参数和各个参数的解释。&lt;/p>
&lt;p>比如我要查看 &lt;code>image-upload&lt;/code> 命令的参数和解释:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">$ climc &lt;span style="color:#204a87">help&lt;/span> image-upload
...
Upload a &lt;span style="color:#204a87">local&lt;/span> image
Positional arguments:
&amp;lt;NAME&amp;gt;
Image Name
&amp;lt;FILE&amp;gt;
The &lt;span style="color:#204a87">local&lt;/span> image filename to Upload
Optional arguments:
&lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span>--private&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span>
Make image private
&lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span>--format &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>raw,qcow2,iso,vmdk,docker,vhd&lt;span style="color:#ce5c00;font-weight:bold">}]&lt;/span>
Image format
&lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span>--protected&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span>
...
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="高级过滤-filter">高级过滤 filter&lt;/h3>
&lt;p>TODO&lt;/p>
&lt;h3 id="debug-模式">Debug 模式&lt;/h3>
&lt;p>如果想要知道 climc 操作资源时究竟和服务端发生了哪些请求，可以在子命令前面使用 &lt;em>&amp;ndash;debug&lt;/em> 参数，使用方式如下:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">climc --debug &amp;lt;Resource&amp;gt;-&amp;lt;Action&amp;gt;
&lt;/code>&lt;/pre>&lt;/div>&lt;p>加上 &amp;ndash;debug 参数后，终端会有彩色的输出提示，比如 &lt;code>climc --debug server-list&lt;/code> 输出如下:&lt;/p>
&lt;p>&lt;img src="images/climc-debug.png" alt="">&lt;/p>
&lt;p>其中 CURL 部分是可以直接粘贴出来在命令行执行的。&lt;/p>
&lt;h4 id="颜色约定">颜色约定&lt;/h4>
&lt;ul>
&lt;li>Request 使用黄色&lt;/li>
&lt;li>CURL 使用蓝绿色&lt;/li>
&lt;li>根据状态码显示不同颜色，可参考代码: &lt;a href="https://github.com/yunionio/onecloud/blob/master/pkg/util/httputils/httputils.go#L234">https://github.com/yunionio/onecloud/blob/master/pkg/util/httputils/httputils.go#L234&lt;/a>&lt;/li>
&lt;/ul>
&lt;h4 id="在bash或zsh下的命令行参数提示补全">在bash或zsh下的命令行参数提示补全&lt;/h4>
&lt;p>climc支持bash或zsh的命令行参数自动提示补全。&lt;/p>
&lt;p>下面以bash为例说明，在使用climc之前，执行如下命令初始化环境。&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">&lt;span style="color:#8f5902;font-style:italic"># 启用bash命令行参数自动补全&lt;/span>
&lt;span style="color:#204a87">source&lt;/span> &amp;lt;&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>climc --completion bash&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>之后在bash中可以在输入climc命令后，通过tab获得命令行参数的提示。&lt;/p>
&lt;p>为了方便使用，推荐将该命令放到$HOME/.bashrc或$HOME/.bash_profile中自动初始化环境。&lt;/p></description></item><item><title>Docs: 镜像</title><link>https://www.cloudpods.org//v3.6/zh/docs/howto/image/</link><pubDate>Fri, 19 Jul 2019 10:27:28 +0800</pubDate><guid>https://www.cloudpods.org//v3.6/zh/docs/howto/image/</guid><description>
&lt;ul>
&lt;li>
&lt;p>镜像(image): 是用于新建云服务器(虚拟机)、裸金属(物理机)使用的模板文件，常用类型为 qcow2, vmdk, raw, vhd, iso。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>镜像服务(glance): 云平台的镜像服务叫做 glance，用于存储转换用户上传或外部导入的镜像，提供下载功能。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>缓存镜像(cached-image): 创建公/私有云虚拟机时，可以直接使用各个云平台已有的镜像，这些镜像不会存储在 glance，云平台只是保存元信息，创建机器时会直接使用。&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>image 和 cached-image 两种资源的区别如下：&lt;/p>
&lt;ul>
&lt;li>image: glance 管理的镜像，由用户上传或者外部导入;&lt;/li>
&lt;li>cached-image:
&lt;ul>
&lt;li>包括公有云和其他私有云的镜像，不由 glance 管理，一般在创建 Cloudpods 之外的公/私有云主机的时候用到;&lt;/li>
&lt;li>不提供创建接口，只能查询，刷新和删除;&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul></description></item><item><title>Docs: 云主机</title><link>https://www.cloudpods.org//v3.6/zh/docs/howto/server/</link><pubDate>Fri, 19 Jul 2019 10:26:40 +0800</pubDate><guid>https://www.cloudpods.org//v3.6/zh/docs/howto/server/</guid><description>
&lt;p>云主机(server)指云平台管理的虚拟机和裸金属服务器。&lt;/p>
&lt;ul>
&lt;li>
&lt;p>虚拟机: 又叫做云服务器，包括我们提供的 kvm 虚拟机、vmware、openstack 和各个公有云的虚拟机。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>裸金属: 云平台提供物理机(baremetal)装机功能，安装完操作系统并被云平台管理的服务器称为裸金属服务器。&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>现在支持的主机和平台的对应关系如下：&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th style="text-align:center">类型&lt;/th>
&lt;th style="text-align:center">平台&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td style="text-align:center">kvm&lt;/td>
&lt;td style="text-align:center">Cloudpods 私有云虚拟机&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">baremetal&lt;/td>
&lt;td style="text-align:center">Cloudpods 私有云裸金属&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">esxi&lt;/td>
&lt;td style="text-align:center">vmware 虚拟机&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">openstack&lt;/td>
&lt;td style="text-align:center">openstack 私有云虚拟机&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">zstack&lt;/td>
&lt;td style="text-align:center">zstack 私有云虚拟机&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">aliyun&lt;/td>
&lt;td style="text-align:center">阿里云虚拟机&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">qcloud&lt;/td>
&lt;td style="text-align:center">腾讯云虚拟机&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">aws&lt;/td>
&lt;td style="text-align:center">AWS 虚拟机&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">azure&lt;/td>
&lt;td style="text-align:center">Azure 虚拟机&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">huawei&lt;/td>
&lt;td style="text-align:center">华为云虚拟机&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">ucloud&lt;/td>
&lt;td style="text-align:center">UCloud 虚拟机&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table></description></item><item><title>Docs: 宿主机</title><link>https://www.cloudpods.org//v3.6/zh/docs/howto/host/</link><pubDate>Wed, 17 Jul 2019 11:35:12 +0800</pubDate><guid>https://www.cloudpods.org//v3.6/zh/docs/howto/host/</guid><description>
&lt;p>宿主机(host): 指运行虚拟机的机器，云平台的抽象的宿主机根据 hypervisor 字段判断不同平台的宿主机。现在支持的类型如下：&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th style="text-align:center">类型&lt;/th>
&lt;th style="text-align:center">平台&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td style="text-align:center">hypervisor&lt;/td>
&lt;td style="text-align:center">Cloudpods 私有云宿主机&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">baremetal&lt;/td>
&lt;td style="text-align:center">Cloudpods 私有云物理机&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">esxi&lt;/td>
&lt;td style="text-align:center">vmware 宿主机&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">openstack&lt;/td>
&lt;td style="text-align:center">openstack 私有云宿主机&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">zstack&lt;/td>
&lt;td style="text-align:center">zstack 私有云宿主机&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table></description></item><item><title>Docs: 物理机</title><link>https://www.cloudpods.org//v3.6/zh/docs/howto/baremetal/</link><pubDate>Wed, 10 Jul 2019 10:16:53 +0800</pubDate><guid>https://www.cloudpods.org//v3.6/zh/docs/howto/baremetal/</guid><description>
&lt;h1 id="术语解释">术语解释&lt;/h1>
&lt;ul>
&lt;li>
&lt;p>Baremetal: 指尚未安装操作系统的服务器， 也叫作物理机&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://zh.wikipedia.org/wiki/%E9%A2%84%E5%90%AF%E5%8A%A8%E6%89%A7%E8%A1%8C%E7%8E%AF%E5%A2%83">PXE (Preboot eXecution Environment)&lt;/a>: 使用网络接口启动计算机的机制。这种机制不依赖本地数据存储设备（如硬盘）或本地已安装的操作系统，使用 DHCP 协议查找引导服务器并获取 IP，再通过 TFTP 协议下载初始引导程序和附加文件启动&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://zh.wikipedia.org/wiki/%E5%8A%A8%E6%80%81%E4%B8%BB%E6%9C%BA%E8%AE%BE%E7%BD%AE%E5%8D%8F%E8%AE%AE">DHCP (Dynamic Host Configuration Protocol)&lt;/a>: 动态主机设置协议是一个局域网的网络协议，使用UDP协议工作，为机器分配 IP&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://zh.wikipedia.org/wiki/%E5%B0%8F%E5%9E%8B%E6%96%87%E4%BB%B6%E4%BC%A0%E8%BE%93%E5%8D%8F%E8%AE%AE">TFTP (Trivial File Transfer Protocol)&lt;/a>: 小型文件传输协议，使用UDP协议传输文件&lt;/p>
&lt;/li>
&lt;li>
&lt;p>DHCP Relay: 在不同子网和物理网段之间处理和转发dhcp信息的功能&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://zh.wikipedia.org/wiki/IPMI">IPMI (Intelligent Platform Management Interface)&lt;/a>：管理服务器硬件的标准，特性是独立于操作系统外自行运行，即使在缺少操作系统或系统管理软件、或受监控的系统关机但有接电源的情况下仍能远程管理系统，也能在操作系统引导后运行&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://en.wikipedia.org/wiki/Intelligent_Platform_Management_Interface#Baseboard_management_controller">BMC (Baseboard management controller)&lt;/a>: 基板管理控制器，支持行业标准的 IPMI 规范&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://zh.wikipedia.org/wiki/Secure_Shell">SSH (Secure Shell)&lt;/a>: 用于远程登录控制服务器&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://zh.wikipedia.org/wiki/RAID">RAID (Redundant Array of Independent Disks)&lt;/a>: 磁盘阵列，把多个硬盘组合成为一个逻辑扇区，操作系统只会把它当作一个硬盘&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Region Service: 云平台控制服务，提供 baremetal 相关 API&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Baremetal Agent: 云平台管理 baremetal 的服务&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Glance Service: 云平台镜像服务，提供物理机装机的 Image 镜像&lt;/p>
&lt;/li>
&lt;li>
&lt;p>裸金属服务器: baremetal 物理机安装操作系统后，在云平台创建的 server 的记录&lt;/p>
&lt;/li>
&lt;li>
&lt;p>宿主机: 可以运行云平台虚拟机的节点&lt;/p>
&lt;/li>
&lt;/ul></description></item><item><title>Docs: 网络</title><link>https://www.cloudpods.org//v3.6/zh/docs/howto/network/</link><pubDate>Fri, 19 Jul 2019 10:27:40 +0800</pubDate><guid>https://www.cloudpods.org//v3.6/zh/docs/howto/network/</guid><description>
&lt;p>TODO&lt;/p></description></item><item><title>Docs: 负载均衡</title><link>https://www.cloudpods.org//v3.6/zh/docs/howto/lb/</link><pubDate>Fri, 19 Jul 2019 10:27:52 +0800</pubDate><guid>https://www.cloudpods.org//v3.6/zh/docs/howto/lb/</guid><description>
&lt;p>TODO&lt;/p></description></item><item><title>Docs: 存储</title><link>https://www.cloudpods.org//v3.6/zh/docs/howto/storage/</link><pubDate>Fri, 19 Jul 2019 20:48:20 +0800</pubDate><guid>https://www.cloudpods.org//v3.6/zh/docs/howto/storage/</guid><description>
&lt;p>TODO&lt;/p></description></item><item><title>Docs: 多云管理</title><link>https://www.cloudpods.org//v3.6/zh/docs/howto/multicloud/</link><pubDate>Fri, 19 Jul 2019 20:54:24 +0800</pubDate><guid>https://www.cloudpods.org//v3.6/zh/docs/howto/multicloud/</guid><description>
&lt;p>TODO&lt;/p></description></item><item><title>Docs: 认证与权限</title><link>https://www.cloudpods.org//v3.6/zh/docs/howto/auth/</link><pubDate>Fri, 19 Jul 2019 20:51:23 +0800</pubDate><guid>https://www.cloudpods.org//v3.6/zh/docs/howto/auth/</guid><description>
&lt;p>TODO&lt;/p></description></item><item><title>Docs: 容器集群</title><link>https://www.cloudpods.org//v3.6/zh/docs/howto/container/</link><pubDate>Fri, 19 Jul 2019 20:56:33 +0800</pubDate><guid>https://www.cloudpods.org//v3.6/zh/docs/howto/container/</guid><description>
&lt;p>容器集群是基于云平台虚拟机搭建部署 kubernetes 集群，目前支持在以下平台部署：&lt;/p>
&lt;ul>
&lt;li>Cloudpods私有云&lt;/li>
&lt;li>阿里云&lt;/li>
&lt;li>AWS&lt;/li>
&lt;/ul></description></item><item><title>Docs: 资源调度</title><link>https://www.cloudpods.org//v3.6/zh/docs/howto/scheduler/</link><pubDate>Thu, 11 Jul 2019 20:50:28 +0800</pubDate><guid>https://www.cloudpods.org//v3.6/zh/docs/howto/scheduler/</guid><description>
&lt;p>TODO&lt;/p></description></item></channel></rss>