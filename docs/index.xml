<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>云联壹云 – 欢迎来到 云联壹云</title>
    <link>https://opensource.yunion.cn/docs/</link>
    <description>Recent content in 欢迎来到 云联壹云 on 云联壹云</description>
    <generator>Hugo -- gohugo.io</generator>
    
	  <atom:link href="https://opensource.yunion.cn/docs/index.xml" rel="self" type="application/rss+xml" />
    
    
      
        
      
    
    
    <item>
      <title>Docs: 介绍</title>
      <link>https://opensource.yunion.cn/docs/howto/baremetal/intro/</link>
      <pubDate>Fri, 19 Jul 2019 20:28:13 +0800</pubDate>
      
      <guid>https://opensource.yunion.cn/docs/howto/baremetal/intro/</guid>
      <description>
        
        
        

&lt;h2 id=&#34;功能介绍&#34;&gt;功能介绍&lt;/h2&gt;

&lt;p&gt;云平台支持 Baremetal(物理机) 管理，提供的功能如下:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;自动化上架: 物理机上架加电启动后，自动注册到云管平台，自动分配BMC IP地址，初始化IPMI账号密码，自动上报物理机硬件配置（CPU、内存、序列号、网卡、磁盘等）&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;自动化装机: 根据配置要求自动配置 RAID，自动分区格式化磁盘，自动部署操作系统镜像，自动初始化操作系统账号密码，自动分配IP地址，可以植入配置文件&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;生命周期管理: 支持物理机自动化开机，关机，重装系统，远程带外管理，卸载操作系统等操作&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;与虚拟机共享镜像: 使用虚拟机镜像部署物理机，便于虚拟机和物理机统一操作系统运行环境&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;API 支持: 以上操作均支持API操作，便于与其他系统的自动化流程集成&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;服务器型号支持: 支持Dell、HP、华为、浪潮、联想、超微等主流x86服务器厂商和机型&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;RAID 控制器支持: LSI MegaRaid, HP Smart Array, LSI MPT2SAS, LSI MPT3SAS, Mrarvell RAID等&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;转换为宿主机: 直接将物理机转换为运行虚拟机的宿主机&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;托管已有服务器： 托管已有并装好系统的物理机&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&#34;服务架构&#34;&gt;服务架构&lt;/h2&gt;

&lt;p&gt;物理机管理服务架构如下:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;../images/baremetal-arch.png&#34; alt=&#34;物理机管理架构&#34; /&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Baremetal &amp;lt;-&amp;gt; DHCP Relay： 处理 PXE 网络启动&lt;/li&gt;
&lt;li&gt;DHCP Relay &amp;lt;-&amp;gt; Baremetal Agent:

&lt;ul&gt;
&lt;li&gt;转发 PXE Boot 请求，获取网络启动相关的信息&lt;/li&gt;
&lt;li&gt;通过 DHCP 和 TFTP 服务下发 PXE 配置

&lt;ul&gt;
&lt;li&gt;云平台定制的&lt;a href=&#34;https://github.com/yunionio/yunionos&#34; target=&#34;_blank&#34;&gt;网络启动小系统(yunionos)&lt;/a&gt; kernel 和 initramfs: 运行 SSH 服务，制作 RAID，收集硬件信息等&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Baremetal Agent &amp;lt;-&amp;gt; Region Server:

&lt;ul&gt;
&lt;li&gt;通过 Region Server 注册物理机记录&lt;/li&gt;
&lt;li&gt;获取网络 IP 地址&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Baremetal Agent &amp;lt;-&amp;gt; Baremetal:

&lt;ul&gt;
&lt;li&gt;Baremetal 通知 Agent SSH 相关的登录信息&lt;/li&gt;
&lt;li&gt;Agent 通过 SSH 配置 Baremetal 的 IPMI&lt;/li&gt;
&lt;li&gt;Agent 通过 IPMI 控制 Baremetal 开关机等操作&lt;/li&gt;
&lt;li&gt;Agent 通过 SSH 执行做 RAID，装机，销毁等操作&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Glance Server -&amp;gt; Baremetal: Baremetal 从 Glance server 下载装机镜像&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;在交换机上开启 DHCP Relay 功能(或者使用 DHCP Relay软件)，relay 指向 Baremetal Agent&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;物理机上架通电后，设置 PXE 网络启动，DHCP Relay 会将 PXE Boot 请求转发到 Baremetal Agent，Baremetal Agent 收到 PXE Boot 请求，向 Region Server 注册物理机记录&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;技术细节&#34;&gt;技术细节&lt;/h2&gt;

&lt;h3 id=&#34;注册物理机&#34;&gt;注册物理机&lt;/h3&gt;

&lt;p&gt;注册物理机有自动注册和手动注册两种方式，如果 Baremetal Agent 开启了自动注册功能，就会自动在云平台创建 baremetal 记录；如果为手动注册方式，就需要先调用物理机创建接口把对应的 PXE 网卡对应的 MAC 地址注册到平台。&lt;/p&gt;

&lt;p&gt;注册的流程如下:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;物理机 PXE 启动时会发送 DHCP PXE boot 的请求，通过 DHCP Relay 请求会到 Baremetal Agent;&lt;/li&gt;
&lt;li&gt;Baremetal Agent 从 DHCP 请求中取出网卡 MAC 地址，拿 MAC 地址向 Region Server 过滤物理机记录;&lt;/li&gt;
&lt;li&gt;Region Server 告诉 Baremetal Agent 改 MAC 地址没有物理机，Baremetal Agent 就会新建记录，并从 Region Server 获取分配对应网段的 IP 地址, 通过内置 DHCP 服务回包给物理机;&lt;/li&gt;
&lt;li&gt;物理机 PXE DHCP 请求获得分配的 IP 地址后，会通过 TFTP 从 Baremetal Agent 下载启动引导文件(kernel 和 initramfs)，然后使用 ramdisk 机制进入我们定制的 initramfs 小系统;&lt;/li&gt;
&lt;li&gt;initramfs 小系统启动后，会启动 sshd 服务，然后修改 root 用户密码，将这些登录信息通知回 Baremetal Agent;&lt;/li&gt;
&lt;li&gt;Baremetal Agent 收到通知后，记录 ssh 登录的信息，开始进行准备工作;&lt;/li&gt;
&lt;li&gt;准备工作包括配置 IPMI，收集硬件信息等，当这些操作完成后，将所有信息上报给 Region Server 完成注册&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&#34;yunionos-网络启动小系统&#34;&gt;yunionos 网络启动小系统&lt;/h3&gt;

&lt;p&gt;yunionos(&lt;a href=&#34;https://github.com/yunionio/yunionos&#34; target=&#34;_blank&#34;&gt;https://github.com/yunionio/yunionos&lt;/a&gt;) 是我们使用 &lt;a href=&#34;https://buildroot.org/&#34; target=&#34;_blank&#34;&gt;Buildroot&lt;/a&gt; 工具定制的用于 PXE 启动和管理物理机的小型 Linux 系统，作用如下:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;运行 sshd 服务，提供 Baremetal Agent 远程执行命令&lt;/li&gt;
&lt;li&gt;包含 LSI MegaRaid, HP Smart Array, LSI MPT2SAS, LSI MPT3SAS, Mrarvell RAID等驱动和工具，用于制作 RAID&lt;/li&gt;
&lt;li&gt;包含 ipmitool 和相关 driver，用于配置和调用 IPMI BMC 管理物理机&lt;/li&gt;
&lt;li&gt;包含 qemu-img, sgdisk, parted 等磁盘分区工具，用于创建操作系统&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&#34;ssh-管理&#34;&gt;SSH 管理&lt;/h3&gt;

&lt;p&gt;当物理机通过 PXE 进入 yunionos 小系统后会启动 sshd 服务，并将 ssh login 信息通知给 Baremetal Agent，Baremetal Agent 会更新 ssh 相关的登录信息&lt;/p&gt;

&lt;h3 id=&#34;raid-配置&#34;&gt;RAID 配置&lt;/h3&gt;

&lt;p&gt;RAID 配置由 Baremetal Agent 根据用户的配置，生成 raid 配置命令，通过 ssh 远程控制 yunionos 在物理机上制作 RAID&lt;/p&gt;

&lt;h3 id=&#34;安装操作系统&#34;&gt;安装操作系统&lt;/h3&gt;

&lt;p&gt;RAID 做完后，Baremetal Agent 会通过 ssh 远程控制 yunionos 安装操作系统和分区，流程如下:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;调用 &lt;a href=&#34;https://github.com/yunionio/yunionos/blob/master/src/lib/mos/rootcreate.sh&#34; target=&#34;_blank&#34;&gt;/lib/mos/rootcreate.sh&lt;/a&gt; 将系统创建到磁盘:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;通过 wget 从 Glance Server 下载用户指定的 image 镜像&lt;/li&gt;
&lt;li&gt;通过 qemu-img convert 命名将 image 写入到磁盘&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;创建好系统后，会根据用户的配置将系统盘 resize 分区&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;创建其它分区并格式化&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Baremetal Agent 进行一些网络，磁盘配置的设置：比如 bonding，ip 设置, /etc/fstab, 改变 hostname 等&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&#34;开关机&#34;&gt;开关机&lt;/h3&gt;

&lt;p&gt;注册好的的物理机会配置好 IPMI, IPMI 相关的信息会记录在数据库，Baremetal Agent 通过 ipmitool 控制开关机&lt;/p&gt;

&lt;h3 id=&#34;重装操作系统&#34;&gt;重装操作系统&lt;/h3&gt;

&lt;p&gt;类似于安装操作系统，流程上会让安装了操作系统的物理机重新进入 yunionos 小系统，然后重新安装操作系统&lt;/p&gt;

&lt;h3 id=&#34;远程访问&#34;&gt;远程访问&lt;/h3&gt;

&lt;p&gt;Baremetal Agent 通过 ipmitool sol 接口提供串口控制界面&lt;/p&gt;

&lt;h3 id=&#34;删除操作系统&#34;&gt;删除操作系统&lt;/h3&gt;

&lt;p&gt;对正在运行操作系统的物理机重启进入 PXE 网络启动，进入 yunionos 小系统，调用 &lt;a href=&#34;https://github.com/yunionio/yunionos/blob/master/src/lib/mos/partdestroy.sh&#34; target=&#34;_blank&#34;&gt;/lib/mos/partdestory.sh&lt;/a&gt; 销毁磁盘分区和相应的 raid 命令销毁 raid 配置&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: KVM 宿主机</title>
      <link>https://opensource.yunion.cn/docs/howto/host/kvm/</link>
      <pubDate>Fri, 19 Jul 2019 20:00:14 +0800</pubDate>
      
      <guid>https://opensource.yunion.cn/docs/howto/host/kvm/</guid>
      <description>
        
        
        

&lt;p&gt;云联壹云 原生提供基于 kvm 的私有云虚拟机管理功能，运行 kvm 虚拟机的机器叫做宿主机，这种宿主机也叫作 &amp;ldquo;计算节点&amp;rdquo;，上面会运行管理虚拟机、网络和存储的一系列服务，如何部署并上线宿主机请参考: &lt;a href=&#34;https://opensource.yunion.cn/setup/host/&#34;&gt;安装部署/计算节点&lt;/a&gt;。&lt;/p&gt;

&lt;h2 id=&#34;宿主机操作&#34;&gt;宿主机操作&lt;/h2&gt;

&lt;h3 id=&#34;查询&#34;&gt;查询&lt;/h3&gt;

&lt;p&gt;通过 &lt;code&gt;host-list&lt;/code&gt; 查询宿主机列表，&lt;code&gt;host-show&lt;/code&gt; 查询宿主机详情。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 查询 kvm 这种类型的宿主机&lt;/span&gt;
$ climc host-list --hypervisor kvm

&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 查询被禁用的 kvm 宿主机&lt;/span&gt;
$ climc host-list --hypervisor kvm --disabled

&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 查询启用的 kvm 宿主机&lt;/span&gt;
$ climc host-list --hypervisor kvm --enabled&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;启用&#34;&gt;启用&lt;/h3&gt;

&lt;p&gt;kvm 宿主机上线后，默认是禁用的状态，需要启用才能创建虚拟机。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 找到禁用的宿主机&lt;/span&gt;
$ climc host-list --disabled

&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 启用&lt;/span&gt;
$ climc host-enable &amp;lt;host_id&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;禁用&#34;&gt;禁用&lt;/h3&gt;

&lt;p&gt;如果完全不想让宿主机创建虚拟机，可以禁用它。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;$ climc host-disable &amp;lt;host_id&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
      </description>
    </item>
    
    <item>
      <title>Docs: 上传镜像</title>
      <link>https://opensource.yunion.cn/docs/howto/image/upload/</link>
      <pubDate>Fri, 19 Jul 2019 11:34:14 +0800</pubDate>
      
      <guid>https://opensource.yunion.cn/docs/howto/image/upload/</guid>
      <description>
        
        
        

&lt;h2 id=&#34;获取镜像&#34;&gt;获取镜像&lt;/h2&gt;

&lt;p&gt;上传镜像之前需要先获取镜像，途径有多种，比如从发行版官网下载用于云平台的镜像，或者自己制作。&lt;/p&gt;

&lt;h3 id=&#34;发行版镜像&#34;&gt;发行版镜像&lt;/h3&gt;

&lt;p&gt;根据自己对发行版的需要下载发行版镜像，常用的 Linux 发行版会提供云平台虚拟机使用的镜像，地址如下:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://cloud.centos.org/centos/7/images/&#34; target=&#34;_blank&#34;&gt;centos&lt;/a&gt;: &lt;a href=&#34;http://cloud.centos.org/centos/7/images/&#34; target=&#34;_blank&#34;&gt;http://cloud.centos.org/centos/7/images/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://cloud-images.ubuntu.com/&#34; target=&#34;_blank&#34;&gt;ubuntu&lt;/a&gt;: &lt;a href=&#34;https://cloud-images.ubuntu.com/&#34; target=&#34;_blank&#34;&gt;https://cloud-images.ubuntu.com/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;制作镜像&#34;&gt;制作镜像&lt;/h3&gt;

&lt;p&gt;参考: &lt;a href=&#34;../create/&#34;&gt;制作镜像&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;上传&#34;&gt;上传&lt;/h2&gt;

&lt;p&gt;下载或者制作完镜像后，使用 &lt;code&gt;climc image-upload&lt;/code&gt; 上传到云平台的 glance 服务，下面以下载 CentOS 提供的 CentOS-7-x86_64-GenericCloud-1711 举例:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 下载 CentOS-7-x86_64-GenericCloud-1711.qcow2&lt;/span&gt; 
$ wget wget http://cloud.centos.org/centos/7/images/CentOS-7-x86_64-GenericCloud-1711.qcow2

&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 上传镜像到云平台并名为 CentOS-7-x86_64-GenericCloud-1711.qcow2&lt;/span&gt;
$ climc image-upload --format qcow2 --os-type Linux --os-arch x86_64 --standard CentOS-7-x86_64-GenericCloud-1711.qcow2 ./CentOS-7-x86_64-GenericCloud-1711.qcow2&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;上传时间长短取决于网络环境和镜像大小，上传完成后需要查询镜像的状态，当状态变为 &amp;lsquo;active&amp;rsquo; 时，就可以拿来使用了。( 更多的关于镜像的查询参考: &lt;a href=&#34;../query/&#34;&gt;镜像查询&lt;/a&gt; )&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;$ climc image-show CentOS-7-x86_64-GenericCloud-1711.qcow2 &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; grep status
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; status          &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; active &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&#34;上传参数&#34;&gt;上传参数&lt;/h2&gt;

&lt;p&gt;使用 &lt;code&gt;climc help image-upload&lt;/code&gt; 获取各个参数解释。&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: All in One 安装</title>
      <link>https://opensource.yunion.cn/docs/quickstart/allinone/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://opensource.yunion.cn/docs/quickstart/allinone/</guid>
      <description>
        
        
        

&lt;h2 id=&#34;前提&#34;&gt;前提&lt;/h2&gt;



&lt;div class=&#34;alert alert-warning&#34; role=&#34;alert&#34;&gt;
&lt;h4 class=&#34;alert-heading&#34;&gt;注意&lt;/h4&gt;
本章内容是通过部署工具快速搭建 云联壹云 服务，如果想了解部署的细节或者部署高可用环境请参考: &lt;a href=&#34;https://opensource.yunion.cn/docs/setup/&#34;&gt;安装部署&lt;/a&gt; 。
&lt;/div&gt;


&lt;h2 id=&#34;环境准备&#34;&gt;环境准备&lt;/h2&gt;

&lt;p&gt;云联壹云 相关的组件运行在 kubernetes 之上。&lt;/p&gt;

&lt;h3 id=&#34;服务器配置要求&#34;&gt;服务器配置要求&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;操作系统: Centos 7.6&lt;/li&gt;
&lt;li&gt;最低配置要求: CPU 4核, 内存 8G, 存储 100G&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;以下为待部署机器的环境:&lt;/p&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;center&#34;&gt;IP&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;登录用户&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;操作系统&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;10.168.26.216&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;root&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;Centos 7.6&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;



&lt;div class=&#34;alert alert-primary&#34; role=&#34;alert&#34;&gt;
&lt;h4 class=&#34;alert-heading&#34;&gt;提示&lt;/h4&gt;
&lt;blockquote&gt;
&lt;p&gt;10.168.26.216 是本次测试环境 ip，请根据自己的环境做相应修改。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/div&gt;


&lt;h3 id=&#34;云联壹云相关软件依赖&#34;&gt;云联壹云相关软件依赖&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;数据库: mariadb Ver 15.1 Distrib 5.5.56-MariaDB&lt;/li&gt;
&lt;li&gt;docker: ce-19.03.9&lt;/li&gt;
&lt;li&gt;kubernetes: v1.15.8&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;本地环境配置要求&#34;&gt;本地环境配置要求&lt;/h3&gt;

&lt;p&gt;本地环境即用户进行实际操作部署的环境。本次测试的本地环境为MAC操作系统的笔记本，也可在待部署机器上进行操作。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;ssh: 开启 ssh 免密登录&lt;/li&gt;
&lt;li&gt;本地环境安装部署 ansbile，Windows操作系统不支持安装 ansible&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;配置-ssh-免密登录&#34;&gt;配置 ssh 免密登录&lt;/h4&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 生成本机的 ssh 秘钥 (如果本地已有 ~/.ssh/id_rsa.pub 则跳过此步骤)&lt;/span&gt;
$ ssh-keygen

&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 将生成的 ~/.ssh/id_rsa.pub 公钥拷贝到待部署机器&lt;/span&gt;
$ ssh-copy-id -i ~/.ssh/id_rsa.pub root@10.168.26.216

&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 尝试免密登录待部署机器，应该不需要输入登录密码即可拿到部署机器的 hostname&lt;/span&gt;
$ ssh root@10.168.26.216 &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;hostname&amp;#34;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&#34;开始部署&#34;&gt;开始部署&lt;/h2&gt;

&lt;p&gt;部署的工具是 &lt;a href=&#34;https://github.com/yunionio/ocboot&#34; target=&#34;_blank&#34;&gt;https://github.com/yunionio/ocboot&lt;/a&gt; , 然后根据需要部署机器的配置， 利用 ansbile 远程登录到待部署的机器安装配置 云联壹云 服务，以下操作都在本地环境上进行操作。操作步骤如下:&lt;/p&gt;

&lt;h3 id=&#34;下载-ocboot&#34;&gt;下载 ocboot&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 本地安装 ansible&lt;/span&gt;
$ pip install ansible

&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 下载 ocboot 工具到本地&lt;/span&gt;
$ git clone -b release/3.3 https://github.com/yunionio/ocboot &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span style=&#34;color:#204a87&#34;&gt;cd&lt;/span&gt; ./ocboot&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;编写部署配置&#34;&gt;编写部署配置&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 编写 config-allinone.yml 文件&lt;/span&gt;
$ cat &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;lt;&amp;lt;EOF &amp;gt;./config-allinone.yml
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;# mariadb_node 表示需要部署 mariadb 服务的节点
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;mariadb_node:
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;  # 待部署节点 ip
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;  hostname: 10.168.26.216
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;  # 待部署节点登录用户
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;  user: root
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;  # mariadb 的用户
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;  db_user: root
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;  # mariadb 用户密码
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;  db_password: your-sql-password
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;# primary_master_node 表示运行 k8s 和 云联壹云 服务的节点
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;primary_master_node:
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;  hostname: 10.168.26.216
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;  user: root
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;  # 数据库连接地址
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;  db_host: 10.168.26.216
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;  # 数据库用户
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;  db_user: root
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;  # 数据库密码
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;  db_password: your-sql-password
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;  # k8s 控制节点的 ip
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;  controlplane_host: 10.168.26.216
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;  # k8s 控制节点的端口
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;  controlplane_port: &amp;#34;6443&amp;#34;
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;  # 云联壹云 登录用户
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;  onecloud_user: admin
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;  # 云联壹云 登录用户密码
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;  onecloud_user_password: admin@123
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;  # 该节点作为 云联壹云 私有云计算节点
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;  as_host: true
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;EOF&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;开始部署-1&#34;&gt;开始部署&lt;/h3&gt;

&lt;p&gt;当填写完 config-allinone.yml 部署配置文件后，便可以执行 ocboot 里面的 &lt;code&gt;./run.py ./config-allinone.yml&lt;/code&gt; 部署集群了。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 开始部署&lt;/span&gt;
$ ./run.py ./config-allinone.yml
....
&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 部署完成后会有如下输出，表示运行成功&lt;/span&gt;
&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 浏览器打开 https://10.168.26.216&lt;/span&gt;
&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 使用 admin/admin@123 用户密码登录就能访问前端界面&lt;/span&gt;
Initialized successfully!
Web page: https://10.168.26.216
User: admin
Password: admin@123&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;然后用浏览器访问 &lt;a href=&#34;https://10.168.26.216&#34; target=&#34;_blank&#34;&gt;https://10.168.26.216&lt;/a&gt; ，用户名输入 &lt;code&gt;admin&lt;/code&gt;，密码输入 &lt;code&gt;admin@123&lt;/code&gt; 就会进入 云联壹云 的界面。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;../images/index.png&#34; alt=&#34;登录页&#34; /&gt;&lt;/p&gt;

&lt;h2 id=&#34;faq&#34;&gt;FAQ&lt;/h2&gt;

&lt;h3 id=&#34;1-在-all-in-one-中找不到虚拟机界面&#34;&gt;1. 在 All in One 中找不到虚拟机界面？&lt;/h3&gt;

&lt;p&gt;All in One 部署的节点会部署 云联壹云 host 计算服务，作为宿主机，具有创建和管理私有云虚拟机的能力。没有虚拟机界面应该是 云联壹云 环境中没有启用宿主机。&lt;/p&gt;

&lt;p&gt;请到 &lt;code&gt;管理后台&lt;/code&gt; 界面，点击 &lt;code&gt;主机/基础资源/宿主机&lt;/code&gt; 查看宿主机列表，启用相应的宿主机，刷新界面就会出现虚拟机界面。&lt;/p&gt;



&lt;div class=&#34;alert alert-warning&#34; role=&#34;alert&#34;&gt;
&lt;h4 class=&#34;alert-heading&#34;&gt;注意&lt;/h4&gt;
&lt;p&gt;&lt;p&gt;如果要使用 云联壹云 私有云虚拟机，需要宿主机使用 云联壹云 编译的内核，可使用以下命令查看宿主机是否使用 云联壹云 内核(包含 yn 关键字)。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 查看是否使用 yn 内核&lt;/span&gt;
$ uname -a &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; grep yn
Linux office-controller &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;3&lt;/span&gt;.10.0-1062.4.3.el7.yn20191203.x86_64
&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 如果内核不是带有 yn 关键字的版本，可能是第一次使用 ocboot 安装，重启即可进入 yn 内核&lt;/span&gt;
$ reboot&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/p&gt;

&lt;/div&gt;


&lt;p&gt;&lt;img src=&#34;../images/host.png&#34; alt=&#34;宿主机&#34; /&gt;&lt;/p&gt;

&lt;h3 id=&#34;2-如何导入公有云或者其它私有云平台资源&#34;&gt;2. 如何导入公有云或者其它私有云平台资源？&lt;/h3&gt;

&lt;p&gt;在 &lt;code&gt;多云管理&lt;/code&gt; 菜单，选择 &lt;code&gt;云账号&lt;/code&gt; 并新建，根据自己的需求填写对应云平台的认证信息，配置完云账号后 云联壹云 服务就会同步相应云平台的资源，同步完成后即可在前端查看。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;../images/cloudaccount.png&#34; alt=&#34;多云管理&#34; /&gt;&lt;/p&gt;

&lt;h3 id=&#34;3-其它问题&#34;&gt;3. 其它问题？&lt;/h3&gt;

&lt;p&gt;其它问题欢迎在 云联壹云 github issues 界面提交: &lt;a href=&#34;https://github.com/yunionio/onecloud/issues&#34; target=&#34;_blank&#34;&gt;https://github.com/yunionio/onecloud/issues&lt;/a&gt; , 我们会尽快回复。&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: MiniKube 安装</title>
      <link>https://opensource.yunion.cn/docs/quickstart/minikube/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://opensource.yunion.cn/docs/quickstart/minikube/</guid>
      <description>
        
        
        

&lt;h2 id=&#34;前提&#34;&gt;前提&lt;/h2&gt;



&lt;div class=&#34;alert alert-warning&#34; role=&#34;alert&#34;&gt;
&lt;h4 class=&#34;alert-heading&#34;&gt;注意&lt;/h4&gt;
本章内容是方便快速体验云联壹云, 通过MiniKube快速搭建云联壹云服务，如果想了解部署的细节或者部署高可用环境请参考: &lt;a href=&#34;https://opensource.yunion.cn/docs/setup/&#34;&gt;安装部署&lt;/a&gt; 。
&lt;/div&gt;


&lt;h2 id=&#34;环境准备&#34;&gt;环境准备&lt;/h2&gt;

&lt;p&gt;云联壹云 相关的组件运行在MiniKube之上，环境以及相关的软件依赖如下:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;操作系统: Centos 7.6&lt;/li&gt;
&lt;li&gt;最低配置要求: CPU 4核, 内存 8G, 存储 100G&lt;/li&gt;
&lt;li&gt;数据库: mariadb Ver 15.1 Distrib 5.5.56-MariaDB&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;安装MySQL开启远程访问&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# 此密码为上面设置的 MySQL root 密码，为了方便，只读账号也使用此密码
$ MYSQL_PASSWD=&#39;your-sql-passwd&#39;
$ mysql -uroot -p$MYSQL_PASSWD -e &amp;quot;GRANT ALL PRIVILEGES ON *.* TO &#39;root&#39;@&#39;%&#39; IDENTIFIED BY &#39;$MYSQL_PASSWD&#39; WITH GRANT OPTION;FLUSH PRIVILEGES&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;开始部署&#34;&gt;开始部署&lt;/h2&gt;

&lt;h3 id=&#34;启动minikube&#34;&gt;启动minikube&lt;/h3&gt;

&lt;p&gt;下载minikue/kubectl, 并启动minikube集群, 具体请参考： &lt;a href=&#34;https://kubernetes.io/docs/tasks/tools/install-minikube/&#34; target=&#34;_blank&#34;&gt;https://kubernetes.io/docs/tasks/tools/install-minikube/&lt;/a&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;minikube config -p onecloud &lt;span style=&#34;color:#204a87&#34;&gt;set&lt;/span&gt; memory &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;8192&lt;/span&gt; 
minikube start  --nodes &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;2&lt;/span&gt; -p onecloud
minikube dashboard -p onecloud&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;部署local-path-storage&#34;&gt;部署local-path-storage&lt;/h3&gt;

&lt;p&gt;参考：&lt;a href=&#34;https://github.com/rancher/local-path-provisioner&#34; target=&#34;_blank&#34;&gt;https://github.com/rancher/local-path-provisioner&lt;/a&gt;, 在minikube部署local-path-storage&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;wget https://raw.githubusercontent.com/rancher/local-path-provisioner/master/deploy/local-path-storage.yaml -O local-path-storage.yaml 
kubectl apply -f local-path-storage.yaml &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;部署云联壹云-k8s-operator&#34;&gt;部署云联壹云 k8s operator&lt;/h3&gt;

&lt;p&gt;云联壹云 k8s operator地址： &lt;a href=&#34;https://github.com/yunionio/onecloud-operator&#34; target=&#34;_blank&#34;&gt;https://github.com/yunionio/onecloud-operator&lt;/a&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;wget https://raw.githubusercontent.com/yunionio/onecloud-operator/master/manifests/onecloud-operator.yaml -O onecloud-operator.yaml
kubectl apply -f onecloud-operator.yaml&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;部署云联壹云-集群&#34;&gt;部署云联壹云 集群&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;wget https://raw.githubusercontent.com/yunionio/onecloud-operator/master/manifests/example-onecloud-cluster.yaml -O onecloud-cluster.yaml
vim onecloud-cluster.yaml&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;修改onecloud-cluster.yaml mysql相关配额&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;host: $MYSQL_HOST
port: $MYSQL_PORT
username: &amp;quot;$MYSQL_USERNAME&amp;quot;
password: &amp;quot;$MYSQL_PASSWD&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;其他集群配置请参考： &lt;a href=&#34;https://github.com/yunionio/onecloud-operator/blob/4c871ae1d3d6774a827834464c480287b7b8b433/pkg/apis/onecloud/v1alpha1/types.go#L97&#34; target=&#34;_blank&#34;&gt;OnecloudClusterSpec&lt;/a&gt;::&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;启动云联壹云集群&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;kubectl apply -f onecloud-cluster.yaml
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;打开K8s Dashboard确认相关服务正常启动完成&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;创建账号登录webui&#34;&gt;创建账号登录WebUI&lt;/h3&gt;

&lt;p&gt;创建账号&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;kubectl &lt;span style=&#34;color:#204a87&#34;&gt;exec&lt;/span&gt; -n onecloud &lt;span style=&#34;color:#4e9a06&#34;&gt;`&lt;/span&gt;kubectl -n onecloud get pods  &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; grep &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;example-onecloud-cluster-climc&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; cut -f1 -d&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34; &amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;`&lt;/span&gt; -c climc  -i -t -- /bin/bash -il
$ climc user-create demo --password demo123A --system-account --enabled&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;登陆webUI&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;kubectl -n onecloud port-forward &lt;span style=&#34;color:#4e9a06&#34;&gt;`&lt;/span&gt;kubectl -n onecloud get pods  &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; grep &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;example-onecloud-cluster-web&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; cut -f1 -d&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34; &amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;`&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;9999&lt;/span&gt;:443 --address&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;0&lt;/span&gt;.0.0.0&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;打开浏览器：&lt;a href=&#34;https://localhost:9999&#34; target=&#34;_blank&#34;&gt;https://localhost:9999&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&#34;待解决的问题&#34;&gt;待解决的问题&lt;/h3&gt;

&lt;p&gt;4类Pod启动失败，问题还在分析中，但不影响体验云联壹云&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;example-onecloud-cluster-notify&lt;/li&gt;
&lt;li&gt;example-onecloud-cluster-host-deployer&lt;/li&gt;
&lt;li&gt;example-onecloud-cluster-monitor&lt;/li&gt;
&lt;li&gt;example-onecloud-cluster-autoupdate&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;集群清理&#34;&gt;集群清理&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;kubectl delete -f onecloud-cluster.yaml
kubectl delete -f onecloud-operator.yaml
kubectl delete -f local-path-storage.yaml
minikube -p onecloud stop&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
      </description>
    </item>
    
    <item>
      <title>Docs: 组件概览</title>
      <link>https://opensource.yunion.cn/docs/setup/intro/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://opensource.yunion.cn/docs/setup/intro/</guid>
      <description>
        
        
        &lt;p&gt;云联壹云 目前仅支持在 Centos 7 上运行，待部署组件/服务如下:&lt;/p&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;center&#34;&gt;服务组件&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;用途&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;安装方式&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;运行方式&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;mariadb&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;关系型数据库&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;rpm&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;systemd&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;docker&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;容器运行时&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;rpm&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;systemd&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;kubelet&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;管理 kubernetes pod&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;rpm&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;systemd&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;keystone&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;认证服务&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;k8s deployment&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;container&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;region&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;api 控制器&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;k8s deployment&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;container&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;scheduler&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;调度服务&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;k8s deployment&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;container&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;glance&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;镜像存储&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;k8s deployment&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;container&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;webconsole&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;虚拟机访问界面&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;k8s deployment&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;container&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;influxdb&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;监控数据库&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;k8s deployment&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;container&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;host&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;管理虚拟机&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;k8s daemonset&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;container&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;sdnagent&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;管理虚拟机网络&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;rpm&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;systemd&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;baremetal-agent&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;管理物理机&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;k8s deployment&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;container&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;climc&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;命令行工具&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;rpm&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;shell&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;ocadm&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;部署服务管理工具&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;rpm&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;shell&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;其中 host 和 baremetal-agent 可以根据需求选择性部署:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;管理 kvm 虚拟机: 部署 host 服务&lt;/li&gt;
&lt;li&gt;管理物理机: 部署 baremetal-agent 服务&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: 部署 HA 环境</title>
      <link>https://opensource.yunion.cn/docs/setup/controlplane-ha/</link>
      <pubDate>Sat, 13 Apr 2019 13:01:57 +0800</pubDate>
      
      <guid>https://opensource.yunion.cn/docs/setup/controlplane-ha/</guid>
      <description>
        
        
        

&lt;p&gt;在部署生产可用的 kubernetes 集群之前，需要先部署 LoadBalancer 环境，这里使用 &lt;strong&gt;keepalived + haproxy&lt;/strong&gt; 的方式实现负载均衡和高可用。&lt;/p&gt;

&lt;h2 id=&#34;环境说明&#34;&gt;环境说明&lt;/h2&gt;

&lt;p&gt;单独拿两个节点部署 keepalived 和 haproxy 作为后端 kubernetes 控制平面的负载均衡器，拓扑结构如下:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;../images/k8s.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;两个节点上面分别部署 keepalived 和 haproxy 组成负载均衡集群，haproxy 的 backend 为后端的 kubernetes control plane node，vip(虚ip) 在这两个节点之间漂移形成高可用。&lt;/p&gt;

&lt;p&gt;另外 云联壹云 服务使用 Mariadb，如果没有专门的数据库集群，可以单独拿两个节点部署 Mariadb 高可用。参考 &lt;a href=&#34;https://opensource.yunion.cn/docs/setup/db-ha&#34;&gt;部署 DB HA 环境&lt;/a&gt; 。&lt;/p&gt;

&lt;h2 id=&#34;部署&#34;&gt;部署&lt;/h2&gt;

&lt;p&gt;keepalived 的主要作用是为 haproxy 提供 vip，在2个 haproxy 实例之间提供主备，降低当其中一个haproxy失效的时对服务的影响。&lt;/p&gt;

&lt;h3 id=&#34;部署配置-keepalived&#34;&gt;部署配置 keepalived&lt;/h3&gt;

&lt;p&gt;设置相关的环境变量，根据不同的环境自行配置。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# keepalived vip 地址&lt;/span&gt;
&lt;span style=&#34;color:#204a87&#34;&gt;export&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;K8SHA_VIP&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;10&lt;/span&gt;.168.222.18

&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# keepalived auth toke&lt;/span&gt;
&lt;span style=&#34;color:#204a87&#34;&gt;export&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;K8SHA_KA_AUTH&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;412f7dc3bfed32194d1600c483e10ad1d

&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# keepalived network interface&lt;/span&gt;
&lt;span style=&#34;color:#204a87&#34;&gt;export&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;K8SHA_NETIF&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;eth0&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;设置 sysctl 选项&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;$ cat &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;lt;&amp;lt;EOF &amp;gt;&amp;gt;/etc/sysctl.conf
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;net.ipv4.ip_forward = 1
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;net.ipv4.ip_nonlocal_bind = 1
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;EOF&lt;/span&gt;

$ sysctl -p&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;安装 keepalived&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;$ yum install -y keepalived&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;添加配置&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;$ cat &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;lt;&amp;lt;EOF &amp;gt;/etc/keepalived/keepalived.conf
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;! Configuration File for keepalived
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;global_defs {
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;    router_id LVS_DEVEL
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;}
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;vrrp_script check_haproxy {
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;    script &amp;#34;pidof haproxy&amp;#34;
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;    interval 3
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;    weight -2
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;    fall 10
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;    rise 2
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;}
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;vrrp_instance VI_1 {
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;    state MASTER
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;    interface $K8SHA_NETIF
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;    virtual_router_id 51
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;    priority 250
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;    advert_int 1
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;    authentication {
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;        auth_type PASS
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;        auth_pass $K8SHA_KA_AUTH
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;    }
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;    virtual_ipaddress {
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;        $K8SHA_VIP
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;    }
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;    track_script {
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;        check_haproxy
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;    }
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;}
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;EOF&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;启动 keepalived&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;$ systemctl &lt;span style=&#34;color:#204a87&#34;&gt;enable&lt;/span&gt; --now keepalived
$ ip addr show &lt;span style=&#34;color:#000&#34;&gt;$K8SHA_NETIF&lt;/span&gt;
&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;2&lt;/span&gt;: eth0: &amp;lt;BROADCAST,MULTICAST,UP,LOWER_UP&amp;gt; mtu &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1500&lt;/span&gt; qdisc mq state UP qlen &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1000&lt;/span&gt;
    link/ether &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;00&lt;/span&gt;:22:ff:95:87:f7 brd ff:ff:ff:ff:ff:ff
    inet &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;10&lt;/span&gt;.168.222.189/24 brd &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;10&lt;/span&gt;.168.222.255 scope global eth0
       valid_lft forever preferred_lft forever
    inet &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;10&lt;/span&gt;.168.222.18/32 scope global eth0
       valid_lft forever preferred_lft forever
    inet6 fe80::222:ffff:fe95:87f7/64 scope link
       valid_lft forever preferred_lft forever&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;部署配置-haproxy&#34;&gt;部署配置 haproxy&lt;/h3&gt;

&lt;p&gt;此处的 haproxy 为 apiserver 提供反向代理，haproxy 将所有请求轮询转发到每个master节点上。&lt;/p&gt;

&lt;p&gt;系统配置&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color:#204a87&#34;&gt;export&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;K8S_MASTER0&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;10&lt;/span&gt;.168.222.218
&lt;span style=&#34;color:#204a87&#34;&gt;export&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;K8S_MASTER1&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;10&lt;/span&gt;.168.222.197
&lt;span style=&#34;color:#204a87&#34;&gt;export&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;K8S_MASTER2&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;10&lt;/span&gt;.168.222.207&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;安装 haproxy&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;$ yum install -y haproxy&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;配置 haproxy&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;$ cat &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;lt;&amp;lt;EOF &amp;gt;/etc/haproxy/haproxy.cfg
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;#---------------------------------------------------------------------
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;# Global settings
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;#---------------------------------------------------------------------
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;global
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;    # to have these messages end up in /var/log/haproxy.log you will
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;    # need to:
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;    #
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;    # 1) configure syslog to accept network log events.  This is done
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;    #    by adding the &amp;#39;-r&amp;#39; option to the SYSLOGD_OPTIONS in
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;    #    /etc/sysconfig/syslog
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;    #
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;    # 2) configure local2 events to go to the /var/log/haproxy.log
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;    #   file. A line like the following can be added to
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;    #   /etc/sysconfig/syslog
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;    #
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;    #    local2.*                       /var/log/haproxy.log
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;    #
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;    log         127.0.0.1 local2
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;    chroot      /var/lib/haproxy
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;    pidfile     /var/run/haproxy.pid
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;    maxconn     4000
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;    user        haproxy
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;    group       haproxy
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;    daemon
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;    # turn on stats unix socket
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;    stats socket /var/lib/haproxy/stats
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;#---------------------------------------------------------------------
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;# common defaults that all the &amp;#39;listen&amp;#39; and &amp;#39;backend&amp;#39; sections will
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;# use if not designated in their block
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;#---------------------------------------------------------------------
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;defaults
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;    mode                    http
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;    log                     global
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;    option                  httplog
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;    option                  dontlognull
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;    option http-server-close
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;    option forwardfor       except 127.0.0.0/8
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;    option                  redispatch
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;    retries                 3
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;    timeout http-request    10s
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;    timeout queue           1m
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;    timeout connect         10s
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;    timeout client          1m
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;    timeout server          1m
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;    timeout http-keep-alive 10s
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;    timeout check           10s
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;    maxconn                 3000
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;#---------------------------------------------------------------------
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;# kubernetes apiserver frontend which proxys to the backends
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;#---------------------------------------------------------------------
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;frontend kubernetes-apiserver
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;    mode                 tcp
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;    bind                 *:6443
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;    option               tcplog
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;    default_backend      kubernetes-apiserver
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;#---------------------------------------------------------------------
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;# round robin balancing between the various backends
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;#---------------------------------------------------------------------
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;backend kubernetes-apiserver
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;    mode        tcp
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;    balance     roundrobin
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;    server  master-0 $K8S_MASTER0:6443 check
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;    server  master-1 $K8S_MASTER1:6443 check
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;    server  master-2 $K8S_MASTER2:6443 check
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;#---------------------------------------------------------------------
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;# collection haproxy statistics message
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;#---------------------------------------------------------------------
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;listen stats
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;    bind                 *:1080
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;    stats auth           admin:awesomePassword
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;    stats refresh        5s
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;    stats realm          HAProxy\ Statistics
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;    stats uri            /admin?stats
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;EOF&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;启动并检测服务&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;$ systemctl &lt;span style=&#34;color:#204a87&#34;&gt;enable&lt;/span&gt; haproxy.service --now
$ systemctl status haproxy.service
$ netstat -tulnp &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; egrep &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;6443|1080&amp;#39;&lt;/span&gt;
tcp        &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;0&lt;/span&gt;      &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;0&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;0&lt;/span&gt;.0.0.0:6443            &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;0&lt;/span&gt;.0.0.0:*               LISTEN      &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;10033&lt;/span&gt;/haproxy
tcp        &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;0&lt;/span&gt;      &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;0&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;0&lt;/span&gt;.0.0.0:1080            &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;0&lt;/span&gt;.0.0.0:*               LISTEN      &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;10033&lt;/span&gt;/haproxy&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h1 id=&#34;部署-kubernetes-集群&#34;&gt;部署 kubernetes 集群&lt;/h1&gt;

&lt;p&gt;参考 &lt;a href=&#34;https://opensource.yunion.cn/docs/setup/controlplane&#34;&gt;部署集群&lt;/a&gt; 。&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: 开发贡献</title>
      <link>https://opensource.yunion.cn/docs/contribute/contrib/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://opensource.yunion.cn/docs/contribute/contrib/</guid>
      <description>
        
        
        

&lt;h2 id=&#34;安装-go&#34;&gt;安装 Go&lt;/h2&gt;

&lt;p&gt;Golang 版本要求 1.12 以上&lt;/p&gt;

&lt;p&gt;安装go环境参考: &lt;a href=&#34;https://golang.org/doc/install&#34; target=&#34;_blank&#34;&gt;Install doc&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;安装-ceph-依赖&#34;&gt;安装 ceph 依赖&lt;/h2&gt;

&lt;p&gt;On rpm based systems (dnf, yum, etc):&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;sudo rpm --import https://download.ceph.com/keys/release.asc
sudo yum install -y https://download.ceph.com/rpm-luminous/el7/noarch/ceph-release-1-1.el7.noarch.rpm
sudo yum install -y https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm
sudo yum install -y libcephfs-devel librbd-devel librados-devel&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;On debian systems (apt):&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;wget -q -O- &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;https://download.ceph.com/keys/release.asc&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; sudo apt-key add -
&lt;span style=&#34;color:#204a87&#34;&gt;echo&lt;/span&gt; deb https://download.ceph.com/debian-luminous/ &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;$(&lt;/span&gt;lsb_release -sc&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;)&lt;/span&gt; main &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; sudo tee /etc/apt/sources.list.d/ceph.list
apt-get update &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; apt-get install -y libcephfs-dev librbd-dev librados-dev&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&#34;编译-云联壹云-组件&#34;&gt;编译 云联壹云 组件&lt;/h2&gt;

&lt;h3 id=&#34;fork-仓库&#34;&gt;Fork 仓库&lt;/h3&gt;

&lt;p&gt;访问 &lt;a href=&#34;https://github.com/yunionio/onecloud&#34; target=&#34;_blank&#34;&gt;https://github.com/yunionio/onecloud&lt;/a&gt; ，将仓库 fork 到自己的 github 用户下。&lt;/p&gt;

&lt;h3 id=&#34;clone-源码&#34;&gt;Clone 源码&lt;/h3&gt;

&lt;p&gt;git clone 前确保 GOPATH 等环境变量已经设置好，clone 你自己 fork 的仓库&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;$ git clone  https://github.com/&amp;lt;your_name&amp;gt;/onecloud &lt;span style=&#34;color:#000&#34;&gt;$GOPATH&lt;/span&gt;/src/yunion.io/x/onecloud
$ &lt;span style=&#34;color:#204a87&#34;&gt;cd&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;$GOPATH&lt;/span&gt;/src/yunion.io/x/onecloud
$ git remote add upstream https://github.com/yunionio/onecloud&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;编译&#34;&gt;编译&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 编译所有组件&lt;/span&gt;
$ make

&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# cmd 目录下面存放着所有的组件:&lt;/span&gt;
$ ls cmd
...
ansibleserver    climc      glance      keystone  qcloudcli     ucloudcli
awscli           cloudir    host        lbagent   region        webconsole

&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 可以编译cmd下制定的组件，比如：编译 region 和 host 组件&lt;/span&gt;
$ make cmd/region cmd/host

&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 查看编译好的二进制文件&lt;/span&gt;
$ ls _output/bin
region host&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&#34;本地开发调试&#34;&gt;本地开发调试&lt;/h2&gt;

&lt;p&gt;3.0 版本后我们的服务都已经容器化运行在 k8s 集群中，快速开发调试并不方便。
通过Telepresence 提供远程k8s上下文，可以在本地开发调试。&lt;/p&gt;

&lt;h3 id=&#34;安装&#34;&gt;安装&lt;/h3&gt;

&lt;p&gt;确保有一个已部署的云联壹云 k8s集群，参考&lt;a href=&#34;https://opensource.yunion.cn/docs/setup/&#34;&gt;安装部署&lt;/a&gt;。
这里介绍Centos7的本地环境安装，其他发行版可参考官方文档：&lt;a href=&#34;https://www.telepresence.io/reference/install&#34; target=&#34;_blank&#34;&gt;Installing Telepresence&lt;/a&gt;。&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;不建议k8s集群的部署和开发在同一个环境，使用Telepresence会有端口冲突。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 安装依赖&lt;/span&gt;
$ yum install -y python3 sshfs conntrack iptables torsocks sshuttle sudo yum-utils
&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 安装 kubectl 用于连接 k8s 集群&lt;/span&gt;
$ cat &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;lt;&amp;lt;EOF &amp;gt;/etc/yum.repos.d/kubernetes.repo
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;[kubernetes]
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;name=Kubernetes
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;baseurl=http://mirrors.aliyun.com/kubernetes/yum/repos/kubernetes-el7-x86_64
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;enabled=1
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;gpgcheck=0
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;repo_gpgcheck=0
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;gpgkey=http://mirrors.aliyun.com/kubernetes/yum/doc/yum-key.gpg http://mirrors.aliyun.com/kubernetes/yum/doc/rpm-package-key.gpg
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;EOF&lt;/span&gt;
$ yum install -y kubectl-1.15.8-0
&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 需要自行配置kubctl config&lt;/span&gt;
&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 测试kubctl可以访问之前部署的k8s集群&lt;/span&gt;
$ kubctl version
&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 源码安装 telepresence 到 /usr/local/bin/telepresence&lt;/span&gt;
$ git clone https://github.com/telepresenceio/telepresence
$ &lt;span style=&#34;color:#204a87&#34;&gt;cd&lt;/span&gt; telepresence
$ sudo env &lt;span style=&#34;color:#000&#34;&gt;PREFIX&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;/usr/local ./install.sh&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;使用&#34;&gt;使用&lt;/h3&gt;

&lt;p&gt;利用 telepresence 本地连通远端 k8s 的特性，我们就可以做到在本地编译运行 region，keystone 等服务，同时又能访问远端 k8s 其它服务的环境。&lt;/p&gt;

&lt;p&gt;比如以下是本地编译运行 region 服务的流程：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 切换到 云联壹云 代码目录&lt;/span&gt;
$ &lt;span style=&#34;color:#204a87&#34;&gt;cd&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;$GOPATH&lt;/span&gt;/src/yunion.io/x/onecloud
 
&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 编译 region 服务&lt;/span&gt;
$ make cmd/region
 
&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 使用 telepresence 替换 k8s 里面的 default-region deployment&lt;/span&gt;
&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 该命令在 k8s 集群中启动一个 deployment 替换掉原来的 default-regoin&lt;/span&gt;
&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 然后把流量的访问导向本地&lt;/span&gt;
&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 如果想要使用特定的 shell，比如 zsh，可以在后面加上&amp;#34;--run /bin/zsh&amp;#34;&lt;/span&gt;
$ telepresence --swap-deployment default-region --namespace onecloud&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;到这里已经进入到 telepresence 隔离的 namespace 里面了，
$TELEPRESENCE_ROOT 这个目录 是通过 sshfs 挂载的远端 k8s pod 的文件系统。
接下来我们就可以在这个 namespace 里面运行 region 服务了：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 设置 max_user_namespaces&lt;/span&gt;
$ cat /proc/sys/user/max_user_namespaces
&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;0&lt;/span&gt;
&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 如果 max_user_namespaces 为 0，需要设置下 user_namespaces&lt;/span&gt;
$ &lt;span style=&#34;color:#204a87&#34;&gt;echo&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;640&lt;/span&gt; &amp;gt; /proc/sys/user/max_user_namespaces
 
&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 启动一个新的 namespace , 但不共享 mount namespace，这样接下来的 mount bind 操作就不会影响到宿主机&lt;/span&gt;
$ unshare --map-root-user --mount
&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# bind k8s /var/run/secrets&lt;/span&gt;
$ mount --bind &lt;span style=&#34;color:#000&#34;&gt;$TELEPRESENCE_ROOT&lt;/span&gt;/var/run /var/run
$ ls /var/run/
secrets
&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# bind 云联壹云 config&lt;/span&gt;
$ mkdir /etc/yunion
$ mount --bind &lt;span style=&#34;color:#000&#34;&gt;$TELEPRESENCE_ROOT&lt;/span&gt;/etc/yunion /etc/yunion
$ ls /etc/yunion/
pki  region.conf
 
&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 启动 region 服务&lt;/span&gt;
$ ./_output/bin/region --config /etc/yunion/region.conf
&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 这个时候如果我们在外部调用 climc&lt;/span&gt;
$ climc server-list
&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 就会发现相关的请求已经被转发到本地开发机启动 region 服务了&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;更多用法，以及 telepresence 的原理请参考&lt;a href=&#34;https://www.telepresence.io/discussion/overview&#34; target=&#34;_blank&#34;&gt;官方文档&lt;/a&gt;。&lt;/p&gt;

&lt;h2 id=&#34;开发流程&#34;&gt;开发流程&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;从 master checkout 出 feature 或者 bugfix 分支&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# checkout 新分支&lt;/span&gt;
$ git fetch upstream --tags
$ git checkout -b feature/implement-x upstream/master&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;在新的分支上进行开发&lt;/li&gt;
&lt;li&gt;开发完成后，进行提交PR前的准备操作&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;$ git fetch upstream         &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 同步远程 upstream master 代码&lt;/span&gt;
$ git rebase upstream/master &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 有冲突则解决冲突&lt;/span&gt;
$ git push origin feature/implement-x &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# push 分支到自己的 repo&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;在GitHub的Web界面完成提交PR的流程&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&#34;../images/submitPR.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;提完 PR 后请求相关开发人员 review，并设置Labels来表明提交的代码属于哪一个模块或者哪几个模块&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&#34;../images/reviewer_label.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;或者通过添加评论的方式来完成上一步；评论 &amp;ldquo;/cc&amp;rdquo; 并 @ 相关人员完成设置reviewer，评论/area 并填写label完成设置Labels&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&#34;../images/robot_review_label.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;​   所有Label都可以在issues——Labels下查询到，带area/前缀的Label均可以使用评论&amp;rdquo;/area&amp;rdquo;的形式添加&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;如果是 bugfix 或者需要合并到之前 release 分支的 feature PR，需要额外使用脚本将此PR cherry-pick 到对应的 release 分支&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 自行下载安装 github 的 cli 工具：https://github.com/github/hub&lt;/span&gt;
&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# OSX 使用: brew install hub&lt;/span&gt;
&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# Debian: sudo apt install hub&lt;/span&gt;
&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 二进制安装: https://github.com/github/hub/releases&lt;/span&gt;

&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 设置github的用户名&lt;/span&gt;
$ &lt;span style=&#34;color:#204a87&#34;&gt;export&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;GITHUB_USER&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&amp;lt;your_username&amp;gt;

&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 使用脚本自动 cherry-pick PR 到 release 分支&lt;/span&gt;
&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 比如现在有一个提交的PR的编号为8，要把它合并到 release/2.8.0&lt;/span&gt;
$ ./scripts/cherry_pick_pull.sh upstream/release/2.8.0 &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;8&lt;/span&gt;
 
&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# cherry pick 可能会出现冲突，冲突时开另外一个 terminal，解决好冲突，再输入 &amp;#39;y&amp;#39; 进行提交&lt;/span&gt;
$ git add xxx &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 解决完冲突后&lt;/span&gt;
$ git am --continue
&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 回到执行 cherry-pick 脚本的 terminal 输入 &amp;#39;y&amp;#39; 即可&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;去 upstream 的 &lt;a href=&#34;https://github.com/yunionio/onecloud/pulls&#34; target=&#34;_blank&#34;&gt;PR 页面&lt;/a&gt;, 就能看到自动生成的 cherry-pick PR，上面操作的PR的标题前缀就应该为：&lt;code&gt;Automated cherry pick of #8&lt;/code&gt;，然后重复 PR review 流程合并到 release&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: 部署 DB HA 环境</title>
      <link>https://opensource.yunion.cn/docs/setup/db-ha/</link>
      <pubDate>Wed, 12 Feb 2020 12:55:46 +0800</pubDate>
      
      <guid>https://opensource.yunion.cn/docs/setup/db-ha/</guid>
      <description>
        
        
        

&lt;p&gt;云联壹云 服务使用 Mariadb，这里使用 keepalived 和 Mariadb 的主主复制功能来实现 DB 的高可用。&lt;/p&gt;

&lt;h2 id=&#34;部署&#34;&gt;部署&lt;/h2&gt;

&lt;p&gt;keepalived 的主要作用是为 Mariadb 提供 vip，在2个 Mariadb 实例之间切换，不间断的提供服务。&lt;/p&gt;

&lt;h3 id=&#34;部署配置-mariadb-主主复制&#34;&gt;部署配置 Mariadb 主主复制&lt;/h3&gt;

&lt;p&gt;安装并启动 Mariadb&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;$ yum install -y mariadb-server
$ systemctl &lt;span style=&#34;color:#204a87&#34;&gt;enable&lt;/span&gt; --now mariadb&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;运行 Mariadb 安全配置向导，设置密码等&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;$ mysql_secure_installation
 ... ...
Change the root password? &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;[&lt;/span&gt;Y/n&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;]&lt;/span&gt; y
New password:
Re-enter new password:
Password updated successfully!
Reloading privilege tables..
 ... Success!
 ... ...
Remove anonymous users? &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;[&lt;/span&gt;Y/n&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;]&lt;/span&gt; y
 ... Success!
 ... ...
Disallow root login remotely? &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;[&lt;/span&gt;Y/n&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;]&lt;/span&gt; y
 ... Success!
 ... ...
Remove &lt;span style=&#34;color:#204a87&#34;&gt;test&lt;/span&gt; database and access to it? &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;[&lt;/span&gt;Y/n&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;]&lt;/span&gt; y
 - Dropping &lt;span style=&#34;color:#204a87&#34;&gt;test&lt;/span&gt; database...
 ... Success!
 - Removing privileges on &lt;span style=&#34;color:#204a87&#34;&gt;test&lt;/span&gt; database...
 ... Success! ... ...
Reload privilege tables now? &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;[&lt;/span&gt;Y/n&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;]&lt;/span&gt; y
 ... Success!
 ... ...&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;修改 Mariadb 配置文件，准备配置主主复制&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 主节点&lt;/span&gt;
$ cat &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;lt;&amp;lt;EOF &amp;gt; /etc/my.cnf
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;[mysqld]
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;datadir=/var/lib/mysql
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;socket=/var/lib/mysql/mysql.sock
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;# Disabling symbolic-links is recommended to prevent assorted security risks
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;symbolic-links=0
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;# Settings user and group are ignored when systemd is used.
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;# If you need to run mysqld under a different user or group,
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;# customize your systemd unit file for mariadb according to the
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;# instructions in http://fedoraproject.org/wiki/Systemd
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;# skip domain name resolve
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;skip_name_resolve
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;# auto delete binlog older than 30 days
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;expire_logs_days=30
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;innodb_file_per_table=ON
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;max_connections = 300
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt; 
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;server-id = 1
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;auto_increment_offset = 1
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;auto_increment_increment = 2
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;log-bin = mysql-bin
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;binlog-format = row
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;log-slave-updates
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;max_binlog_size = 1G
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;replicate-ignore-db = information_schema
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;replicate-ignore-db = performance_schema
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;max_connections = 1000
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;max_connect_errors = 0
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;max_allowed_packet = 1G
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;slave-net-timeout=10
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;master-retry-count=0
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt; 
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;slow_query_log = 1
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;long_query_time = 2
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;slow_query_log_file = /var/log/mariadb/slow-query.log
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt; 
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;[mysql]
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;no-auto-rehash
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt; 
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;[mysqld_safe]
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;log-error=/var/log/mariadb/mariadb.log
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;pid-file=/var/run/mariadb/mariadb.pid
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt; 
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;#
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;# include all files from the config directory
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;#
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;!includedir /etc/my.cnf.d
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;EOF&lt;/span&gt;

&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 备节点&lt;/span&gt;
$ cat &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;lt;&amp;lt;EOF &amp;gt; /etc/my.cnf
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;[mysqld]
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;datadir=/var/lib/mysql
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;socket=/var/lib/mysql/mysql.sock
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;# Disabling symbolic-links is recommended to prevent assorted security risks
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;symbolic-links=0
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;# Settings user and group are ignored when systemd is used.
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;# If you need to run mysqld under a different user or group,
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;# customize your systemd unit file for mariadb according to the
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;# instructions in http://fedoraproject.org/wiki/Systemd
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;# skip domain name resolve
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;skip_name_resolve
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;# auto delete binlog older than 30 days
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;expire_logs_days=30
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;innodb_file_per_table=ON
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;max_connections = 300
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt; 
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;server-id = 2
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;auto_increment_offset = 2
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;auto_increment_increment = 2
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;log-bin = mysql-bin
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;binlog-format = row
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;log-slave-updates
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;max_binlog_size = 1G
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;replicate-ignore-db = information_schema
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;replicate-ignore-db = performance_schema
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;max_connections = 1000
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;max_connect_errors = 0
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;max_allowed_packet = 1G
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;slave-net-timeout=10
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;master-retry-count=0
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt; 
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;slow_query_log = 1
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;long_query_time = 2
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;slow_query_log_file = /var/log/mariadb/slow-query.log
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt; 
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;[mysql]
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;no-auto-rehash
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt; 
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;[mysqld_safe]
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;log-error=/var/log/mariadb/mariadb.log
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;pid-file=/var/run/mariadb/mariadb.pid
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt; 
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;#
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;# include all files from the config directory
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;#
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;!includedir /etc/my.cnf.d
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;EOF&lt;/span&gt;

&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 重启服务&lt;/span&gt;
$ systemctl restart mariadb&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;主节点创建只读账号，导出全部数据，导入备节点。记录binlog日志文件名和position。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 以下命令在主节点执行&lt;/span&gt;

&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 此密码为上面设置的 Mariadb root 密码，为了方便，只读账号也使用此密码&lt;/span&gt;
$ &lt;span style=&#34;color:#000&#34;&gt;MYSQL_PASSWD&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;your-sql-passwd&amp;#39;&lt;/span&gt;

&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 开启 Mariadb 的远程访问&lt;/span&gt;
$ mysql -uroot -p&lt;span style=&#34;color:#000&#34;&gt;$MYSQL_PASSWD&lt;/span&gt; -e &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;GRANT ALL PRIVILEGES ON *.* TO &amp;#39;root&amp;#39;@&amp;#39;%&amp;#39; IDENTIFIED BY &amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;$MYSQL_PASSWD&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39; WITH GRANT OPTION;FLUSH PRIVILEGES&amp;#34;&lt;/span&gt;

&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 创建只读账号&lt;/span&gt;
$ mysql -u root -p&lt;span style=&#34;color:#000&#34;&gt;$MYSQL_PASSWD&lt;/span&gt; -e &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;GRANT REPLICATION SLAVE ON *.* TO repl@&amp;#39;%&amp;#39; IDENTIFIED BY &amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;$MYSQL_PASSWD&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;;FLUSH PRIVILEGES&amp;#34;&lt;/span&gt;

&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 示例是全新安装的 Mariadb ，还没有使用。如果是正在使用的数据库做主主复制，需要锁表后再导出数据&lt;/span&gt;
$ mysql -uroot -p&lt;span style=&#34;color:#000&#34;&gt;$MYSQL_PASSWD&lt;/span&gt; -e &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;SHOW PROCESSLIST&amp;#34;&lt;/span&gt;
+----+------+-----------+------+---------+------+-------+------------------+----------+
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; Id &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; User &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; Host      &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; db   &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; Command &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; Time &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; State &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; Info             &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; Progress &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt;
+----+------+-----------+------+---------+------+-------+------------------+----------+
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt;  &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;4&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; root &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; localhost &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; NULL &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; Query   &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt;    &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;0&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; NULL  &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; SHOW PROCESSLIST &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt;    &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;0&lt;/span&gt;.000 &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt;
+----+------+-----------+------+---------+------+-------+------------------+----------+

&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 记录binlog日志文件名和position&lt;/span&gt;
$ mysql -u root -p&lt;span style=&#34;color:#000&#34;&gt;$MYSQL_PASSWD&lt;/span&gt; -e &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;SHOW MASTER STATUS\G&amp;#34;&lt;/span&gt;
*************************** &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1&lt;/span&gt;. row ***************************
            File: mysql-bin.000001
        Position: &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;2023&lt;/span&gt;
    Binlog_Do_DB:
Binlog_Ignore_DB:

&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 导出全部数据&lt;/span&gt;
$ mysqldump --all-databases -p&lt;span style=&#34;color:#000&#34;&gt;$MYSQL_PASSWD&lt;/span&gt; &amp;gt; alldb.db

&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 拷贝 alldb.db 到备节点&lt;/span&gt;
$ scp alldb.db db2:/root/


&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 以下命令在备节点执行&lt;/span&gt;

&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 此密码为上面设置的 Mariadb root 密码&lt;/span&gt;
$ &lt;span style=&#34;color:#000&#34;&gt;MYSQL_PASSWD&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;your-sql-passwd&amp;#39;&lt;/span&gt;

&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 导入主节点导出的数据&lt;/span&gt;
mysql -u root -p&lt;span style=&#34;color:#000&#34;&gt;$MYSQL_PASSWD&lt;/span&gt; &amp;lt; alldb.db

&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 重载权限&lt;/span&gt;
mysql -u root -p&lt;span style=&#34;color:#000&#34;&gt;$MYSQL_PASSWD&lt;/span&gt; -e &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;FLUSH PRIVILEGES&amp;#34;&lt;/span&gt;

&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 记录binlog日志文件名和position&lt;/span&gt;
mysql -u root -p&lt;span style=&#34;color:#000&#34;&gt;$MYSQL_PASSWD&lt;/span&gt; -e &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;SHOW MASTER STATUS\G&amp;#34;&lt;/span&gt;
*************************** &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1&lt;/span&gt;. row ***************************
            File: mysql-bin.000001
        Position: &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;509778&lt;/span&gt;
    Binlog_Do_DB:
Binlog_Ignore_DB:&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;设置主主复制&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 以下命令在主节点执行&lt;/span&gt;

&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 修改MASTER_HOST为备节点IP，修改MASTER_LOG_FILE和MASTER_LOG_POS为上面备节点记录的信息&lt;/span&gt;
mysql -u root -p&lt;span style=&#34;color:#000&#34;&gt;$MYSQL_PASSWD&lt;/span&gt; -e &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;CHANGE MASTER TO MASTER_HOST=&amp;#39;192.168.199.99&amp;#39;,MASTER_USER=&amp;#39;repl&amp;#39;,MASTER_PASSWORD=&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;$MYSQL_PASSWD&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;,MASTER_PORT=3306,MASTER_LOG_FILE=&amp;#39;mysql-bin.000001&amp;#39;,MASTER_LOG_POS=509778,MASTER_CONNECT_RETRY=2;START SLAVE&amp;#34;&lt;/span&gt;


&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 以下命令在备节点执行&lt;/span&gt;

&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 修改MASTER_HOST为主节点IP，修改MASTER_LOG_FILE和MASTER_LOG_POS为上面主节点记录的信息&lt;/span&gt;
mysql -u root -p&lt;span style=&#34;color:#000&#34;&gt;$MYSQL_PASSWD&lt;/span&gt; -e &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;CHANGE MASTER TO MASTER_HOST=&amp;#39;192.168.199.98&amp;#39;,MASTER_USER=&amp;#39;repl&amp;#39;,MASTER_PASSWORD=&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;$MYSQL_PASSWD&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;,MASTER_PORT=3306,MASTER_LOG_FILE=&amp;#39;mysql-bin.000001&amp;#39;,MASTER_LOG_POS=2023,MASTER_CONNECT_RETRY=2;START SLAVE&amp;#34;&lt;/span&gt;


&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 主备都执行，验证同步状态，都输出2个 Yes 表示正常&lt;/span&gt;
mysql -u root -p&lt;span style=&#34;color:#000&#34;&gt;$MYSQL_PASSWD&lt;/span&gt; -e &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;SHOW SLAVE STATUS\G&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; grep Running
             Slave_IO_Running: Yes
            Slave_SQL_Running: Yes&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;至此，DB 主主复制部署完成，可以测试在任一节点进行数据库操作，另一节点验证。不过对外提供服务还是需要通过 vip，不然发生切换还需要业务端切换 ip，下面配置 keepalived 对外提供服务。&lt;/p&gt;

&lt;h3 id=&#34;部署配置-keepalived&#34;&gt;部署配置 keepalived&lt;/h3&gt;

&lt;p&gt;设置相关的环境变量，根据不同的环境自行配置。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# keepalived vip 地址&lt;/span&gt;
&lt;span style=&#34;color:#204a87&#34;&gt;export&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;DB_VIP&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;192&lt;/span&gt;.168.199.97

&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# keepalived auth toke&lt;/span&gt;
&lt;span style=&#34;color:#204a87&#34;&gt;export&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;DBHA_KA_AUTH&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;onecloud

&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# keepalived network interface&lt;/span&gt;
&lt;span style=&#34;color:#204a87&#34;&gt;export&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;DB_NETIF&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;eth0&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;设置 sysctl 选项&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;$ cat &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;lt;&amp;lt;EOF &amp;gt;&amp;gt;/etc/sysctl.conf
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;net.ipv4.ip_forward = 1
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;net.ipv4.ip_nonlocal_bind = 1
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;EOF&lt;/span&gt;

$ sysctl -p&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;安装 keepalived nc&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;$ yum install -y keepalived nc&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;添加配置&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 请确保 virtual_router_id 不会和局域网内的其他 keepalived 集群冲突&lt;/span&gt;
$ cat &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;lt;&amp;lt;EOF &amp;gt;/etc/keepalived/keepalived.conf
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;global_defs {
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;    router_id onecloud
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;}
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;  
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;vrrp_script chk_mysql {
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;    script &amp;#34;/etc/keepalived/chk_mysql&amp;#34;
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;    interval 1
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;}
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;  
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;vrrp_instance VI_1 {
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;    state MASTER
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;    interface $DB_NETIF         
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;    virtual_router_id 99
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;    priority 100
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;    advert_int 1
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;    nopreempt
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;    authentication {
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;        auth_type PASS
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;        auth_pass $DBHA_KA_AUTH
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;    }
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;  
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;    track_script {
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;        chk_mysql
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;    }
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;  
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;    virtual_ipaddress {
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;        $DB_VIP
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;    }
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;}
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;EOF&lt;/span&gt;

$ cat &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;lt;&amp;lt;EOF &amp;gt; /etc/keepalived/chk_mysql
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;#!/bin/bash
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;echo | nc 127.0.0.1 3306 &amp;amp;&amp;gt;/dev/null
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;EOF&lt;/span&gt;
  
$ chmod +x /etc/keepalived/chk_mysql&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;启动 keepalived&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;$ systemctl &lt;span style=&#34;color:#204a87&#34;&gt;enable&lt;/span&gt; --now keepalived
$ ip addr show &lt;span style=&#34;color:#000&#34;&gt;$DB_NETIF&lt;/span&gt;
&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;2&lt;/span&gt;: eth0: &amp;lt;BROADCAST,MULTICAST,UP,LOWER_UP&amp;gt; mtu &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1500&lt;/span&gt; qdisc pfifo_fast state UP group default qlen &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1000&lt;/span&gt;
    link/ether &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;00&lt;/span&gt;:22:cf:40:1e:29 brd ff:ff:ff:ff:ff:ff
    inet &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;192&lt;/span&gt;.168.199.99/24 brd &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;192&lt;/span&gt;.168.199.255 scope global dynamic eth0
       valid_lft 100651906sec preferred_lft 100651906sec
    inet &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;192&lt;/span&gt;.168.199.97/32 scope global eth0
       valid_lft forever preferred_lft forever
    inet6 fe80::222:cfff:fe40:1e29/64 scope link
       valid_lft forever preferred_lft forever&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;至此，DB 高可用部署完成，任一节点的 Mariadb 或 keepalived 服务异常，或者任一节点宕机，都不影响对外服务。&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: 服务组件介绍</title>
      <link>https://opensource.yunion.cn/docs/contribute/services/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://opensource.yunion.cn/docs/contribute/services/</guid>
      <description>
        
        
        

&lt;h2 id=&#34;架构简介&#34;&gt;架构简介&lt;/h2&gt;

&lt;p&gt;云联壹云 服务组件较多，接下来分别介绍每个组件的功能:&lt;/p&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;服务组件&lt;/th&gt;
&lt;th&gt;功能用途&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;keystone&lt;/td&gt;
&lt;td&gt;认证权限管理&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;region&lt;/td&gt;
&lt;td&gt;多云资源控制器&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;scheduler&lt;/td&gt;
&lt;td&gt;资源调度器&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;glance&lt;/td&gt;
&lt;td&gt;虚拟机镜像管理&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;host&lt;/td&gt;
&lt;td&gt;私有云虚拟机管理&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;baremetal&lt;/td&gt;
&lt;td&gt;私有云物理机管理&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;esxi-agent&lt;/td&gt;
&lt;td&gt;vmware esxi 实例管理&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;lb-agent&lt;/td&gt;
&lt;td&gt;私有云负载均衡&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;webconsole&lt;/td&gt;
&lt;td&gt;提供 vnc, ssh 访问&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;logger&lt;/td&gt;
&lt;td&gt;记录审计日志&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;apigateway&lt;/td&gt;
&lt;td&gt;api 网关，能通过该服务访问后端所有 api&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;climc&lt;/td&gt;
&lt;td&gt;命令行管理工具&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;组件架构见下图，分为接入层，控制层和资源层三个主要部分。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;../images/onecloud-services.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;h2 id=&#34;接入层&#34;&gt;接入层&lt;/h2&gt;

&lt;p&gt;接入层实现云管平台的访问功能，允许用户通过如下3种方式访问云管平台的功能：&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;API访问&lt;/strong&gt;: 通过REST API访问云管平台功能，用户可以直接通过http接口访问云管平台的REST API，也可以使用云管平台提供的SDK。目前SDK支持Java，Python和Golang等三种语言。&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;strong&gt;命令行访问&lt;/strong&gt;: 通过云管平台提供的climc命令行工具访问云管平台功能，允许用户通过脚本调用climc，实现一些自动化运维功能。Climc使用Golang语言，基于云管平台的Golang SDK开发。&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;strong&gt;Web控制台访问&lt;/strong&gt;: 通过Web UI访问云管平台的功能。允许用户通过主流web浏览器访问云管平台。Web控制台提供管理员使用的管理后台以及普通用户使用的普通功能页面，能够提供大部分的管理和使用功能。Web控制台基于Vue 2.0 JavaScript SPA框架实现。&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&#34;控制层&#34;&gt;控制层&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;控制层实现云管平台的管理和控制功能。主要由API网关，认证服务，镜像服务，云控制器和调度器，以及 webconsole vnc, ssh 代理服务等组件构成。&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;API网关提供Web控制台对各个服务的统一REST API访问接口。实现Web控制台的登录验证，session 控制，以及对后端各个服务的API调用。API网关由Golang完全自主开发，完全无状态架构，具备水平扩展能力。&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;认证服务提供平台的账户管理和认证体系，并提供基于项目的多租户支持，同时提供服务目录功能。认证服务支持多种认证源，允许和企业的LDAP／AD对接，允许用户以企业统一的账户体系登入系统。认证服务2.10之前版本基于OpenStack Keystone Pika版本，开发语言为Python。在开源版本基础上，我们修正了BUG，并做了若干改进。2.10之后版本采用golang语言开发。Keystone采用无状态架构，支持水平扩展，可以水平拆分实现服务高可用。&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;镜像服务提供云管平台各种主机资源的操作系统镜像的管理功能。提供镜像存储，元数据管理等功能。镜像服务1.x版本基于OpenStack Glance Folsom版本改进而来，开发语言为Python。在开源版本基础上，我们修正了BUG，并做了若干改进。2.x版本采用golang语言开发。Glance采用无状态架构，支持水平扩展，可以水平拆分实现服务高可用。&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;云控制器是整个云管平台的中枢，负责机房网络，宿主机，网络，存储，虚拟机等各类资源的元数据信息管理，以及对虚拟机，裸机等的自动化管理操作认证的调度，协调管理。云控制器内置基于REST API接口的分布式异步任务管理框架，实现对在计算节点进行的开关机，创建删除等耗时操作任务的管理协调工作。云控制器完全自主开发，云控制器采用无状态架构，可以水平扩展，通过水平拆分实现高可用。&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;调度器负责云管平台资源调度功能，是云管平台中资源获取决策的唯一执行者，根据用户对资源的要求，给出资源的最优提供者。调度器支持批量调度，调度性能优异，可扩展性好。调度器完全自主开发，基于Golang语言开发。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;资源层&#34;&gt;资源层&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;资源层实现对KVM虚拟机，裸机，VMWare虚拟机等计算资源的管理和控制功能。云管平台目前主要支持对KVM虚拟机，裸机，VMWare虚拟机，常用私有云openstack, zstack 以及公有云阿里云，Azure，腾讯云，AWS等公有云资源的管理。&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: 部署集群</title>
      <link>https://opensource.yunion.cn/docs/setup/controlplane/</link>
      <pubDate>Sat, 13 Apr 2019 13:01:57 +0800</pubDate>
      
      <guid>https://opensource.yunion.cn/docs/setup/controlplane/</guid>
      <description>
        
        
        

&lt;h2 id=&#34;环境准备&#34;&gt;环境准备&lt;/h2&gt;

&lt;p&gt;云联壹云 相关的组件运行在 kubernetes 之上，环境以及相关的软件依赖如下:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;操作系统: Centos 7.6&lt;/li&gt;
&lt;li&gt;最低配置要求: CPU 4核, 内存 8G, 存储 150G&lt;/li&gt;
&lt;li&gt;数据库: mariadb (CentOS 7自带的版本：Ver 15.1 Distrib 5.5.56-MariaDB）&lt;/li&gt;
&lt;li&gt;docker: ce-19.03.9&lt;/li&gt;
&lt;li&gt;kubernetes: v1.15.8&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;需要能访问如下网址，如果企业有外网隔离规则，则需要打开相应白名单：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;CentOS YUM网络安装源&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://iso.yunion.cn/&#34; target=&#34;_blank&#34;&gt;https://iso.yunion.cn/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://registry.cn-beijing.aliyuncs.com&#34; target=&#34;_blank&#34;&gt;https://registry.cn-beijing.aliyuncs.com&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://meta.yunion.cn&#34; target=&#34;_blank&#34;&gt;https://meta.yunion.cn&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://yunionmeta.oss-cn-beijing.aliyuncs.com&#34; target=&#34;_blank&#34;&gt;https://yunionmeta.oss-cn-beijing.aliyuncs.com&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;安装配置-mariadb&#34;&gt;安装配置 mariadb&lt;/h3&gt;

&lt;p&gt;mariadb 作为服务数据持久化的数据库，可以部署在其它节点或者使用单独维护的。下面假设还没有部署 mariadb，在控制节点上安装设置 mariadb。&lt;/p&gt;

&lt;p&gt;为了方便运行维护，mariadb推荐打开两个参数设施：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;skip_name_resolve：取消域名解析&lt;/li&gt;
&lt;li&gt;expire_logs_days=30：设置binlog的超时时间为30天，超过30天的binglog自动删除&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;$ &lt;span style=&#34;color:#000&#34;&gt;MYSQL_PASSWD&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;your-sql-passwd&amp;#39;&lt;/span&gt;
&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 安装 mariadb&lt;/span&gt;
$ yum install -y epel-release mariadb-server
$ systemctl &lt;span style=&#34;color:#204a87&#34;&gt;enable&lt;/span&gt; --now mariadb
$ mysqladmin -u root password &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;$MYSQL_PASSWD&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;&lt;/span&gt;
$ cat &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;lt;&amp;lt;EOF &amp;gt;/etc/my.cnf
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;[mysqld]
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;datadir=/var/lib/mysql
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;socket=/var/lib/mysql/mysql.sock
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;# Disabling symbolic-links is recommended to prevent assorted security risks
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;symbolic-links=0
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;# Settings user and group are ignored when systemd is used.
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;# If you need to run mysqld under a different user or group,
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;# customize your systemd unit file for mariadb according to the
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;# instructions in http://fedoraproject.org/wiki/Systemd
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;# skip domain name resolve
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;skip_name_resolve
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;# auto delete binlog older than 30 days
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;expire_logs_days=30
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;[mysqld_safe]
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;log-error=/var/log/mariadb/mariadb.log
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;pid-file=/var/run/mariadb/mariadb.pid
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;#
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;# include all files from the config directory
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;#
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;!includedir /etc/my.cnf.d
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;EOF&lt;/span&gt;

$ mysql -uroot -p&lt;span style=&#34;color:#000&#34;&gt;$MYSQL_PASSWD&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;\
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&lt;/span&gt;  -e &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;GRANT ALL ON *.* to &amp;#39;root&amp;#39;@&amp;#39;%&amp;#39; IDENTIFIED BY &amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;$MYSQL_PASSWD&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39; with grant option; FLUSH PRIVILEGES;&amp;#34;&lt;/span&gt;

$ systemctl restart mariadb&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;安装配置-docker&#34;&gt;安装配置 docker&lt;/h3&gt;

&lt;p&gt;安装 docker&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;$ yum install -y yum-utils bash-completion
&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 添加 yunion 云联壹云 rpm 源&lt;/span&gt;
$ yum-config-manager --add-repo https://iso.yunion.cn/yumrepo-3.4/yunion.repo
$ yum install -y docker-ce-19.03.9 docker-ce-cli-19.03.9 containerd.io&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;配置 docker&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;$ mkdir -p /etc/docker
$ cat &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;lt;&amp;lt;EOF &amp;gt;/etc/docker/daemon.json
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;{
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;  &amp;#34;bridge&amp;#34;: &amp;#34;none&amp;#34;,
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;  &amp;#34;iptables&amp;#34;: false,
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;  &amp;#34;exec-opts&amp;#34;:
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;    [
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;      &amp;#34;native.cgroupdriver=systemd&amp;#34;
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;    ],
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;  &amp;#34;data-root&amp;#34;: &amp;#34;/opt/docker&amp;#34;,
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;  &amp;#34;live-restore&amp;#34;: true,
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;  &amp;#34;log-driver&amp;#34;: &amp;#34;json-file&amp;#34;,
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;  &amp;#34;log-opts&amp;#34;:
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;    {
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;      &amp;#34;max-size&amp;#34;: &amp;#34;100m&amp;#34;
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;    },
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;  &amp;#34;registry-mirrors&amp;#34;:
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;    [
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;      &amp;#34;https://lje6zxpk.mirror.aliyuncs.com&amp;#34;,
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;      &amp;#34;https://lms7sxqp.mirror.aliyuncs.com&amp;#34;,
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;      &amp;#34;https://registry.docker-cn.com&amp;#34;
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;    ]
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;}
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;EOF&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;启动 docker&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;$ systemctl &lt;span style=&#34;color:#204a87&#34;&gt;enable&lt;/span&gt; --now docker&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;安装-云联壹云-依赖内核&#34;&gt;安装 云联壹云 依赖内核&lt;/h3&gt;

&lt;p&gt;这里需要安装我们编译的内核，这个内核是基于上游 Centos 3.10.0-1062 编译的，默认添加了 nbd 模块，nbd 模块用于镜像相关的操作。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 安装内核&lt;/span&gt;
$ yum install -y &lt;span style=&#34;color:#4e9a06&#34;&gt;\
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&lt;/span&gt;  kernel-3.10.0-1062.4.3.el7.yn20191203 &lt;span style=&#34;color:#4e9a06&#34;&gt;\
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&lt;/span&gt;  kernel-devel-3.10.0-1062.4.3.el7.yn20191203 &lt;span style=&#34;color:#4e9a06&#34;&gt;\
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&lt;/span&gt;  kernel-headers-3.10.0-1062.4.3.el7.yn20191203

&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 重启系统进入内核&lt;/span&gt;
$ reboot

&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 重启完成后，查看当前节点内核信息&lt;/span&gt;
&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 确保为 3.10.0-1062.4.3.el7.yn20191203.x86_64&lt;/span&gt;
$ uname -r
&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;3&lt;/span&gt;.10.0-1062.4.3.el7.yn20191203.x86_64&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;安装配置-kubelet&#34;&gt;安装配置 kubelet&lt;/h3&gt;

&lt;p&gt;从 云联壹云 rpm 的 yum 源安装 kubernetes 1.15.8，并设置 kubelet 开机自启动&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;$ yum install -y bridge-utils ipvsadm conntrack-tools &lt;span style=&#34;color:#4e9a06&#34;&gt;\
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&lt;/span&gt;    jq kubelet-1.15.8-0 kubectl-1.15.8-0 kubeadm-1.15.8-0
$ &lt;span style=&#34;color:#204a87&#34;&gt;echo&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;source &amp;lt;(kubectl completion bash)&amp;#39;&lt;/span&gt; &amp;gt;&amp;gt; ~/.bashrc &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span style=&#34;color:#204a87&#34;&gt;source&lt;/span&gt; ~/.bashrc
$ &lt;span style=&#34;color:#204a87&#34;&gt;source&lt;/span&gt; /etc/profile
$ systemctl &lt;span style=&#34;color:#204a87&#34;&gt;enable&lt;/span&gt; kubelet&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;安装完 kubernetes 相关的二进制后，还需要对系统做一些配置并启用 ipvs 作为 kube-proxy 内部的 service 负载均衡&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 禁用 swap&lt;/span&gt;
$ swapoff -a
&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 如果设置了自动挂载 swap，需要去 /etc/fstab 里面注释掉挂载 swap 那一行&lt;/span&gt;

&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 关闭 selinux&lt;/span&gt;
$ setenforce  &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;0&lt;/span&gt;
$ sed -i &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;s/SELINUX=enforcing/SELINUX=disabled/&amp;#39;&lt;/span&gt; /etc/selinux/config

&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 禁用 firewalld&lt;/span&gt;
$ systemctl stop firewalld
$ systemctl disable firewalld

&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 禁用 NetworkManager&lt;/span&gt;
$ systemctl stop NetworkManager
$ systemctl disable NetworkManager
$ ps -ef&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt;grep dhcp &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; awk &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;{print $2}&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt;xargs &lt;span style=&#34;color:#204a87&#34;&gt;kill&lt;/span&gt; -9
 
&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 做一些 sysctl 的配置, kubernetes 要求&lt;/span&gt;
$ modprobe br_netfilter

$ cat &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;lt;&amp;lt;EOF &amp;gt;&amp;gt; /etc/sysctl.conf
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;net.bridge.bridge-nf-call-iptables=1
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;net.bridge.bridge-nf-call-ip6tables=1
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;net.ipv4.ip_forward=1
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;EOF&lt;/span&gt;

$ sysctl -p

&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 配置并开启 ipvs&lt;/span&gt;
$ cat &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;lt;&amp;lt;EOF &amp;gt; /etc/sysconfig/modules/ipvs.modules
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;#!/bin/bash
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;ipvs_modules=&amp;#34;ip_vs ip_vs_lc ip_vs_wlc ip_vs_rr ip_vs_wrr ip_vs_lblc ip_vs_lblcr ip_vs_dh ip_vs_sh ip_vs_fo ip_vs_nq ip_vs_sed ip_vs_ftp nf_conntrack_ipv4&amp;#34;
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;for kernel_module in \${ipvs_modules}; do
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;    /sbin/modinfo -F filename \${kernel_module} &amp;gt; /dev/null 2&amp;gt;&amp;amp;1
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;    if [ $? -eq 0 ]; then
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;        /sbin/modprobe \${kernel_module}
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;    fi
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;done
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;EOF&lt;/span&gt;

$ chmod &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;755&lt;/span&gt; /etc/sysconfig/modules/ipvs.modules &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; bash /etc/sysconfig/modules/ipvs.modules &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; lsmod &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; grep ip_vs&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&#34;部署集群&#34;&gt;部署集群&lt;/h2&gt;



&lt;div class=&#34;alert alert-primary&#34; role=&#34;alert&#34;&gt;
&lt;h4 class=&#34;alert-heading&#34;&gt;提示&lt;/h4&gt;
&lt;blockquote&gt;
&lt;p&gt;如果要部署高可用集群，请先搭建负载均衡集群，参考 &lt;a href=&#34;https://opensource.yunion.cn/docs/setup/controlplane-ha&#34;&gt;部署 HA 环境&lt;/a&gt;。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/div&gt;


&lt;h3 id=&#34;安装部署工具&#34;&gt;安装部署工具&lt;/h3&gt;

&lt;p&gt;先安装部署工具 ocadm 和云平台的命令行工具 climc:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 安装 climc 云平台命令行工具 和 ocadm 部署工具&lt;/span&gt;
$ yum install -y yunion-climc yunion-ocadm
&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# climc 在 /opt/yunion/bin 目录下，根据自己的需要加到 bash 或者 zsh 配置文件里面&lt;/span&gt;
$ &lt;span style=&#34;color:#204a87&#34;&gt;echo&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;export PATH=$PATH:/opt/yunion/bin&amp;#39;&lt;/span&gt; &amp;gt;&amp;gt; ~/.bashrc &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span style=&#34;color:#204a87&#34;&gt;source&lt;/span&gt; ~/.bashrc
&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 安装必要的服务，并启动和设置为开机自启&lt;/span&gt;
$ yum install -y yunion-executor-server &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; systemctl &lt;span style=&#34;color:#204a87&#34;&gt;enable&lt;/span&gt; --now yunion-executor&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;部署-kubernetes-集群&#34;&gt;部署 kubernetes 集群&lt;/h3&gt;

&lt;p&gt;接下来会现在当前节点启动 v1.15.8 的 kubernetes 服务，然后部署 云联壹云 控制节点相关的服务到 kubernetes 集群。&lt;/p&gt;

&lt;p&gt;拉取必要的 docker 镜像&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;$ ocadm config images pull&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;使用 ocadm 部署 kubernetes 集群&lt;/p&gt;



&lt;div class=&#34;alert alert-primary&#34; role=&#34;alert&#34;&gt;
&lt;h4 class=&#34;alert-heading&#34;&gt;提示&lt;/h4&gt;
&lt;blockquote&gt;
&lt;p&gt;如果要进行高可用部署，并已经搭建好了负载均衡集群，需要在 &lt;code&gt;ocadm init&lt;/code&gt; 命令加上 &lt;code&gt;--control-plane-endpoint &amp;lt;vip&amp;gt;:6443&lt;/code&gt; 参数，告诉 kubernetes 集群前端的 LoadBalancer vip，之后生成的配置就会都用这个 vip 当做控制节点的入口。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/div&gt;

&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 假设 mariadb 部署在本地，如果是使用已有的数据库，请改变对应的 ip&lt;/span&gt;
$ &lt;span style=&#34;color:#000&#34;&gt;MYSQL_HOST&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;$(&lt;/span&gt;ip route get &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; awk &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;{print $NF;exit}&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;)&lt;/span&gt;

&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 如果是高可用部署，记得在设置 EXTRA_OPT=&amp;#39; --control-plane-endpoint 10.168.222.18:6443&amp;#39;&lt;/span&gt;
$ &lt;span style=&#34;color:#000&#34;&gt;EXTRA_OPT&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;
$ &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;#EXTRA_OPT=&amp;#39; --control-plane-endpoint 10.168.222.18:6443&amp;#39;&lt;/span&gt;

&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 开始部署 kubernetes 以及 云联壹云 必要的控制服务，稍等 3 分钟左右，kubernetes 集群会部署完成&lt;/span&gt;
$ ocadm init --mysql-host &lt;span style=&#34;color:#000&#34;&gt;$MYSQL_HOST&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;\
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&lt;/span&gt;    --mysql-user root --mysql-password &lt;span style=&#34;color:#000&#34;&gt;$MYSQL_PASSWD&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;$EXTRA_OPT&lt;/span&gt;

...
Your Kubernetes and control-plane has initialized successfully!
...&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;div class=&#34;alert alert-primary&#34; role=&#34;alert&#34;&gt;
&lt;h4 class=&#34;alert-heading&#34;&gt;提示&lt;/h4&gt;
&lt;blockquote&gt;
&lt;p&gt;kubernetes 高可用部署需要 3 个节点，主要是 etcd 需要至少 3 个节点组成高可用集群。如果是高可用部署，请在另外两个节点执行 &lt;code&gt;ocadm join --control-plane &amp;lt;vip&amp;gt;:6443&lt;/code&gt; 部署控制服务，join 的另外两个节点会自动和当前的控制节点组成高可用集群。参考: &lt;a href=&#34;https://opensource.yunion.cn/docs/setup/components/#%E5%8A%A0%E5%85%A5-controlplane&#34;&gt;加入控制节点&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/div&gt;


&lt;p&gt;kubernetes 集群部署完成后，通过以下命令来确保相关的 pod (容器) 都已经启动, 变成 running 的状态。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;$ mkdir -p &lt;span style=&#34;color:#000&#34;&gt;$HOME&lt;/span&gt;/.kube
$ sudo cp -i /etc/kubernetes/admin.conf &lt;span style=&#34;color:#000&#34;&gt;$HOME&lt;/span&gt;/.kube/config
$ sudo chown &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;$(&lt;/span&gt;id -u&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;)&lt;/span&gt;:&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;$(&lt;/span&gt;id -g&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;$HOME&lt;/span&gt;/.kube/config
$ kubectl get pods --all-namespaces
NAMESPACE            NAME                                       READY   STATUS    RESTARTS   AGE
kube-system          calico-kube-controllers-648bb4447c-57gjb   &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1&lt;/span&gt;/1     Running   &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;0&lt;/span&gt;          5h1m
kube-system          calico-node-j89jg                          &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1&lt;/span&gt;/1     Running   &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;0&lt;/span&gt;          5h1m
kube-system          coredns-69845f69f6-f6wnv                   &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1&lt;/span&gt;/1     Running   &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;0&lt;/span&gt;          5h1m
kube-system          coredns-69845f69f6-sct6n                   &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1&lt;/span&gt;/1     Running   &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;0&lt;/span&gt;          5h1m
kube-system          etcd-lzx-ocadm-test2                       &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1&lt;/span&gt;/1     Running   &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;0&lt;/span&gt;          5h
kube-system          kube-apiserver-lzx-ocadm-test2             &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1&lt;/span&gt;/1     Running   &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;0&lt;/span&gt;          5h
kube-system          kube-controller-manager-lzx-ocadm-test2    &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1&lt;/span&gt;/1     Running   &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;0&lt;/span&gt;          5h
kube-system          kube-proxy-2fwgf                           &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1&lt;/span&gt;/1     Running   &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;0&lt;/span&gt;          5h1m
kube-system          kube-scheduler-lzx-ocadm-test2             &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1&lt;/span&gt;/1     Running   &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;0&lt;/span&gt;          5h
kube-system          traefik-ingress-controller-qwkfb           &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1&lt;/span&gt;/1     Running   &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;0&lt;/span&gt;          5h1m
local-path-storage   local-path-provisioner-5978cff7b7-7h8df    &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1&lt;/span&gt;/1     Running   &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;0&lt;/span&gt;          5h1m
onecloud             onecloud-operator-6d4bddb8c4-tkjkh         &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1&lt;/span&gt;/1     Running   &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;0&lt;/span&gt;          3h37m&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;创建-云联壹云-集群&#34;&gt;创建 云联壹云 集群&lt;/h3&gt;

&lt;p&gt;当 kubernetes 集群部署完成后，就可以通过 &lt;code&gt;ocadm cluster create&lt;/code&gt; 创建 云联壹云 集群，该集群由 onecloud namespace 里面 &lt;strong&gt;onecloud-operator&lt;/strong&gt; deployment 自动部署和维护。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 创建集群&lt;/span&gt;
&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 如果要部署企业版的组件可以在 cluster create 的时候加上 --use-ee 参数&lt;/span&gt;
$ ocadm cluster create --wait&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;执行完 &lt;code&gt;ocadm cluster create --wait&lt;/code&gt; 命令后，&lt;strong&gt;onecloud-operator&lt;/strong&gt; 会自动创建各个服务组件对应的 pod，等待一段该命令执行完毕， 就可以通过访问 &amp;lsquo;https://本机IP:443&amp;rsquo; 登入前端界面。&lt;/p&gt;

&lt;h3 id=&#34;创建登录用户&#34;&gt;创建登录用户&lt;/h3&gt;

&lt;p&gt;当控制节点部署完成后，需要创建一个用于前端登录的用户。云平台的管理员认证信息由 &lt;code&gt;ocadm cluster rcadmin&lt;/code&gt; 命令可以得到 , 这些认证信息在使用 climc 控制云平台资源时会用到。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 获取连接 云联壹云 集群的环境变量&lt;/span&gt;
$ ocadm cluster rcadmin
&lt;span style=&#34;color:#204a87&#34;&gt;export&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;OS_AUTH_URL&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;https://10.168.222.218:30357/v3
&lt;span style=&#34;color:#204a87&#34;&gt;export&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;OS_USERNAME&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;sysadmin
&lt;span style=&#34;color:#204a87&#34;&gt;export&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;OS_PASSWORD&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;3hV3qAhvxck84srk
&lt;span style=&#34;color:#204a87&#34;&gt;export&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;OS_PROJECT_NAME&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;system
&lt;span style=&#34;color:#204a87&#34;&gt;export&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;YUNION_INSECURE&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#204a87&#34;&gt;true&lt;/span&gt;
&lt;span style=&#34;color:#204a87&#34;&gt;export&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;OS_REGION_NAME&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;region0
&lt;span style=&#34;color:#204a87&#34;&gt;export&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;OS_ENDPOINT_TYPE&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;publicURL&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;div class=&#34;alert alert-primary&#34; role=&#34;alert&#34;&gt;
&lt;h4 class=&#34;alert-heading&#34;&gt;提示&lt;/h4&gt;
&lt;blockquote&gt;
&lt;p&gt;如果是高可用部署，这些 endpoint 的 public url 会是 vip，如果要在 kubernetes 集群外访问需要到 haproxy 节点上添加对应的 frontend 和 backend，其中frontend的端口对应 endpoint 里面的端口，backend 对应 3 个 controlplane node 的 ip 和对应端口。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/div&gt;


&lt;p&gt;创建用户&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 初始化连接集群的管理员认证信息&lt;/span&gt;
$ &lt;span style=&#34;color:#204a87&#34;&gt;source&lt;/span&gt; &amp;lt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;(&lt;/span&gt;ocadm cluster rcadmin&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;)&lt;/span&gt;

&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 设置想要创建的用户名和密码&lt;/span&gt;
$ &lt;span style=&#34;color:#000&#34;&gt;OC_USERNAME&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;demo
$ &lt;span style=&#34;color:#000&#34;&gt;OC_PASSWORD&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;demo@123

&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 创建指定的用户&lt;/span&gt;
$ climc user-create --password &lt;span style=&#34;color:#000&#34;&gt;$OC_PASSWORD&lt;/span&gt; --enabled &lt;span style=&#34;color:#000&#34;&gt;$OC_USERNAME&lt;/span&gt;

&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 将用户加入 system 项目并赋予 admin 角色&lt;/span&gt;
$ climc project-add-user system &lt;span style=&#34;color:#000&#34;&gt;$OC_USERNAME&lt;/span&gt; admin&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;访问前端&#34;&gt;访问前端&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 获取本机 IP&lt;/span&gt;
$ ip route get &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; awk &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;{print $NF;exit}&amp;#39;&lt;/span&gt;
&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;10&lt;/span&gt;.168.222.218

&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 测试连通性&lt;/span&gt;
$ curl -k https://10.168.222.218&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;用浏览器访问 &amp;lsquo;https://本机IP&amp;rsquo; 会跳转到 web 界面，使用 &lt;a href=&#34;https://opensource.yunion.cn/docs/setup/controlplane/#创建登录用户&#34;&gt;创建登录用户&lt;/a&gt; 里面指定的用户名和密码登录后，界面如下:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;../images/web-login.png&#34; alt=&#34;登录页&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;../images/web-dashboard.png&#34; alt=&#34;首页&#34; /&gt;&lt;/p&gt;

&lt;h3 id=&#34;删除环境&#34;&gt;删除环境&lt;/h3&gt;

&lt;p&gt;如果安装过程中失败，或者想清理环境，可执行以下命令删除 kubernetes 集群。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;$ ocadm reset --force&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&#34;后续&#34;&gt;后续&lt;/h2&gt;

&lt;p&gt;如果没有意外，现在应该已经部署好了 云联壹云 on kubernetes 的集群，以下是一些后续的环节说明，可以根据自己的需要来进行额外的操作。&lt;/p&gt;

&lt;h3 id=&#34;添加计算节点&#34;&gt;添加计算节点&lt;/h3&gt;

&lt;p&gt;当控制节点搭建完成后，可以参考 &lt;a href=&#34;https://opensource.yunion.cn/docs/setup/host/&#34;&gt;计算节点&lt;/a&gt; 一节的内容，添加计算节点，组建一套私有云集群。&lt;/p&gt;

&lt;h3 id=&#34;控制节点作为计算节点&#34;&gt;控制节点作为计算节点&lt;/h3&gt;

&lt;p&gt;默认情况下 &lt;code&gt;ocadm init&lt;/code&gt; 创建的节点是控制节点，不会运行 onecloud 计算节点的服务。如果需要把控制节点也作为计算节点，需要执行以下步骤:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;安装计算节点需要的依赖，参考 &lt;a href=&#34;https://opensource.yunion.cn/docs/setup/host/#安装依赖&#34;&gt;&amp;ldquo;计算节点/安装依赖&amp;rdquo;&lt;/a&gt;，这里主要是要安装我们的内核和运行虚拟机的 qemu 等软件。&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 安装rpm包&lt;/span&gt;
$ yum --disablerepo&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;*&amp;#39;&lt;/span&gt; --enablerepo&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;yunion*&amp;#39;&lt;/span&gt; install -y &lt;span style=&#34;color:#4e9a06&#34;&gt;\
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&lt;/span&gt;  epel-release libaio jq libusb lvm2 nc ntp fetchclient fuse fuse-devel fuse-libs &lt;span style=&#34;color:#4e9a06&#34;&gt;\
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&lt;/span&gt;  oniguruma pciutils spice spice-protocol sysstat tcpdump usbredir &lt;span style=&#34;color:#4e9a06&#34;&gt;\
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&lt;/span&gt;  yunion-qemu-2.12.1 yunion-executor-server &lt;span style=&#34;color:#4e9a06&#34;&gt;\
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&lt;/span&gt;  kmod-openvswitch &lt;span style=&#34;color:#4e9a06&#34;&gt;\
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&lt;/span&gt;  openvswitch net-tools

$ systemctl &lt;span style=&#34;color:#204a87&#34;&gt;enable&lt;/span&gt; --now yunion-executor&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;在控制节点启用该节点作为计算节点，命令如下:&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 用 kubectl get nodes 拿到当前的节点名称&lt;/span&gt;
$ kubectl get nodes
NAME           STATUS   ROLES    AGE 
controller01   Ready    master   116d
controller02   Ready    master   40d 
node01         Ready    &amp;lt;none&amp;gt;   25d 

&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 假设我要把 controller01 和 controller02 作为计算节点&lt;/span&gt;
$ ocadm node enable-host-agent &lt;span style=&#34;color:#4e9a06&#34;&gt;\
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&lt;/span&gt;  --node controller01 &lt;span style=&#34;color:#4e9a06&#34;&gt;\
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&lt;/span&gt;  --node controller02

&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 等待并查看运行在 controller01/02 上的计算节点服务&lt;/span&gt;
$ kubectl get pods -n onecloud -o wide &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; grep host
default-host-7b5cr  &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;2&lt;/span&gt;/2     Running    &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;218&lt;/span&gt;        18h     &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;192&lt;/span&gt;.168.222.4 controller01
default-host-ctx5s  &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;2&lt;/span&gt;/2     Running    &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;218&lt;/span&gt;        18h     &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;192&lt;/span&gt;.168.222.5 controller02&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;升级-回滚组件版本&#34;&gt;升级/回滚组件版本&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;ocadm init&lt;/code&gt; 的时候使用 &lt;code&gt;--onecloud-version&lt;/code&gt; 选项设置了组件的版本，可以使用 &lt;code&gt;ocadm cluster update&lt;/code&gt; 命令升级组件到指定的版本，保持更新。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 查看现在 云联壹云 cluster 的版本&lt;/span&gt;
$ kubectl get oc -n onecloud default  -o &lt;span style=&#34;color:#000&#34;&gt;jsonpath&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;{.spec.version}&amp;#39;&lt;/span&gt;
v3.0.0-20200112.0

&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 升级到 v3.0.0-20200113.0&lt;/span&gt;
$ ocadm cluster update --version v3.0.0-20200113.0 --wait&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
      </description>
    </item>
    
    <item>
      <title>Docs: 后端服务框架</title>
      <link>https://opensource.yunion.cn/docs/contribute/framework/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://opensource.yunion.cn/docs/contribute/framework/</guid>
      <description>
        
        
        

&lt;p&gt;介绍云平台后端服务所用的框架和相关库的使用方法，建议先阅读 &lt;a href=&#34;https://opensource.yunion.cn/docs/contribute/services/&#34;&gt;&amp;ldquo;开发相关/服务组件介绍&amp;rdquo;&lt;/a&gt; 了解各个服务大概的功能。&lt;/p&gt;

&lt;h2 id=&#34;后端服务框架&#34;&gt;后端服务框架&lt;/h2&gt;

&lt;p&gt;keystone, region, glance 等后端服务，都是用的同一套后端服务框架，这个框架是我们自己定义实现的，核心模块如下:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;../images/service_framework.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;REST API: 负责解析客户端发送的 CRUD http 请求，将不同的请求对应到 Model Dispatcher 模块。&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Model Dispatcher: 将客户端的请求分发到对应资源的业务操作。&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Model: 定义云平台各种资源，会进行数据库读写相关操作，如果具体业务需要进行耗时操作，会通过 Task 机制来执行耗时任务。&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Task: 后台处理异步耗时任务的模块，会通过更新 Model 的状态来更新任务的执行结果。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;云联壹云-代码结构&#34;&gt;云联壹云 代码结构&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/yunionio/onecloud/tree/master/build&#34; target=&#34;_blank&#34;&gt;build&lt;/a&gt;: 打包rpm脚本&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/yunionio/onecloud/tree/master/cmd&#34; target=&#34;_blank&#34;&gt;cmd&lt;/a&gt;: 可执行binary入口程序&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/yunionio/onecloud/tree/master/pkg&#34; target=&#34;_blank&#34;&gt;pkg&lt;/a&gt;: 库

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/yunionio/onecloud/tree/master/pkg/appsrv&#34; target=&#34;_blank&#34;&gt;appsrv&lt;/a&gt;: 通用http服务框架&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/yunionio/onecloud/tree/master/pkg/cloudcommon&#34; target=&#34;_blank&#34;&gt;cloudcommon&lt;/a&gt;: 云平台服务框架，基于appsrv扩展&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/yunionio/onecloud/tree/master/pkg/cloudcommon/options&#34; target=&#34;_blank&#34;&gt;cloudcommon/options&lt;/a&gt;: 通用options&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/yunionio/onecloud/tree/master/pkg/cloudcommon/app&#34; target=&#34;_blank&#34;&gt;cloudcommon/app&lt;/a&gt;: 通用服务初始化代码&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/yunionio/onecloud/tree/master/pkg/cloudcommon/db&#34; target=&#34;_blank&#34;&gt;cloudcommon/db&lt;/a&gt;: Model dispatcher和Models的基础实现&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/yunionio/onecloud/tree/master/pkg/cloudcommon/db/lockman&#34; target=&#34;_blank&#34;&gt;cloudcommon/db/lockman&lt;/a&gt;: 锁实现&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/yunionio/onecloud/tree/master/pkg/cloudcommon/db/taskman&#34; target=&#34;_blank&#34;&gt;cloudcommon/db/taskman&lt;/a&gt;: 异步任务框架&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;认证部分&#34;&gt;认证部分&lt;/h2&gt;

&lt;p&gt;&lt;img src=&#34;../images/auth_framework.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;客户端向服务发起请求前，需要从keystone获得token&lt;/li&gt;
&lt;li&gt;客户端通过携带用户名密码调用keystone的/v3/auth/tokens接口获得token&lt;/li&gt;
&lt;li&gt;客户端向服务发起的每次API请求都会在HTTP头携带该token，比如: X-Auth-Token: {token}&lt;/li&gt;
&lt;li&gt;后端服务向keystone验证该token，获得用户的身份信息，执行后续API的流程&lt;/li&gt;
&lt;li&gt;每个服务都有一个keystone注册的服务用户账号（user/password)，并且以admin角色加入system项目&lt;/li&gt;
&lt;li&gt;服务启动后，会向keystone发起认证，获得admin token&lt;/li&gt;
&lt;li&gt;用户通过API访问服务时，将在header携带token&lt;/li&gt;
&lt;li&gt;使用这个admin token访问keystone的token验证接口，验证这个token，获得用户的身份信息&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;model-dispatcher&#34;&gt;Model Dispatcher&lt;/h2&gt;

&lt;p&gt;把 REST API 和 Model 的方法进行一一映射&lt;/p&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;REST 请求&lt;/th&gt;
&lt;th&gt;Model 方法&lt;/th&gt;
&lt;th&gt;说明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;GET /&amp;lt;resources&amp;gt;&lt;/td&gt;
&lt;td&gt;AllowListItems&lt;/td&gt;
&lt;td&gt;List的权限判断&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;ListItemFilter&lt;/td&gt;
&lt;td&gt;过滤&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;GetCustomizeColumns&lt;/td&gt;
&lt;td&gt;获得扩展字段的信息&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;GET /&amp;lt;resources&amp;gt;/&amp;lt;res_id&amp;gt;&lt;/td&gt;
&lt;td&gt;AllowGetDetails&lt;/td&gt;
&lt;td&gt;Get 的权限判断&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;GetExtraDetails&lt;/td&gt;
&lt;td&gt;获取扩展字段的信息&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;GET /&amp;lt;resources&amp;gt;/&amp;lt;res_id&amp;gt;/&amp;lt;spec&amp;gt;&lt;/td&gt;
&lt;td&gt;AllowGetDetails&amp;lt;Spec&amp;gt;&lt;/td&gt;
&lt;td&gt;获取资源特定属性的权限判断&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;GetDetails&amp;lt;Spec&amp;gt;&lt;/td&gt;
&lt;td&gt;获取资源特定属性&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;POST /&amp;lt;resources&amp;gt;&lt;/td&gt;
&lt;td&gt;AllowCreateItem&lt;/td&gt;
&lt;td&gt;创建操作的鉴权&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;ValidateCreateData&lt;/td&gt;
&lt;td&gt;校验和处理创建的数据&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;CustomizeCreate&lt;/td&gt;
&lt;td&gt;自定义的创建操作&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;PostCreate&lt;/td&gt;
&lt;td&gt;创建后的hook&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;OnCreateComplete&lt;/td&gt;
&lt;td&gt;创建完成的hook&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;POST /&amp;lt;resources&amp;gt;/&amp;lt;res_id&amp;gt;/&amp;lt;action&amp;gt;&lt;/td&gt;
&lt;td&gt;AllowPerformAction&amp;lt;Action&amp;gt;&lt;/td&gt;
&lt;td&gt;某个资源执行特定操作的鉴权判断&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;Perform&amp;lt;Action&amp;gt;&lt;/td&gt;
&lt;td&gt;某个资源执行特定操作&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;PUT /&amp;lt;resources&amp;gt;/&amp;lt;res_id&amp;gt;&lt;/td&gt;
&lt;td&gt;AllowUpdateItem&lt;/td&gt;
&lt;td&gt;对指定资源更新操作的鉴权&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;ValidateUpdateData&lt;/td&gt;
&lt;td&gt;校验和处理更新操作的数据&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;PreUpdate&lt;/td&gt;
&lt;td&gt;自定义的创建操作&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;PostUpdate&lt;/td&gt;
&lt;td&gt;创建后的hook&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;DELETE /&amp;lt;resources&amp;gt;/&amp;lt;res_id&amp;gt;&lt;/td&gt;
&lt;td&gt;AllowDeleteItem&lt;/td&gt;
&lt;td&gt;删除指定资源的鉴权&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;CustomizeDelete&lt;/td&gt;
&lt;td&gt;自定义的删除操作&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;PreDelete&lt;/td&gt;
&lt;td&gt;删除前的hook&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;Delete&lt;/td&gt;
&lt;td&gt;执行删除操作&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;PostDelete&lt;/td&gt;
&lt;td&gt;删除后的hook&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;具体 restful 请求的绑定函数在: &lt;a href=&#34;https://github.com/yunionio/onecloud/blob/master/pkg/appsrv/dispatcher/dispatcher.go#L33&#34; target=&#34;_blank&#34;&gt;pkg/appsrv/dispatcher/dispatcher.go&lt;/a&gt; 文件中的 &lt;strong&gt;AddModelDispatcher&lt;/strong&gt; 函数。&lt;/p&gt;

&lt;h2 id=&#34;数据库-orm-模型&#34;&gt;数据库 ORM 模型&lt;/h2&gt;

&lt;p&gt;代码位于 &lt;a href=&#34;https://github.com/yunionio/onecloud/tree/master/pkg/cloudcommon/db&#34; target=&#34;_blank&#34;&gt;cloudcommon/db&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;接口

&lt;ul&gt;
&lt;li&gt;IModelManager: 对应资源在数据库里面的表&lt;/li&gt;
&lt;li&gt;IModel: 对应资源在数据库里面的单条数据&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;数据结构

&lt;ul&gt;
&lt;li&gt;SResourceBase: 基础资源

&lt;ul&gt;
&lt;li&gt;SStandaloneResourceBase: 基础设施的物理资源，没有具体ownerId的资源，如zone, host

&lt;ul&gt;
&lt;li&gt;SVirtualResourceBase: 虚拟资源，如虚拟机（guest)

&lt;ul&gt;
&lt;li&gt;SSharableVirtualResourceBase: 虚拟的可以共享的虚拟资源，如disk, network

&lt;ul&gt;
&lt;li&gt;SAdminSharableVirtualInfoBase: 管理配置用的可共享虚拟资源，如security group&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;SJointResourceBase: 联合数据类型，如虚拟网卡是虚拟机和网络的联合，虚拟磁盘挂在：虚拟机和虚拟磁盘的联合&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;举例&#34;&gt;举例&lt;/h3&gt;

&lt;p&gt;用虚拟机的 model 来举例，代码在: &lt;a href=&#34;https://github.com/yunionio/onecloud/blob/master/pkg/compute/models/guests.go&#34; target=&#34;_blank&#34;&gt;pkg/compute/models/guests.go&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;GuestManager 对应数据库里面的 guests_tbl，该对象嵌套 db.SVirtualResourceBaseManager 表示是虚拟资源的 Manager，这样会默认实现 db.IModelManager 接口，然后根据业务需要重写一些方法会比较方便。&lt;/p&gt;

&lt;p&gt;SGuest 对应 guests_tbl 数据库里面的每一行数据，由 GuestManager 管理，嵌套 db.SVirtualResourceBase 结构，默认就会有虚拟资源所需要的表结构，然后再定义一些虚拟机独有的属性比如 VcpuCount 表示 cpu 核数，VmemSize 表示内存大小。 在代码抽象后表示虚拟机实例，该对象会绑定对虚拟机具体的业务操作实现函数。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-golang&#34; data-lang=&#34;golang&#34;&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;yunion.io/x/onecloud/pkg/cloudcommon/db&amp;#34;&lt;/span&gt;

&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;......&lt;/span&gt;

&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;type&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;SGuestManager&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;struct&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
	&lt;span style=&#34;color:#000&#34;&gt;db&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;SVirtualResourceBaseManager&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;

&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;GuestManager&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;SGuestManager&lt;/span&gt;

&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;func&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;init&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
	&lt;span style=&#34;color:#000&#34;&gt;GuestManager&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;SGuestManager&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
		&lt;span style=&#34;color:#000&#34;&gt;SVirtualResourceBaseManager&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;db&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;NewVirtualResourceBaseManager&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;
			&lt;span style=&#34;color:#000&#34;&gt;SGuest&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{},&lt;/span&gt;
			&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;guests_tbl&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
			&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;server&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
			&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;servers&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
		&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;),&lt;/span&gt;
	&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
	&lt;span style=&#34;color:#000&#34;&gt;GuestManager&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;SetVirtualObject&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;GuestManager&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;
	&lt;span style=&#34;color:#000&#34;&gt;GuestManager&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;SetAlias&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;guest&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;guests&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;

&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;type&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;SGuest&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;struct&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
	&lt;span style=&#34;color:#000&#34;&gt;db&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;SVirtualResourceBase&lt;/span&gt;

	&lt;span style=&#34;color:#000&#34;&gt;db&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;SExternalizedResourceBase&lt;/span&gt;

	&lt;span style=&#34;color:#000&#34;&gt;SBillingResourceBase&lt;/span&gt;

	&lt;span style=&#34;color:#000&#34;&gt;VcpuCount&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;`nullable:&amp;#34;false&amp;#34; default:&amp;#34;1&amp;#34; list:&amp;#34;user&amp;#34; create:&amp;#34;optional&amp;#34;`&lt;/span&gt; &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;// Column(TINYINT, nullable=False, default=1)
&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&lt;/span&gt;	&lt;span style=&#34;color:#000&#34;&gt;VmemSize&lt;/span&gt;  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;`nullable:&amp;#34;false&amp;#34; list:&amp;#34;user&amp;#34; create:&amp;#34;required&amp;#34;`&lt;/span&gt;             &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;// Column(Integer, nullable=False)
&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&lt;/span&gt;
	&lt;span style=&#34;color:#000&#34;&gt;BootOrder&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;string&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;`width:&amp;#34;8&amp;#34; charset:&amp;#34;ascii&amp;#34; nullable:&amp;#34;true&amp;#34; default:&amp;#34;cdn&amp;#34; list:&amp;#34;user&amp;#34; update:&amp;#34;user&amp;#34; create:&amp;#34;optional&amp;#34;`&lt;/span&gt; &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;// Column(VARCHAR(8, charset=&amp;#39;ascii&amp;#39;), nullable=True, default=&amp;#39;cdn&amp;#39;)
&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&lt;/span&gt;
	&lt;span style=&#34;color:#000&#34;&gt;DisableDelete&lt;/span&gt;    &lt;span style=&#34;color:#000&#34;&gt;tristate&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;TriState&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;`nullable:&amp;#34;false&amp;#34; default:&amp;#34;true&amp;#34; list:&amp;#34;user&amp;#34; update:&amp;#34;user&amp;#34; create:&amp;#34;optional&amp;#34;`&lt;/span&gt;           &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;// Column(Boolean, nullable=False, default=True)
&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&lt;/span&gt;	&lt;span style=&#34;color:#000&#34;&gt;ShutdownBehavior&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;string&lt;/span&gt;            &lt;span style=&#34;color:#4e9a06&#34;&gt;`width:&amp;#34;16&amp;#34; charset:&amp;#34;ascii&amp;#34; default:&amp;#34;stop&amp;#34; list:&amp;#34;user&amp;#34; update:&amp;#34;user&amp;#34; create:&amp;#34;optional&amp;#34;`&lt;/span&gt; &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;// Column(VARCHAR(16, charset=&amp;#39;ascii&amp;#39;), default=SHUTDOWN_STOP)
&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&lt;/span&gt;
	&lt;span style=&#34;color:#000&#34;&gt;KeypairId&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;string&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;`width:&amp;#34;36&amp;#34; charset:&amp;#34;ascii&amp;#34; nullable:&amp;#34;true&amp;#34; list:&amp;#34;user&amp;#34; create:&amp;#34;optional&amp;#34;`&lt;/span&gt; &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;// Column(VARCHAR(36, charset=&amp;#39;ascii&amp;#39;), nullable=True)
&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&lt;/span&gt;
	&lt;span style=&#34;color:#000&#34;&gt;HostId&lt;/span&gt;       &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;string&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;`width:&amp;#34;36&amp;#34; charset:&amp;#34;ascii&amp;#34; nullable:&amp;#34;true&amp;#34; list:&amp;#34;admin&amp;#34; get:&amp;#34;admin&amp;#34; index:&amp;#34;true&amp;#34;`&lt;/span&gt; &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;// Column(VARCHAR(36, charset=&amp;#39;ascii&amp;#39;), nullable=True)
&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&lt;/span&gt;	&lt;span style=&#34;color:#000&#34;&gt;BackupHostId&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;string&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;`width:&amp;#34;36&amp;#34; charset:&amp;#34;ascii&amp;#34; nullable:&amp;#34;true&amp;#34; list:&amp;#34;user&amp;#34; get:&amp;#34;user&amp;#34;`&lt;/span&gt;

	&lt;span style=&#34;color:#000&#34;&gt;Vga&lt;/span&gt;     &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;string&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;`width:&amp;#34;36&amp;#34; charset:&amp;#34;ascii&amp;#34; nullable:&amp;#34;true&amp;#34; list:&amp;#34;user&amp;#34; update:&amp;#34;user&amp;#34; create:&amp;#34;optional&amp;#34;`&lt;/span&gt; &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;// Column(VARCHAR(36, charset=&amp;#39;ascii&amp;#39;), nullable=True)
&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&lt;/span&gt;	&lt;span style=&#34;color:#000&#34;&gt;Vdi&lt;/span&gt;     &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;string&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;`width:&amp;#34;36&amp;#34; charset:&amp;#34;ascii&amp;#34; nullable:&amp;#34;true&amp;#34; list:&amp;#34;user&amp;#34; update:&amp;#34;user&amp;#34; create:&amp;#34;optional&amp;#34;`&lt;/span&gt; &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;// Column(VARCHAR(36, charset=&amp;#39;ascii&amp;#39;), nullable=True)
&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&lt;/span&gt;	&lt;span style=&#34;color:#000&#34;&gt;Machine&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;string&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;`width:&amp;#34;36&amp;#34; charset:&amp;#34;ascii&amp;#34; nullable:&amp;#34;true&amp;#34; list:&amp;#34;user&amp;#34; update:&amp;#34;user&amp;#34; create:&amp;#34;optional&amp;#34;`&lt;/span&gt; &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;// Column(VARCHAR(36, charset=&amp;#39;ascii&amp;#39;), nullable=True)
&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&lt;/span&gt;	&lt;span style=&#34;color:#000&#34;&gt;Bios&lt;/span&gt;    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;string&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;`width:&amp;#34;36&amp;#34; charset:&amp;#34;ascii&amp;#34; nullable:&amp;#34;true&amp;#34; list:&amp;#34;user&amp;#34; update:&amp;#34;user&amp;#34; create:&amp;#34;optional&amp;#34;`&lt;/span&gt; &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;// Column(VARCHAR(36, charset=&amp;#39;ascii&amp;#39;), nullable=True)
&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&lt;/span&gt;	&lt;span style=&#34;color:#000&#34;&gt;OsType&lt;/span&gt;  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;string&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;`width:&amp;#34;36&amp;#34; charset:&amp;#34;ascii&amp;#34; nullable:&amp;#34;true&amp;#34; list:&amp;#34;user&amp;#34; update:&amp;#34;user&amp;#34; create:&amp;#34;optional&amp;#34;`&lt;/span&gt; &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;// Column(VARCHAR(36, charset=&amp;#39;ascii&amp;#39;), nullable=True)
&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&lt;/span&gt;
	&lt;span style=&#34;color:#000&#34;&gt;FlavorId&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;string&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;`width:&amp;#34;36&amp;#34; charset:&amp;#34;ascii&amp;#34; nullable:&amp;#34;true&amp;#34; list:&amp;#34;user&amp;#34; create:&amp;#34;optional&amp;#34;`&lt;/span&gt; &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;// Column(VARCHAR(36, charset=&amp;#39;ascii&amp;#39;), nullable=True)
&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&lt;/span&gt;
	&lt;span style=&#34;color:#000&#34;&gt;SecgrpId&lt;/span&gt;      &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;string&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;`width:&amp;#34;36&amp;#34; charset:&amp;#34;ascii&amp;#34; nullable:&amp;#34;true&amp;#34; get:&amp;#34;user&amp;#34; create:&amp;#34;optional&amp;#34;`&lt;/span&gt; &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;// Column(VARCHAR(36, charset=&amp;#39;ascii&amp;#39;), nullable=True)
&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&lt;/span&gt;	&lt;span style=&#34;color:#000&#34;&gt;AdminSecgrpId&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;string&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;`width:&amp;#34;36&amp;#34; charset:&amp;#34;ascii&amp;#34; nullable:&amp;#34;true&amp;#34; get:&amp;#34;admin&amp;#34;`&lt;/span&gt;                  &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;// Column(VARCHAR(36, charset=&amp;#39;ascii&amp;#39;), nullable=True)
&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&lt;/span&gt;
	&lt;span style=&#34;color:#000&#34;&gt;Hypervisor&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;string&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;`width:&amp;#34;16&amp;#34; charset:&amp;#34;ascii&amp;#34; nullable:&amp;#34;false&amp;#34; default:&amp;#34;kvm&amp;#34; list:&amp;#34;user&amp;#34; create:&amp;#34;required&amp;#34;`&lt;/span&gt; &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;// Column(VARCHAR(16, charset=&amp;#39;ascii&amp;#39;), nullable=False, default=HYPERVISOR_DEFAULT)
&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&lt;/span&gt;
	&lt;span style=&#34;color:#000&#34;&gt;InstanceType&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;string&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;`width:&amp;#34;64&amp;#34; charset:&amp;#34;ascii&amp;#34; nullable:&amp;#34;true&amp;#34; list:&amp;#34;user&amp;#34; create:&amp;#34;optional&amp;#34;`&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;......&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&#34;数据库锁&#34;&gt;数据库锁&lt;/h2&gt;

&lt;p&gt;代码位于 cloudcommon/db/lockman:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;LockClass/ReleaseClass: 锁住一类实例，一般创建资源时候需要锁&lt;/li&gt;
&lt;li&gt;LockObject/ReleaseObject: 锁住一个实例，一般修改资源实例是需要锁&lt;/li&gt;
&lt;li&gt;LockRawObject/RelaseRawObject: 通用的锁&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;举例-1&#34;&gt;举例&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/yunionio/onecloud/blob/master/pkg/cloudcommon/db/db_dispatcher.go#L900&#34; target=&#34;_blank&#34;&gt;pkg/cloudcommon/db/db_dispatcher.go&lt;/a&gt; 里面的 DoCreate 函数会创建对应 Model 的对象并插入数据到数据库，这个时候就需要加锁。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-golang&#34; data-lang=&#34;golang&#34;&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;func&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;DoCreate&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;manager&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;IModelManager&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;ctx&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;context&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;Context&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;userCred&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;mcclient&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;TokenCredential&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;query&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;jsonutils&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;JSONObject&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;data&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;jsonutils&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;JSONObject&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;ownerId&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;mcclient&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;IIdentityProvider&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;IModel&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;error&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color:#000&#34;&gt;lockman&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;LockClass&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;ctx&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;manager&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;GetLockClassKey&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;manager&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;ownerId&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;))&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;defer&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;lockman&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;ReleaseClass&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;ctx&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;manager&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;GetLockClassKey&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;manager&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;ownerId&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;))&lt;/span&gt;

    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;doCreateItem&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;manager&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;ctx&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;userCred&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;ownerId&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;nil&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;data&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&#34;worker队列管理&#34;&gt;worker队列管理&lt;/h2&gt;

&lt;p&gt;为了避免不可预期的并发度，所有异步执行的代码都应该在worker内执行，以便于管理并发度。&lt;/p&gt;

&lt;p&gt;代码位于 appsrv/workers.go&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-golang&#34; data-lang=&#34;golang&#34;&gt;&lt;span style=&#34;color:#000&#34;&gt;workerman&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:=&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;appsrv&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;NewWorkerManager&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;parallel_cnt&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#a40000&#34;&gt;…&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;
&lt;span style=&#34;color:#000&#34;&gt;workerman&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;Run&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;func&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;…&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;},&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;nil&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;nil&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&#34;task-机制&#34;&gt;Task 机制&lt;/h2&gt;

&lt;p&gt;云平台的异步耗时任务会放在 Task 机制里面去执行，比如创建虚拟机操作，用户提交了请求，region 控制器校验参数合格后，会记录数据到数据库，然后马上返回客户端对应的虚拟机记录，与此同时，会开始执行创建虚拟机的 task，这个 task 会立即在后台执行，会通过更新虚拟机 SGuest model 的状态和记录操作日志来表示执行的成功或失败。&lt;/p&gt;

&lt;p&gt;task 也是记录在数据库 tasks_tbl 里面的记录，对应的定义在: &lt;a href=&#34;https://github.com/yunionio/onecloud/blob/master/pkg/cloudcommon/db/taskman/tasks.go&#34; target=&#34;_blank&#34;&gt;pkg/cloudcommon/db/taskman/tasks.go&lt;/a&gt; 里面，数据结构如下:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-golang&#34; data-lang=&#34;golang&#34;&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;type&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;STaskManager&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;struct&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color:#000&#34;&gt;db&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;SResourceBaseManager&lt;/span&gt;
    
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;

&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;TaskManager&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;STaskManager&lt;/span&gt;

&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;func&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;init&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
&lt;span style=&#34;color:#000&#34;&gt;TaskManager&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;STaskManager&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
        &lt;span style=&#34;color:#000&#34;&gt;SResourceBaseManager&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;db&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;NewResourceBaseManager&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;STask&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{},&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;tasks_tbl&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;task&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;tasks&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
    &lt;span style=&#34;color:#000&#34;&gt;TaskManager&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;SetVirtualObject&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;TaskManager&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;
    
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;

&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;type&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;STask&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;struct&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color:#000&#34;&gt;db&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;SResourceBase&lt;/span&gt;

    &lt;span style=&#34;color:#000&#34;&gt;Id&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;string&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;`width:&amp;#34;36&amp;#34; charset:&amp;#34;ascii&amp;#34; primary:&amp;#34;true&amp;#34; list:&amp;#34;user&amp;#34;`&lt;/span&gt; &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;// Column(VARCHAR
&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;36&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;charset&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;ascii&lt;/span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;),&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;primary_key&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;True&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;default&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;get_uuid&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;

    &lt;span style=&#34;color:#000&#34;&gt;ObjName&lt;/span&gt;  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;string&lt;/span&gt;                   &lt;span style=&#34;color:#4e9a06&#34;&gt;`width:&amp;#34;128&amp;#34; charset:&amp;#34;utf8&amp;#34; nullable:&amp;#34;false&amp;#34; list
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;:&amp;#34;user&amp;#34;`&lt;/span&gt;               &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;//  Column(VARCHAR(128, charset=&amp;#39;utf8&amp;#39;), nullable=False)
&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#000&#34;&gt;ObjId&lt;/span&gt;    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;string&lt;/span&gt;                   &lt;span style=&#34;color:#4e9a06&#34;&gt;`width:&amp;#34;128&amp;#34; charset:&amp;#34;ascii&amp;#34; nullable:&amp;#34;false&amp;#34; lis
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;t:&amp;#34;user&amp;#34; index:&amp;#34;true&amp;#34;`&lt;/span&gt; &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;// Column(VARCHAR(ID_LENGTH, charset=&amp;#39;ascii&amp;#39;), nullable=False)
&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#000&#34;&gt;TaskName&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;string&lt;/span&gt;                   &lt;span style=&#34;color:#4e9a06&#34;&gt;`width:&amp;#34;64&amp;#34; charset:&amp;#34;ascii&amp;#34; nullable:&amp;#34;false&amp;#34; list
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;:&amp;#34;user&amp;#34;`&lt;/span&gt;               &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;// Column(VARCHAR(64, charset=&amp;#39;ascii&amp;#39;), nullable=False)
&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#000&#34;&gt;UserCred&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;mcclient&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;TokenCredential&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;`width:&amp;#34;1024&amp;#34; charset:&amp;#34;utf8&amp;#34; nullable:&amp;#34;false&amp;#34; get
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;:&amp;#34;user&amp;#34;`&lt;/span&gt;               &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;// Column(VARCHAR(1024, charset=&amp;#39;ascii&amp;#39;), nullable=False)
&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;// OwnerCred string `width:&amp;#34;512&amp;#34; charset:&amp;#34;ascii&amp;#34; nullable:&amp;#34;true&amp;#34;` // Column(VARCHAR
&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;512&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;charset&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;ascii&lt;/span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;),&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;nullable&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;True&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;
    &lt;span style=&#34;color:#000&#34;&gt;Params&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;jsonutils&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;JSONDict&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;`charset:&amp;#34;utf8&amp;#34; length:&amp;#34;medium&amp;#34; nullable:&amp;#34;false&amp;#34; get:&amp;#34;us
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;er&amp;#34;`&lt;/span&gt; &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;// Column(MEDIUMTEXT(charset=&amp;#39;ascii&amp;#39;), nullable=False)
&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&lt;/span&gt;
    &lt;span style=&#34;color:#000&#34;&gt;Stage&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;string&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;`width:&amp;#34;64&amp;#34; charset:&amp;#34;ascii&amp;#34; nullable:&amp;#34;false&amp;#34; default:&amp;#34;on_init&amp;#34; list:&amp;#34;u
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;ser&amp;#34;`&lt;/span&gt; &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;// Column(VARCHAR(64, charset=&amp;#39;ascii&amp;#39;), nullable=False, default=&amp;#39;on_init&amp;#39;)
&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&lt;/span&gt;
    &lt;span style=&#34;color:#000&#34;&gt;taskObject&lt;/span&gt;  &lt;span style=&#34;color:#000&#34;&gt;db&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;IStandaloneModel&lt;/span&gt;   &lt;span style=&#34;color:#4e9a06&#34;&gt;`ignore:&amp;#34;true&amp;#34;`&lt;/span&gt;
    &lt;span style=&#34;color:#000&#34;&gt;taskObjects&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[]&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;db&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;IStandaloneModel&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;`ignore:&amp;#34;true&amp;#34;`&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;......&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;Id: STask 里面的 Id 是该 task 记录的 Id&lt;/li&gt;
&lt;li&gt;ObjId: 对应资源对象的 Id，用于记录执行该 task 的对应操作的资源，比如某台虚拟机、磁盘的 Id&lt;/li&gt;
&lt;li&gt;UserCred: 存储执行 task 的用户信息&lt;/li&gt;
&lt;li&gt;Params: 执行 task 的参数&lt;/li&gt;
&lt;li&gt;TaskName: 对应 task 的名称&lt;/li&gt;
&lt;li&gt;Stage: task 执行的阶段，默认为 OnInit&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;举例-2&#34;&gt;举例&lt;/h3&gt;

&lt;p&gt;以虚拟机关机这个操作来举例:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;客户端发起 POST /servers/&amp;lt;server_id&amp;gt;/stop 请求后，通过服务框架会执行 &lt;code&gt;func (self *SGuest) PerformStop&lt;/code&gt; 函数，代码片段如下(位于: &lt;a href=&#34;https://github.com/yunionio/onecloud/blob/2003c44264f1a244f32fd0584e7ce0d23df78705/pkg/compute/models/guest_actions.go#L2357&#34; target=&#34;_blank&#34;&gt;pkg/compute/models/guest_actions.go&lt;/a&gt;):&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-golang&#34; data-lang=&#34;golang&#34;&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;func&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;self&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;SGuest&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;PerformStop&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;ctx&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;context&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;Context&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;userCred&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;mcclient&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;TokenCredential&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;query&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;jsonutils&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;JSONObject&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
	&lt;span style=&#34;color:#000&#34;&gt;data&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;jsonutils&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;JSONObject&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;jsonutils&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;JSONObject&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;error&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
	&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;// XXX if is force, force stop guest
&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&lt;/span&gt;	&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;isForce&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;jsonutils&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;QueryBoolean&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;data&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;is_force&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;false&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;
	&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;isForce&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;||&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;utils&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;IsInStringArray&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;self&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;Status&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[]&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;string&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;api&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;VM_RUNNING&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;api&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;VM_STOP_FAILED&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;})&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
		&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;nil&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;self&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;StartGuestStopTask&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;ctx&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;userCred&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;isForce&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;
	&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;else&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
		&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;nil&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;httperrors&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;NewInvalidStatusError&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;Cannot stop server in status %s&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;self&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;Status&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;
	&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;SGuest 会执行 self.StartGuestStopTask 函数，该函数会去调用虚拟机不同的 Driver 执行关机操作&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-golang&#34; data-lang=&#34;golang&#34;&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;// pkg/compute/models/guest_actions.go
&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;func&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;self&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;SGuest&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;StartGuestStopTask&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;ctx&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;context&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;Context&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;userCred&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;mcclient&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;TokenCredential&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;isForce&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;bool&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;parentTaskId&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;string&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;error&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
		&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;......&lt;/span&gt;
		&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;self&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;GetDriver&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;().&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;StartGuestStopTask&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;self&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;ctx&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;userCred&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;params&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;parentTaskId&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;

&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;// pkg/compute/guestdrivers/virtualization.go
&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;yunion.io/x/onecloud/pkg/cloudcommon/db/taskman&amp;#34;&lt;/span&gt;
&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;......&lt;/span&gt;
&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;func&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;self&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;SVirtualizedGuestDriver&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;StartGuestStopTask&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;guest&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;models&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;SGuest&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;ctx&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;context&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;Context&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;userCred&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;mcclient&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;TokenCredential&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;params&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;jsonutils&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;JSONDict&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;parentTaskId&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;string&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;error&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color:#000&#34;&gt;task&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;err&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:=&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;taskman&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;TaskManager&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;NewTask&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;ctx&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;GuestStopTask&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;guest&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;userCred&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;params&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;parentTaskId&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;nil&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;err&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;!=&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;nil&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
        &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;err&lt;/span&gt;
    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
    &lt;span style=&#34;color:#000&#34;&gt;task&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;ScheduleRun&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;nil&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;nil&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;......&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;taskman.TaskManager.NewTask(ctx, &amp;ldquo;GuestStopTask&amp;rdquo;, &amp;hellip;)&lt;/strong&gt; 这里面的 GuestStopTask 对应 &lt;a href=&#34;https://github.com/yunionio/onecloud/blob/master/pkg/compute/tasks/guest_stop_task.go&#34; target=&#34;_blank&#34;&gt;pkg/compute/tasks/guest_stop_task.go&lt;/a&gt; 里面的 GuestStopTask，是通过 taskman 里面维护的一个 map 查找的。&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;strong&gt;task.ScheduleRun(nil)&lt;/strong&gt; 会开始执行对应的 Task，默认会从 task 的默认 Stage OnInit 函数开始执行，所以通过 task 机制就会执行到 GuestStopTask.OnInit 函数。OnInit 函数最终会调用对应虚拟机的 driver 执行 RequestStopOnHost 函数并更新设置自己的 Stage 为 OnMasterStopTaskComplete。&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;对于虚拟机来说 RequestStopOnHost 函数会请求虚拟机所在的 host agent 关闭虚拟机，关机成功后会回调 region task 框架，该框架会根据 taskId 从数据库 load 回来 GuestStopTask，接着它设置的 Stage OnMasterStopTaskComplete 执行。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;



&lt;div class=&#34;alert alert-primary&#34; role=&#34;alert&#34;&gt;
&lt;h4 class=&#34;alert-heading&#34;&gt;提示&lt;/h4&gt;
&lt;blockquote&gt;
&lt;p&gt;这里失败会自动调用 OnGuestStopTaskCompleteFailed 函数，所以编写对应 task stage 函数时如果写 &amp;lt;OnSometingComplete&amp;gt; 函数时，必须也同时写 &amp;lt;OnSometingCompleteFailed&amp;gt; 函数来处理失败情况。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;如果成功关机，OnMasterStopTaskComplete 调用 OnGuestStopTaskComplete 函数，该函数会把虚拟机的状态设置为 ready，并记录一条关机操作日志；如果失败会调用 OnGuestStopTaskCompleteFailed 函数，该函数会虚拟机状态设置为关机失败，并记录失败的原因。&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-golang&#34; data-lang=&#34;golang&#34;&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;func&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;self&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;GuestStopTask&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;OnInit&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;ctx&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;context&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;Context&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;obj&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;db&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;IStandaloneModel&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;data&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;jsonutils&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;JSONObject&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color:#000&#34;&gt;guest&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:=&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;obj&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.(&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;models&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;SGuest&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;
    &lt;span style=&#34;color:#000&#34;&gt;db&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;OpsLog&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;LogEvent&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;guest&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;db&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;ACT_STOPPING&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;nil&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;self&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;UserCred&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;
    &lt;span style=&#34;color:#000&#34;&gt;self&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;stopGuest&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;ctx&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;guest&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;

&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;func&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;self&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;GuestStopTask&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;stopGuest&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;ctx&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;context&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;Context&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;guest&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;models&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;SGuest&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color:#000&#34;&gt;host&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:=&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;guest&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;GetHost&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;()&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;host&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;nil&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
        &lt;span style=&#34;color:#000&#34;&gt;self&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;OnGuestStopTaskCompleteFailed&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;ctx&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;guest&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;jsonutils&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;NewString&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;no associated host&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;))&lt;/span&gt;
        &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;return&lt;/span&gt;
    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;!&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;self&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;IsSubtask&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
        &lt;span style=&#34;color:#000&#34;&gt;guest&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;SetStatus&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;self&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;UserCred&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;api&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;VM_STOPPING&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;
    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
    &lt;span style=&#34;color:#000&#34;&gt;self&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;SetStage&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;OnMasterStopTaskComplete&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;nil&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;
    &lt;span style=&#34;color:#000&#34;&gt;err&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:=&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;guest&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;GetDriver&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;().&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;RequestStopOnHost&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;ctx&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;guest&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;host&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;self&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;
    &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;......&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;

&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;func&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;self&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;GuestStopTask&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;OnMasterStopTaskComplete&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;ctx&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;context&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;Context&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;guest&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;models&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;SGuest&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;data&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;jsonutils&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;JSONObject&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
      &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;......&lt;/span&gt;
      &lt;span style=&#34;color:#000&#34;&gt;self&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;OnGuestStopTaskComplete&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;ctx&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;guest&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;data&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;

&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;func&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;self&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;GuestStopTask&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;OnMasterStopTaskCompleteFailed&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;ctx&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;context&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;Context&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;obj&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;db&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;IStandaloneModel&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;reason&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;jsonutils&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;JSONObject&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color:#000&#34;&gt;guest&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:=&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;obj&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.(&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;models&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;SGuest&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;
    &lt;span style=&#34;color:#000&#34;&gt;self&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;OnGuestStopTaskCompleteFailed&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;ctx&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;guest&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;reason&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;

&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;func&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;self&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;GuestStopTask&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;OnGuestStopTaskComplete&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;ctx&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;context&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;Context&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;guest&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;models&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;SGuest&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;data&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;jsonutils&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;JSONObject&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;......&lt;/span&gt;
    &lt;span style=&#34;color:#000&#34;&gt;guest&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;SetStatus&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;self&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;UserCred&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;api&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;VM_READY&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;
    &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;......&lt;/span&gt;
    &lt;span style=&#34;color:#000&#34;&gt;logclient&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;AddActionLogWithStartable&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;self&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;guest&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;logclient&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;ACT_VM_STOP&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;self&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;Us&lt;/span&gt;
&lt;span style=&#34;color:#000&#34;&gt;erCred&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;true&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;

&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;func&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;self&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;GuestStopTask&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;OnGuestStopTaskCompleteFailed&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;ctx&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;context&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;Context&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;guest&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;models&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;SGuest&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;reason&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;jsonutils&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;JSONObject&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;......&lt;/span&gt;
    &lt;span style=&#34;color:#000&#34;&gt;db&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;OpsLog&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;LogEvent&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;guest&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;db&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;ACT_STOP_FAIL&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;reason&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;String&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(),&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;self&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;UserCred&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;
    &lt;span style=&#34;color:#000&#34;&gt;self&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;SetStageFailed&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;ctx&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;reason&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;String&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;())&lt;/span&gt;
    &lt;span style=&#34;color:#000&#34;&gt;logclient&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;AddActionLogWithStartable&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;self&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;guest&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;logclient&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;ACT_VM_STOP&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;reason&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;String&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(),&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;self&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;UserCred&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;false&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&#34;如何增加一个新的服务&#34;&gt;如何增加一个新的服务&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;在keystone注册一个服务启用用的账户&lt;/li&gt;
&lt;li&gt;在keystone注册service和endpoint&lt;/li&gt;
&lt;li&gt;参考 onecloud/pkg/logger实现服务代码&lt;/li&gt;
&lt;li&gt;为服务准备一个配置文件，包含以下基础信息&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;假设服务名为 svc，用户和密码为 svcuser, svcuserpassword，服务监听地址为: &lt;a href=&#34;http://localhost:8866&#34; target=&#34;_blank&#34;&gt;http://localhost:8866&lt;/a&gt;, region 为 LocalTest，对应操作如下:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 创建 service&lt;/span&gt;
$ climc service-create --enabled svc svc
&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 创建 endpoint，对应的 service 为 svc&lt;/span&gt;
$ climc endpoint-create svc LocalTest internal http://localhost:8866
&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 创建 user&lt;/span&gt;
$ climc user-create --password svcuserpassword --enabled svcuser
&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 把 user 加入 system 项目&lt;/span&gt;
$ climc project-add-user system svcuser admin&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;配置信息如下&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;region&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;LocalTest&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;port&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;8866&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;auth_url&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;https&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;//&amp;lt;keystone_url&amp;gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;35357&lt;/span&gt;/v3&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;admin_user&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;svcuser&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;admin_password&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;svcuserpassword&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;admin_tenant_name&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;system&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
      </description>
    </item>
    
    <item>
      <title>Docs: 添加 K8S 节点</title>
      <link>https://opensource.yunion.cn/docs/setup/components/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://opensource.yunion.cn/docs/setup/components/</guid>
      <description>
        
        
        

&lt;p&gt;部署完集群后，整个 kubernetes 集群只有一个节点，云联壹云 相关服务都运行在了该节点上，为了服务的高可用，我们可以继续添加节点到 kubernetes 集群。&lt;/p&gt;

&lt;h3 id=&#34;环境准备&#34;&gt;环境准备&lt;/h3&gt;

&lt;p&gt;参考 &lt;a href=&#34;https://opensource.yunion.cn/docs/setup/controlplane/#安装配置-docker&#34;&gt;&amp;ldquo;部署集群/环境准备&amp;rdquo;&lt;/a&gt; 的流程，安装好 docker 和 kubelet。&lt;/p&gt;

&lt;h3 id=&#34;获取加入集群-token&#34;&gt;获取加入集群 token&lt;/h3&gt;

&lt;p&gt;然后在控制节点使用 ocadm 拿到加入集群的 token，在待部署节点使用 ocadm 加入集群，操作如下:&lt;/p&gt;

&lt;p&gt;在&lt;strong&gt;控制节点&lt;/strong&gt;获取加入节点的 token&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;$ ocadm token list &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; grep bootstrap
4s4meb.xvgk2bwpmbospn3s   23h       &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;2019&lt;/span&gt;-07-10T15:41:10+08:00   authentication,signing   The default bootstrap token generated by &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;ocadm init&amp;#39;&lt;/span&gt;.   system:bootstrappers:kubeadm:default-node-token&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;div class=&#34;alert alert-primary&#34; role=&#34;alert&#34;&gt;
&lt;h4 class=&#34;alert-heading&#34;&gt;提示&lt;/h4&gt;
&lt;blockquote&gt;
&lt;p&gt;如果 token 过期了，可以在管理节点使用 &lt;code&gt;ocadm token create&lt;/code&gt; 创建新的 token 。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/div&gt;


&lt;h3 id=&#34;加入节点&#34;&gt;加入节点&lt;/h3&gt;

&lt;p&gt;加入已有 kubernetes 集群的节点有两种角色，&amp;rsquo;controlplane&amp;rsquo; 和 &amp;lsquo;node&amp;rsquo;。&lt;/p&gt;

&lt;p&gt;controlplane 角色的节点会运行 kube-apiserver、kube-controller-manager、kube-scheduler 和 etcd，加入 controlplane 节点的好处是让 kubernetes 控制相关服务和 etcd 变为高可用。&lt;/p&gt;

&lt;p&gt;node 角色的节点只会运行 kubelet，运行负载容器。&lt;/p&gt;

&lt;h4 id=&#34;加入-controlplane&#34;&gt;加入 controlplane&lt;/h4&gt;

&lt;p&gt;加入控制节点需要从已有的 kubernetes 集群下载证书，证书使用 certificate key 加密，通过以下方法获取 certificate-key&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;$ ocadm init phase upload-certs
&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;[&lt;/span&gt;upload-certs&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;]&lt;/span&gt; Storing the certificates in Secret &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;kubeadm-certs&amp;#34;&lt;/span&gt; in the &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;kube-system&amp;#34;&lt;/span&gt; Namespace
&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;[&lt;/span&gt;upload-certs&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;]&lt;/span&gt; Using certificate key:
afa5e18bacb3f50b424cbf815fce6d1bd916fe91b58ba467053dc6b460198c55&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 这里的 10.168.222.18 是控制节点的 ip，如果是高可用部署则为负载均衡器的 vip，请根据你的环境修改&lt;/span&gt;
$ ocadm join --control-plane &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;10&lt;/span&gt;.168.222.18:6443 &lt;span style=&#34;color:#4e9a06&#34;&gt;\
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&lt;/span&gt;  --token 4s4meb.xvgk2bwpmbospn3s &lt;span style=&#34;color:#4e9a06&#34;&gt;\
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&lt;/span&gt;  --certificate-key afa5e18bacb3f50b424cbf815fce6d1bd916fe91b58ba467053dc6b460198c55 &lt;span style=&#34;color:#4e9a06&#34;&gt;\
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&lt;/span&gt;  --discovery-token-unsafe-skip-ca-verification&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4 id=&#34;加入-node&#34;&gt;加入 node&lt;/h4&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 这里的 10.168.222.18 是控制节点的 ip，如果是高可用部署则为负载均衡器的 vip, 请根据你的环境修改&lt;/span&gt;
$ ocadm join &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;10&lt;/span&gt;.168.222.18:6443 &lt;span style=&#34;color:#4e9a06&#34;&gt;\
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&lt;/span&gt;  --token 4s4meb.xvgk2bwpmbospn3s &lt;span style=&#34;color:#4e9a06&#34;&gt;\
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&lt;/span&gt;  --discovery-token-unsafe-skip-ca-verification
...
This node has joined the cluster:
* Certificate signing request was sent to apiserver and a response was received.
* The Kubelet was informed of the new secure connection details.

Run &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;kubectl get nodes&amp;#39;&lt;/span&gt; on the control-plane to see this node join the cluster.&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
      </description>
    </item>
    
    <item>
      <title>Docs: 操作相关</title>
      <link>https://opensource.yunion.cn/docs/howto/baremetal/operator/</link>
      <pubDate>Fri, 19 Jul 2019 20:25:05 +0800</pubDate>
      
      <guid>https://opensource.yunion.cn/docs/howto/baremetal/operator/</guid>
      <description>
        
        
        

&lt;h3 id=&#34;查询物理机&#34;&gt;查询物理机&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# list baremetal 记录&lt;/span&gt;
climc host-list --baremetal &lt;span style=&#34;color:#204a87&#34;&gt;true&lt;/span&gt;

&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# list 已经安装系统的物理机&lt;/span&gt;
climc host-list --baremetal &lt;span style=&#34;color:#204a87&#34;&gt;true&lt;/span&gt; --occupied

&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# list 未安装系统的物理机&lt;/span&gt;
climc host-list --baremetal &lt;span style=&#34;color:#204a87&#34;&gt;true&lt;/span&gt; --empty

&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 查询物理机详情，包括硬件信息，机房信息&lt;/span&gt;
climc host-show &amp;lt;host_id&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;注册物理机&#34;&gt;注册物理机&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;climc host-create &amp;lt;host_id&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;重新准备物理机&#34;&gt;重新准备物理机&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;climc host-prepare &amp;lt;host_id&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;获取物理机登录信息&#34;&gt;获取物理机登录信息&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;climc host-logininfo &amp;lt;host_id&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;获取串口登录控制台&#34;&gt;获取串口登录控制台&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;climc webconsole-baremetal &amp;lt;host_id&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;开-关机&#34;&gt;开/关机&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;climc host-start/host-stop &amp;lt;host_id&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;进入-退出维护模式&#34;&gt;进入/退出维护模式&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;climc host-maintenance/host-unmaintenance &amp;lt;host_id&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;删除物理机&#34;&gt;删除物理机&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;climc host-delete &amp;lt;host_id&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;转换-回收宿主机&#34;&gt;转换/回收宿主机&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;climc host-convert-hypervisor
climc host-undo-convert &amp;lt;host_id&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&#34;裸金属服务器相关&#34;&gt;裸金属服务器相关&lt;/h2&gt;

&lt;h3 id=&#34;安装操作系统&#34;&gt;安装操作系统&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;climc server-create &lt;span style=&#34;color:#4e9a06&#34;&gt;\
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&lt;/span&gt;    --hypervisor baremetal &lt;span style=&#34;color:#4e9a06&#34;&gt;\ &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 指定 server 的类型为 baremetal&lt;/span&gt;
    --ncpu &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;24&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;\ &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 创建到 24 核 cpu 的物理机&lt;/span&gt;
    --raid-config &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;raid1:2:MegaRaid&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;\ &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 第1块盘，使用 MegaRaid 控制器上的(0-1)号两块物理盘做 raid1&lt;/span&gt;
    --raid-config &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;none:1&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;\ &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 第2块盘，使用 MegaRaid 控制器上的(2)号物理盘，不做 raid&lt;/span&gt;
    --raid-config &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;raid10:4:MegaRaid&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;\ &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 第3快盘, 使用 MegaRaid 控制器上的(3-6)号四块物理盘做raid10&lt;/span&gt;
    --disk CentOS-7.5.qcow2:100g &lt;span style=&#34;color:#4e9a06&#34;&gt;\ &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 系统盘使用 CentOS-7.5.qcow2 镜像作为操作系统，大小为 100g，使用第1块 raid1 的盘&lt;/span&gt;
    --disk &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;autoextend:ext4:/opt&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;\ &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 分区挂载到 /opt, 使用第1块 raid1 的盘，文件系统为 ext4, 大小为(第一块盘总大小 - 该盘其他分区的大小(100g))&lt;/span&gt;
    --disk &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;autoextend:xfs:/data-nonraid&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;\ &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 分区挂载到 /data-nonraid, 使用第2块没做 raid 的盘, 文件系统为 xfs，使用所有空间&lt;/span&gt;
    --disk &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;autoextend:ext4:/data-raid10&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;\ &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 分区挂载到 /data-raid10, 使用第3块 raid10 的盘，文件系统为 ext4, 使用所有空间&lt;/span&gt;
    &amp;lt;server_name&amp;gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;\ &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 裸金属服务器名称&lt;/span&gt;
    64g &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 创建到 64g 内存大小的物理机&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4 id=&#34;raid-配置和分区&#34;&gt;raid 配置和分区&lt;/h4&gt;

&lt;p&gt;调用 server-create 接口时通过 &amp;lsquo;&amp;ndash;raid-config&amp;rsquo; 传递参数来配置 raid，每个 raid-config 对应到操作系统可见的磁盘设备(/dev/sdx)。&lt;/p&gt;

&lt;p&gt;&amp;rsquo;&amp;ndash;disk&amp;rsquo; 参数对应不同磁盘上的分区，分区对应到磁盘的逻辑为: 分区按照顺序创建到第1块磁盘上，当 disk 设置 autoextend 参数后，表示接下来的 disk 分区会创建到下一个磁盘，以此类推。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;raid 配置 API 参数:&lt;/li&gt;
&lt;/ul&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Key&lt;/th&gt;
&lt;th&gt;Type&lt;/th&gt;
&lt;th&gt;value&lt;/th&gt;
&lt;th&gt;解释&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;type(磁盘类型)&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;rotate(机械盘), ssd(固态盘), hybrid(未知)&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;conf (raid)&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;none, raid0, raid1, raid5, raid10&lt;/td&gt;
&lt;td&gt;做raid几或者不做&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;count (磁盘数量)&lt;/td&gt;
&lt;td&gt;int&lt;/td&gt;
&lt;td&gt;e.g. 0, 2, 4&lt;/td&gt;
&lt;td&gt;小于等于物理机实际的盘数&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;range (磁盘范围)&lt;/td&gt;
&lt;td&gt;[]int&lt;/td&gt;
&lt;td&gt;e.g. [0,1,2,3], [4,7], [5,6]&lt;/td&gt;
&lt;td&gt;物理磁盘在控制器上的索引号&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;splits (切割物理盘)&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;(30%,20%,), (300g,100g,)&lt;/td&gt;
&lt;td&gt;做好 raid 的物理盘再切割为多块物理盘&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;adapter (控制器号)&lt;/td&gt;
&lt;td&gt;int&lt;/td&gt;
&lt;td&gt;0, 1&lt;/td&gt;
&lt;td&gt;对应driver的 Adapter 控制器&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;driver  (控制器名称)&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;MegaRaid,HPSARaid,Mpt2SAS,MarvelRaid,Linux,PCIE&lt;/td&gt;
&lt;td&gt;1台物理机上有多个控制器时用于选择盘&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;strip  (设置raid strip 大小)&lt;/td&gt;
&lt;td&gt;*int&lt;/td&gt;
&lt;td&gt;e.g. 64*1024&lt;/td&gt;
&lt;td&gt;设置strip size, 可选&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;ra&lt;/td&gt;
&lt;td&gt;*bool&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;设置读模式&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;wt&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;设置写模式&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;cachedbadbbu&lt;/td&gt;
&lt;td&gt;*bool&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;direct&lt;/td&gt;
&lt;td&gt;*bool&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;命令行格式:&lt;/p&gt;

&lt;p&gt;&amp;rsquo;(none,raid0,raid1,raid5,raid10):%d:(MegaRaid|HPSARaid|Mpt2SAS|MarvelRaid|Linux|PCIE):(rotate|ssd|hybrid):[0-n]:strip%dk:adapter%d:ra:nora:wt:wb:direct:cachedbadbbu:nocachedbadbbu&amp;rsquo;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;查询裸金属服务器&#34;&gt;查询裸金属服务器&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;climc server-list --hypervisor baremetal
climc server-show &amp;lt;server_id&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;重装操作系统&#34;&gt;重装操作系统&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;climc server-rebuild --image &amp;lt;image_id&amp;gt; &amp;lt;server_id&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;开-关机-1&#34;&gt;开/关机&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;climc server-start &amp;lt;server_id&amp;gt;
climc server-stop &amp;lt;server_id&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;删除裸金属服务器&#34;&gt;删除裸金属服务器&lt;/h3&gt;

&lt;p&gt;删除 server 裸金属服务器会销毁物理机上的操作系统和 raid 配置，对应的 baremetal 重新进入未分配状态&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;climc server-delete &amp;lt;server_id&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
      </description>
    </item>
    
    <item>
      <title>Docs: 查询镜像</title>
      <link>https://opensource.yunion.cn/docs/howto/image/query/</link>
      <pubDate>Fri, 19 Jul 2019 11:34:38 +0800</pubDate>
      
      <guid>https://opensource.yunion.cn/docs/howto/image/query/</guid>
      <description>
        
        
        

&lt;h2 id=&#34;列表&#34;&gt;列表&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 查询所有镜像列表&lt;/span&gt;
$ climc image-list

&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 查询所有缓存的镜像列表&lt;/span&gt;
$ climc cached-image-list

&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 查询包含 ubuntu 关键字的镜像&lt;/span&gt;
$ climc image-list --search ubuntu

&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 查询公有云包含 centos 关键字的缓存&lt;/span&gt;
$ climc cached-image-list --search centos --public-cloud

&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# image-list 支持的查询条件&lt;/span&gt;
$ climc &lt;span style=&#34;color:#204a87&#34;&gt;help&lt;/span&gt; image-list

&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# cached-image-list 支持的查询条件&lt;/span&gt;
$ climc &lt;span style=&#34;color:#204a87&#34;&gt;help&lt;/span&gt; cached-image-list&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&#34;详情&#34;&gt;详情&lt;/h2&gt;

&lt;p&gt;根据 image-list 可以获取镜像的列表，第1、2列包含镜像的 id 和 name，通过 id 或 name 可以获取镜像的详情。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 查询名称包含 CentOS 的镜像&lt;/span&gt;
$ climc image-list --search centos
+--------------------------------------+-----------------------------------------+-------------+-----------+-----------+-----------+-------------+----------+---------+--------+----------------------------------+----------------------------------+--------+----------------+
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt;                  ID                  &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt;                  Name                   &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; Disk_format &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt;   Size    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; Is_public &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; Protected &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; Is_Standard &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; Min_disk &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; Min_ram &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; Status &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt;             Checksum             &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt;            Tenant_Id             &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; Tenant &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; is_guest_image &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt;
+--------------------------------------+-----------------------------------------+-------------+-----------+-----------+-----------+-------------+----------+---------+--------+----------------------------------+----------------------------------+--------+----------------+
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; abf0fd6e-ec40-44ef-8fa2-cfb7187ea656 &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; CentOS-7-x86_64-GenericCloud-1711.qcow2 &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; qcow2       &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;876740608&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color:#204a87&#34;&gt;false&lt;/span&gt;     &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color:#204a87&#34;&gt;true&lt;/span&gt;      &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color:#204a87&#34;&gt;true&lt;/span&gt;        &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;8192&lt;/span&gt;     &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;0&lt;/span&gt;       &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; active &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; 317ecf7d1128e0e53cb285b8704dc3d3 &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; d53ea650bfe144da8ee8f3fba417b904 &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; system &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color:#204a87&#34;&gt;false&lt;/span&gt;          &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt;
+--------------------------------------+-----------------------------------------+-------------+-----------+-----------+-----------+-------------+----------+---------+--------+----------------------------------+----------------------------------+--------+----------------+
***  Total: &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1&lt;/span&gt; Pages: &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1&lt;/span&gt; Limit: &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;20&lt;/span&gt; Offset: &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;0&lt;/span&gt; Page: &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1&lt;/span&gt;  ***

&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 查看 CentOS-7-x86_64-GenericCloud-1711.qcow2 的详情&lt;/span&gt;
$ climc image-show CentOS-7-x86_64-GenericCloud-1711.qcow2
+--------------------+-------------------------------------------------------------------------------------------------------------------+
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt;       Field        &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt;                                                       Value                                                       &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt;
+--------------------+-------------------------------------------------------------------------------------------------------------------+
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; can_delete         &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color:#204a87&#34;&gt;false&lt;/span&gt;                                                                                                             &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; can_update         &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color:#204a87&#34;&gt;true&lt;/span&gt;                                                                                                              &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; checksum           &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; 317ecf7d1128e0e53cb285b8704dc3d3                                                                                  &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; created_at         &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;2020&lt;/span&gt;-06-16T09:17:57.000000Z                                                                                       &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; delete_fail_reason &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;error&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;class&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;ForbiddenError&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;code&amp;#34;&lt;/span&gt;:403,&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;data&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;id&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;image is protected&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;}&lt;/span&gt;,&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;details&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;image is protected&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;}}&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; disk_format        &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; qcow2                                                                                                             &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; domain_id          &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; default                                                                                                           &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; fast_hash          &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; 4c53ba2c464213ddc2a77c9b4c5ad3b7                                                                                  &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; id                 &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; abf0fd6e-ec40-44ef-8fa2-cfb7187ea656                                                                              &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; is_data            &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color:#204a87&#34;&gt;false&lt;/span&gt;                                                                                                             &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; is_emulated        &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color:#204a87&#34;&gt;false&lt;/span&gt;                                                                                                             &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; is_guest_image     &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color:#204a87&#34;&gt;false&lt;/span&gt;                                                                                                             &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; is_public          &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color:#204a87&#34;&gt;false&lt;/span&gt;                                                                                                             &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; is_standard        &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color:#204a87&#34;&gt;true&lt;/span&gt;                                                                                                              &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; is_system          &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color:#204a87&#34;&gt;false&lt;/span&gt;                                                                                                             &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; min_disk           &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;8192&lt;/span&gt;                                                                                                              &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; min_ram            &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;0&lt;/span&gt;                                                                                                                 &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; name               &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; CentOS-7-x86_64-GenericCloud-1711.qcow2                                                                           &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; oss_checksum       &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; 317ecf7d1128e0e53cb285b8704dc3d3                                                                                  &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; owner              &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; d53ea650bfe144da8ee8f3fba417b904                                                                                  &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; pending_deleted    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color:#204a87&#34;&gt;false&lt;/span&gt;                                                                                                             &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; project_domain     &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; Default                                                                                                           &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; project_src        &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color:#204a87&#34;&gt;local&lt;/span&gt;                                                                                                             &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; properties         &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;os_arch&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;x86_64&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;os_type&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;Linux&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;}&lt;/span&gt;                                                                            &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; protected          &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color:#204a87&#34;&gt;true&lt;/span&gt;                                                                                                              &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; public_scope       &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; system                                                                                                            &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; size               &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;876740608&lt;/span&gt;                                                                                                         &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; status             &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; active                                                                                                            &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; tenant             &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; system                                                                                                            &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; tenant_id          &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; d53ea650bfe144da8ee8f3fba417b904                                                                                  &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; update_version     &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;8&lt;/span&gt;                                                                                                                 &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; updated_at         &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;2020&lt;/span&gt;-06-16T09:19:24.000000Z                                                                                       &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt;
+--------------------+-------------------------------------------------------------------------------------------------------------------+&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
      </description>
    </item>
    
    <item>
      <title>Docs: 制作镜像</title>
      <link>https://opensource.yunion.cn/docs/howto/image/create/</link>
      <pubDate>Fri, 19 Jul 2019 11:12:40 +0800</pubDate>
      
      <guid>https://opensource.yunion.cn/docs/howto/image/create/</guid>
      <description>
        
        
        &lt;p&gt;你可能需要自己定制发行版的镜像，用于给不同的业务使用。本文介绍如何制作镜像。&lt;/p&gt;

&lt;p&gt;可以通过下载发行版操作系统的 iso , 然后本地启动虚拟机，将 iso 安装到虚拟机的磁盘，然后保存该磁盘，这个磁盘就可以作为镜像上传到 glance，但是这种方法人工参与的步骤太多，容易出错。&lt;/p&gt;

&lt;p&gt;推荐使用 &lt;a href=&#34;https://www.packer.io/intro/getting-started/install.html&#34; target=&#34;_blank&#34;&gt;packer&lt;/a&gt; 这个工具来自动化制作镜像，详细操作可以参考对应的文档 &lt;a href=&#34;https://www.packer.io/docs/index.html&#34; target=&#34;_blank&#34;&gt;https://www.packer.io/docs/index.html&lt;/a&gt; 。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/yunionio/service-images&#34; target=&#34;_blank&#34;&gt;https://github.com/yunionio/service-images&lt;/a&gt; 仓库包含了一些我们使用 packer 制作镜像的配置，可以参考使用。&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: 添加计算节点</title>
      <link>https://opensource.yunion.cn/docs/setup/host/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://opensource.yunion.cn/docs/setup/host/</guid>
      <description>
        
        
        

&lt;p&gt;如果需要构建内部私有云，就需要部署计算节点(宿主机)。计算节点主要负责虚拟机、网络和存储的管理，需要安装的组件如下:&lt;/p&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;center&#34;&gt;组件&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;用途&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;安装方式&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;运行方式&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;host&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;管理 kvm 虚拟机和存储&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;-&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;docker&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;host-deployer&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;虚拟机部署服务&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;-&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;docker&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;sdnagent&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;管理虚拟机网络和安全组&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;-&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;docker&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;openvswitch&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;虚拟机网络端口和流表配置&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;rpm&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;systemd&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;qemu&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;运行虚拟机&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;rpm&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;process&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;kernel&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;云联壹云 提供的内核&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;rpm&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;-&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&#34;环境&#34;&gt;环境&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;操作系统: Centos 7.x&lt;/li&gt;
&lt;li&gt;硬件要求:

&lt;ul&gt;
&lt;li&gt;Virtualization: CPU 要支持虚拟化，用于虚拟机 KVM 加速&lt;/li&gt;
&lt;li&gt;打开 iommu，VT-d: 用于 GPU 透传(不用GPU可以不开)&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;网络:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;当前可用的网段: 虚拟机可以直接使用和计算节点所在的扁平网段，需要预先划分保留对应端给云平台虚拟机使用，防止被其它设备占用，最后 IP 冲突&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;备注:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;如果是以测试为目的，可以拿一台虚拟机部署计算节点的服务，但可能无法使用 KVM 加速和 GPU 透传&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;安装依赖&#34;&gt;安装依赖&lt;/h2&gt;

&lt;p&gt;计算节点所需的依赖以 rpm 的方式安装&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 添加 yum 源&lt;/span&gt;
$ cat &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;lt;&amp;lt;EOF &amp;gt;/etc/yum.repos.d/yunion.repo
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;[yunion]
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;name=Packages for Yunion Multi-Cloud Platform
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;baseurl=https://iso.yunion.cn/yumrepo-3.4
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;sslverify=0
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;failovermethod=priority
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;enabled=1
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;gpgcheck=0
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;EOF&lt;/span&gt;

&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 禁用防火墙和selinux&lt;/span&gt;
$ systemctl disable firewalld
$ sed -i &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;s/SELINUX=enforcing/SELINUX=disabled/g&amp;#39;&lt;/span&gt; /etc/selinux/config&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;安装 rpm 包&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;$ yum --disablerepo&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;*&amp;#39;&lt;/span&gt; --enablerepo&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;yunion*&amp;#39;&lt;/span&gt; install -y &lt;span style=&#34;color:#4e9a06&#34;&gt;\
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&lt;/span&gt;  epel-release libaio jq libusb lvm2 nc ntp fetchclient fuse fuse-devel fuse-libs &lt;span style=&#34;color:#4e9a06&#34;&gt;\
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&lt;/span&gt;  oniguruma pciutils spice spice-protocol sysstat tcpdump usbredir &lt;span style=&#34;color:#4e9a06&#34;&gt;\
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&lt;/span&gt;  yunion-qemu-2.12.1 yunion-executor-server &lt;span style=&#34;color:#4e9a06&#34;&gt;\
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&lt;/span&gt;  kernel-3.10.0-1062.4.3.el7.yn20191203 &lt;span style=&#34;color:#4e9a06&#34;&gt;\
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&lt;/span&gt;  kernel-devel-3.10.0-1062.4.3.el7.yn20191203 &lt;span style=&#34;color:#4e9a06&#34;&gt;\
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&lt;/span&gt;  kernel-headers-3.10.0-1062.4.3.el7.yn20191203 &lt;span style=&#34;color:#4e9a06&#34;&gt;\
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&lt;/span&gt;  kmod-openvswitch &lt;span style=&#34;color:#4e9a06&#34;&gt;\
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&lt;/span&gt;  openvswitch net-tools

$ systemctl &lt;span style=&#34;color:#204a87&#34;&gt;enable&lt;/span&gt; --now yunion-executor

&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 安装完成后需要重启进入我们的内核&lt;/span&gt;
$ reboot

&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 重启完成后，查看当前节点内核信息，确保为 yn 内核&lt;/span&gt;
$ uname -r
&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;3&lt;/span&gt;.10.0-1062.4.3.el7.yn20191203.x86_64&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;安装-docker-和-kubelet&#34;&gt;安装 docker 和 kubelet&lt;/h3&gt;

&lt;p&gt;参考 &lt;a href=&#34;https://opensource.yunion.cn/docs/setup/controlplane/#安装配置-docker&#34;&gt;&amp;ldquo;部署集群/环境准备&amp;rdquo;&lt;/a&gt; 的流程，安装好 docker 和 kubelet。&lt;/p&gt;

&lt;h4 id=&#34;安装配置-docker&#34;&gt;安装配置 docker&lt;/h4&gt;

&lt;p&gt;安装 docker&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;$ yum install -y yum-utils bash-completion
&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 添加 yunion 云联壹云 rpm 源&lt;/span&gt;
$ yum-config-manager --add-repo https://iso.yunion.cn/yumrepo-3.4/yunion.repo
$ yum install -y docker-ce-19.03.9 docker-ce-cli-19.03.9 containerd.io&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;配置 docker&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;$ mkdir -p /etc/docker
$ cat &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;lt;&amp;lt;EOF &amp;gt;/etc/docker/daemon.json
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;{
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;  &amp;#34;bridge&amp;#34;: &amp;#34;none&amp;#34;,
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;  &amp;#34;iptables&amp;#34;: false,
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;  &amp;#34;exec-opts&amp;#34;:
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;    [
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;      &amp;#34;native.cgroupdriver=systemd&amp;#34;
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;    ],
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;  &amp;#34;data-root&amp;#34;: &amp;#34;/opt/docker&amp;#34;,
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;  &amp;#34;live-restore&amp;#34;: true,
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;  &amp;#34;log-driver&amp;#34;: &amp;#34;json-file&amp;#34;,
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;  &amp;#34;log-opts&amp;#34;:
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;    {
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;      &amp;#34;max-size&amp;#34;: &amp;#34;100m&amp;#34;
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;    },
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;  &amp;#34;registry-mirrors&amp;#34;:
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;    [
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;      &amp;#34;https://lje6zxpk.mirror.aliyuncs.com&amp;#34;,
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;      &amp;#34;https://lms7sxqp.mirror.aliyuncs.com&amp;#34;,
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;      &amp;#34;https://registry.docker-cn.com&amp;#34;
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;    ]
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;}
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;EOF&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;启动 docker&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;$ systemctl &lt;span style=&#34;color:#204a87&#34;&gt;enable&lt;/span&gt; --now docker&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4 id=&#34;安装配置-kubelet&#34;&gt;安装配置 kubelet&lt;/h4&gt;

&lt;p&gt;从 云联壹云 rpm 的 yum 源安装 kubernetes 1.15.8，并设置 kubelet 开机自启动&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;$ yum install -y bridge-utils ipvsadm conntrack-tools &lt;span style=&#34;color:#4e9a06&#34;&gt;\
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&lt;/span&gt;    jq kubelet-1.15.8-0 kubectl-1.15.8-0 kubeadm-1.15.8-0
$ &lt;span style=&#34;color:#204a87&#34;&gt;echo&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;source &amp;lt;(kubectl completion bash)&amp;#39;&lt;/span&gt; &amp;gt;&amp;gt; ~/.bashrc &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span style=&#34;color:#204a87&#34;&gt;source&lt;/span&gt; ~/.bashrc
$ &lt;span style=&#34;color:#204a87&#34;&gt;source&lt;/span&gt; /etc/profile
$ systemctl &lt;span style=&#34;color:#204a87&#34;&gt;enable&lt;/span&gt; kubelet&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;安装完 kubernetes 相关的二进制后，还需要对系统做一些配置并启用 ipvs 作为 kube-proxy 内部的 service 负载均衡&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 禁用 swap&lt;/span&gt;
$ swapoff -a
&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 如果设置了自动挂载 swap，需要去 /etc/fstab 里面注释掉挂载 swap 那一行&lt;/span&gt;

&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 关闭 selinux&lt;/span&gt;
$ setenforce  &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;0&lt;/span&gt;
$ sed -i &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;s/SELINUX=enforcing/SELINUX=disabled/&amp;#39;&lt;/span&gt; /etc/selinux/config

&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 禁用 firewalld&lt;/span&gt;
$ systemctl stop firewalld
$ systemctl disable firewalld

&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 禁用 NetworkManager&lt;/span&gt;
$ systemctl stop NetworkManager
$ systemctl disable NetworkManager
$ ps -ef&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt;grep dhcp &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; awk &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;{print $2}&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt;xargs &lt;span style=&#34;color:#204a87&#34;&gt;kill&lt;/span&gt; -9
 
&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 做一些 sysctl 的配置, kubernetes 要求&lt;/span&gt;
$ modprobe br_netfilter

$ cat &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;lt;&amp;lt;EOF &amp;gt;&amp;gt; /etc/sysctl.conf
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;net.bridge.bridge-nf-call-iptables=1
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;net.bridge.bridge-nf-call-ip6tables=1
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;net.ipv4.ip_forward=1
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;EOF&lt;/span&gt;

$ sysctl -p

&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 配置并开启 ipvs&lt;/span&gt;
$ cat &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;lt;&amp;lt;EOF &amp;gt; /etc/sysconfig/modules/ipvs.modules
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;#!/bin/bash
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;ipvs_modules=&amp;#34;ip_vs ip_vs_lc ip_vs_wlc ip_vs_rr ip_vs_wrr ip_vs_lblc ip_vs_lblcr ip_vs_dh ip_vs_sh ip_vs_fo ip_vs_nq ip_vs_sed ip_vs_ftp nf_conntrack_ipv4&amp;#34;
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;for kernel_module in \${ipvs_modules}; do
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;    /sbin/modinfo -F filename \${kernel_module} &amp;gt; /dev/null 2&amp;gt;&amp;amp;1
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;    if [ $? -eq 0 ]; then
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;        /sbin/modprobe \${kernel_module}
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;    fi
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;done
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;EOF&lt;/span&gt;

$ chmod &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;755&lt;/span&gt; /etc/sysconfig/modules/ipvs.modules &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; bash /etc/sysconfig/modules/ipvs.modules &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; lsmod &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; grep ip_vs&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&#34;控制节点操作&#34;&gt;控制节点操作&lt;/h2&gt;

&lt;p&gt;以下操作在控制节点进行。&lt;/p&gt;

&lt;h3 id=&#34;创建计算节点所在的网段&#34;&gt;创建计算节点所在的网段&lt;/h3&gt;

&lt;p&gt;我的环境&lt;strong&gt;计算节点&lt;/strong&gt;的 ip 为 10.168.222.140，就创建一个对应的 &lt;strong&gt;计算节点(host)网段&lt;/strong&gt;。&lt;/p&gt;



&lt;div class=&#34;alert alert-primary&#34; role=&#34;alert&#34;&gt;
&lt;h4 class=&#34;alert-heading&#34;&gt;提示&lt;/h4&gt;
需要根据自己的计算节点环境创建对应的网段，如果不创建该网段，计算节点就没法注册进来。
&lt;/div&gt;

&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 查看当前环境的 zone&lt;/span&gt;
$ climc zone-list
+--------------------------------------+-------+--------+----------------+
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; ID                                   &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; Name  &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; Status &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; Cloudregion_ID &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt;
+--------------------------------------+-------+--------+----------------+
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; f73a2120-1206-45fa-8d43-de374ab0f494 &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; zone0 &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color:#204a87&#34;&gt;enable&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; default        &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt;
+--------------------------------------+-------+--------+----------------+

&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 在 zone0 里面创建一个 wire bcast0，该资源抽象计算节点所在的二层广播域信息&lt;/span&gt;
$ climc wire-create zone0 bcast0 &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1000&lt;/span&gt;

&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 在 wire bcast0 之上创建一个计算节点的网络，计算节点的 host 服务注册会用到，如果 host 注册时没有在云平台找到对应的网络，将会注册失败&lt;/span&gt;
$ climc network-create --gateway &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;10&lt;/span&gt;.168.222.1 --server-type baremetal bcast0 adm0 &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;10&lt;/span&gt;.168.222.140 &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;10&lt;/span&gt;.168.222.140 &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;24&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&#34;计算节点-host-操作&#34;&gt;计算节点(host)操作&lt;/h2&gt;

&lt;p&gt;以下操作在计算节点进行，计算节点也叫 host，私有云计算节点上面会运行 host 服务来管理 kvm 虚拟机。&lt;/p&gt;

&lt;h3 id=&#34;配置-host-服务&#34;&gt;配置 host 服务&lt;/h3&gt;

&lt;p&gt;参考 &lt;a href=&#34;https://opensource.yunion.cn/docs/setup/components/#获取加入集群-token&#34;&gt;&amp;ldquo;添加节点/获取加入集群token&amp;rdquo;&lt;/a&gt; 的流程获取join所需的信息&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 使用 ocadm join 来创建一台计算节点&lt;/span&gt;
&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 可选参数 --host-networks: 配置host服务的网络，比如: &amp;#39;eth0/br0/10.168.222.140&amp;#39;, eth0是物理网卡，br0是网桥名称，10.168.222.140是宿主机的ip&lt;/span&gt;
&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 获取计算节点 IP&lt;/span&gt;
$ &lt;span style=&#34;color:#000&#34;&gt;host_addr&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;$(&lt;/span&gt;ip route get &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; awk &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;{print $NF;exit}&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;)&lt;/span&gt;
$ &lt;span style=&#34;color:#204a87&#34;&gt;echo&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;$host_addr&lt;/span&gt;
&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;10&lt;/span&gt;.168.222.140

&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 可选参数 --host-local-image-path: 配置host服务磁盘的存储路径，比如: &amp;#39;/opt/cloud/workspace/disks&amp;#39;&lt;/span&gt;
&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 注意：容器部署的host服务只会挂载/opt/cloud目录&lt;/span&gt;
&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 如果有其他挂载点需要bind mount到/opt/cloud下，可在fstab中添加一行如&amp;#39;/src /opt/cloud/dst none defaults,bind 0 0&amp;#39;&lt;/span&gt;
&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 可选参数 --host-hostname: 配置宿主机的hostname, 比如: &amp;#39;node1&amp;#39;&lt;/span&gt;
$ ./ocadm join &lt;span style=&#34;color:#000&#34;&gt;$api_server_addr&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;\
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&lt;/span&gt;    --enable-host-agent &lt;span style=&#34;color:#4e9a06&#34;&gt;\
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&lt;/span&gt;    --token &lt;span style=&#34;color:#000&#34;&gt;$token&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;\
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&lt;/span&gt;    --discovery-token-unsafe-skip-ca-verification

&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 然后等待宿主机上的host pod和host-deployer pod为running状态&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&#34;控制节点启用-host&#34;&gt;控制节点启用 host&lt;/h2&gt;

&lt;p&gt;回到控制节点，启用刚才上报的计算节点，只有启用的宿主机才能运行虚拟机。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 使用 climc 查看注册的 host 列表&lt;/span&gt;
$ climc host-list
+--------------------------------------+-------------------------+-------------------+----------------+----------------------------+---------+---------+-------------+----------+-----------+------------+---------------+--------------+------------+-------------------------+--------------+
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt;                  ID                  &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt;          Name           &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt;    Access_mac     &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt;   Access_ip    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt;        Manager_URI         &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; Status  &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; enabled &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; host_status &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; mem_size &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; cpu_count &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; node_count &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt;      sn       &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; storage_type &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; host_type  &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt;         version         &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; storage_size &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt;
+--------------------------------------+-------------------------+-------------------+----------------+----------------------------+---------+---------+-------------+----------+-----------+------------+---------------+--------------+------------+-------------------------+--------------+
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; 3830870e-a499-459d-89df-bb6979b5e1ff &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; lzx-allinone-standalone &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;00&lt;/span&gt;:22:39:4c:6c:e9 &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;10&lt;/span&gt;.168.222.140 &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; http://10.168.222.140:8885 &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; running &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color:#204a87&#34;&gt;false&lt;/span&gt;   &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; online      &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;8192&lt;/span&gt;     &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;4&lt;/span&gt;         &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1&lt;/span&gt;          &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; Not Specified &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; rotate       &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; hypervisor &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; master&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;(&lt;/span&gt;7ab047419092301&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;50141&lt;/span&gt;        &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt;
+--------------------------------------+-------------------------+-------------------+----------------+----------------------------+---------+---------+-------------+----------+-----------+------------+---------------+--------------+------------+-------------------------+--------------+
***  Total: &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;0&lt;/span&gt; Pages: &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;0&lt;/span&gt; Limit: &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;20&lt;/span&gt; Offset: &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;0&lt;/span&gt; Page: &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1&lt;/span&gt;  ***

&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 启动 host&lt;/span&gt;
$ climc host-enable lzx-allinone-standalone&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&#34;创建虚拟机测试&#34;&gt;创建虚拟机测试&lt;/h2&gt;

&lt;h3 id=&#34;上传-cirrors-测试镜像&#34;&gt;上传 cirrors 测试镜像&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 下载 cirros 测试镜像&lt;/span&gt;
$ wget https://iso.yunion.cn/yumrepo-2.10/images/cirros-0.4.0-x86_64-disk.qcow2

&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 将镜像上传到 glance&lt;/span&gt;
$ climc image-upload --format qcow2 --os-type Linux --min-disk &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;10240&lt;/span&gt; cirros-0.4.0-x86_64-disk.qcow2 ./cirros-0.4.0-x86_64-disk.qcow2

&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 查看上传的镜像&lt;/span&gt;
$ climc image-list
+--------------------------------------+--------------------------------+-------------+----------+-----------+----------+---------+--------+----------------------------------+
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt;                  ID                  &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt;              Name              &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; Disk_format &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt;   Size   &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; Is_public &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; Min_disk &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; Min_ram &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; Status &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt;             Checksum             &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt;
+--------------------------------------+--------------------------------+-------------+----------+-----------+----------+---------+--------+----------------------------------+
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; 63f6f2af-4db2-4e30-85f5-0ad3baa27bd9 &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; cirros-0.4.0-x86_64-disk.qcow2 &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; qcow2       &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;22806528&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color:#204a87&#34;&gt;false&lt;/span&gt;     &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;30720&lt;/span&gt;    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;0&lt;/span&gt;       &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; active &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; 76dc07d1a730a92d0db7fb2d3c305ecd &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt;
+--------------------------------------+--------------------------------+-------------+----------+-----------+----------+---------+--------+----------------------------------+

&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 如果使用虚拟机作为计算节点，存储可能不大，可以把镜像的默认大小30g调整到10g&lt;/span&gt;
$ climc image-update --min-disk &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;10240&lt;/span&gt; cirros-0.4.0-x86_64-disk.qcow2&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;创建测试网络&#34;&gt;创建测试网络&lt;/h3&gt;

&lt;p&gt;下面是随机创建了一个主机间不可达的网络用于测试，如果有划分好的扁平二层可用网络，可以直接拿来给虚拟机使用。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;$ climc network-create --gateway &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;10&lt;/span&gt;.20.30.1 --server-type guest bcast0 vnet0 &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;10&lt;/span&gt;.20.30.2 &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;10&lt;/span&gt;.20.30.254 &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;24&lt;/span&gt;
$ climc network-public vnet0&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;创建虚拟机&#34;&gt;创建虚拟机&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 创建虚拟机 testvm01，512M内存, 1个CPU, 系统盘 10g, 第二块磁盘 5g 格式化为 ext4 并挂载到 /opt 的虚拟机&lt;/span&gt;
$ climc server-create  --auto-start --allow-delete &lt;span style=&#34;color:#4e9a06&#34;&gt;\
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&lt;/span&gt;		--disk cirros-0.4.0-x86_64-disk.qcow2:10g --disk 5g:ext4:/opt &lt;span style=&#34;color:#4e9a06&#34;&gt;\
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&lt;/span&gt;		--net vnet0 --ncpu &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1&lt;/span&gt; --mem-spec 512M testvm01

&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 查看创建的虚拟机，1分钟后应该会变为 running 状态&lt;/span&gt;
$ climc server-list --details
+--------------------------------------+----------+--------------+--------------+-------+---------+------------+-----------+----------+-----------------------------+------------+---------+-------------------------+--------+-----------+
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt;                  ID                  &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt;   Name   &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; Billing_type &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt;     IPs      &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; Disk  &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; Status  &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; vcpu_count &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; vmem_size &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; Secgroup &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt;         Created_at          &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; Hypervisor &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; os_type &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt;          Host           &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; Tenant &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; is_system &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt;
+--------------------------------------+----------+--------------+--------------+-------+---------+------------+-----------+----------+-----------------------------+------------+---------+-------------------------+--------+-----------+
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; bcda7d18-decc-4b5f-8654-2d201a84d1fb &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; testvm01 &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; postpaid     &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;10&lt;/span&gt;.20.30.254 &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;35840&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; running &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1&lt;/span&gt;          &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;512&lt;/span&gt;       &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; Default  &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;2019&lt;/span&gt;-09-23T05:08:49.000000Z &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; kvm        &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; Linux   &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; lzx-allinone-standalone &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; system &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color:#204a87&#34;&gt;false&lt;/span&gt;     &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt;
+--------------------------------------+----------+--------------+--------------+-------+---------+------------+-----------+----------+-----------------------------+------------+---------+-------------------------+--------+-----------+
***  Total: &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;0&lt;/span&gt; Pages: &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;0&lt;/span&gt; Limit: &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;20&lt;/span&gt; Offset: &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;0&lt;/span&gt; Page: &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1&lt;/span&gt;  ***

&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 获取虚拟机登录信息&lt;/span&gt;
$ climc server-logininfo testvm01
+-----------+------------------------------------------+
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt;   Field   &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt;                  Value                   &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt;
+-----------+------------------------------------------+
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; login_key &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;49wqh5OWGW3jSr1A8RfrMoH69iRRECzaMZITBA&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; password  &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; zS27FwwUFr96                             &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; updated   &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;2019&lt;/span&gt;-09-23T05:11:29.306403Z              &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; username  &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; root                                     &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt;
+-----------+------------------------------------------+

&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 在计算节点联通测试网络(如果你是直接用的二层网络，应该能直接 ping 通虚拟机的 ip 了，不需要做这一步)&lt;/span&gt;
$ ip address add &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;10&lt;/span&gt;.20.30.1/24 dev br0

&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 用之前 server-logininfo 命令获取的用户名密码，直接登录到虚拟机里面&lt;/span&gt;
$ ssh root@10.20.30.254
PING &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;10&lt;/span&gt;.20.30.254 &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;10&lt;/span&gt;.20.30.254&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;56&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;84&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;)&lt;/span&gt; bytes of data.
&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;64&lt;/span&gt; bytes from &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;10&lt;/span&gt;.20.30.254: &lt;span style=&#34;color:#000&#34;&gt;icmp_seq&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;ttl&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;64&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;time&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1&lt;/span&gt;.31 ms

&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 如果网络不通，也可以通过 vnc 的方式打开虚拟机的 tty 登录界面，操作如下&lt;/span&gt;
&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 打开 vnc 链接，用浏览器打开下面的链接&lt;/span&gt;
&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 打开 vnc 链接时会出现不安全认证，导致 websocket 无法握手，需要在浏览器信任 webconsole server 对应的 endpoint&lt;/span&gt;
$ climc endpoint-list --details &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; grep webconsole &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; grep public
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; 3da1e476aa7b4ff68e206754aed72d8f &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; region0   &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; 16120e8f3eec46dc86c59b3e426b0502 &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; webconsole      &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; webconsole      &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; https://10.168.222.218:8899         &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; public    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color:#204a87&#34;&gt;true&lt;/span&gt;    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 然后用浏览器访问下 https://10.168.222.218:8899 , 信任该链接即可&lt;/span&gt;

&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 在通过 webconsole-server 命令获取 vnc web 界面的链接地址，然后用浏览器打开该地址&lt;/span&gt;
$ climc webconsole-server testvm01
https://console.yunion.cn/web-console?access_token&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;FI-VXQSAonhzfSnxVTKCCbwHinp7swlRkmi-4p6s-4OfZpg6TG9YhWuwbHEUA1D7XoKu_w%3D%3D&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;api_server&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;https%3A%2F%2F10.168.222.216%3A8899&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;password&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;65xB2kaE&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;protocol&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;vnc&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
      </description>
    </item>
    
    <item>
      <title>Docs: 物理机管理服务</title>
      <link>https://opensource.yunion.cn/docs/setup/baremetal/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://opensource.yunion.cn/docs/setup/baremetal/</guid>
      <description>
        
        
        

&lt;p&gt;启用 baremetal-agent 之前需要部署 云联壹云 集群，详见 &lt;a href=&#34;https://opensource.yunion.cn/docs/setup/controlplane&#34;&gt;&amp;ldquo;安装部署/部署集群&amp;rdquo;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;待集群准备完毕后指定 node 来部署 baremetal-agent 服务&lt;/p&gt;

&lt;h2 id=&#34;启用-baremetal-agent&#34;&gt;启用 baremetal-agent&lt;/h2&gt;

&lt;p&gt;在通过 pxe 引导流程中，baremetal-agent 只会处理来自 dhcp relay 服务器的请求, 所以你需要事先在交换机配置 dhcp relay 或者使用 云联壹云 host 服务的 dhcp relay 功能。&lt;/p&gt;

&lt;h3 id=&#34;如何配置-host-服务-启用-dhcp-relay&#34;&gt;如何配置 host 服务 启用 dhcp relay&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 登录到已经部署好计算节点的服务器上修改 /etc/yunion/host.conf，添加 dhcp_relay 配置项：&lt;/span&gt;
dhcp_relay:
- &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;10&lt;/span&gt;.168.222.198 &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# baremetal agent dhcp服务监听地址&lt;/span&gt;
- &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;67&lt;/span&gt;             &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# baremetal agent dhcp服务监听端口&lt;/span&gt;
&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 然后重启host服务&lt;/span&gt;
$ kubectl get pods -n onecloud -o wide &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; grep host
default-host-p6d8h                       &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;2&lt;/span&gt;/2     Running   &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;0&lt;/span&gt;          78m    &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;10&lt;/span&gt;.168.222.189   k8s-dev1   &amp;lt;none&amp;gt;           &amp;lt;none&amp;gt;
default-host-xdc7x                       &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;2&lt;/span&gt;/2     Running   &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;0&lt;/span&gt;          78m    &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;10&lt;/span&gt;.168.222.150   k8s-dev2   &amp;lt;none&amp;gt;           &amp;lt;none&amp;gt;
&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 找到对应的 pod 删除等待 host 服务自动重启&lt;/span&gt;
$ kubectl delete pods -n onecloud default-host-xdc7x&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;启用-baremetal-agent-1&#34;&gt;启用 baremetal-agent&lt;/h3&gt;

&lt;p&gt;然后选择 node 启用 baremetal-agent。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# $listen_interface 指的是 baremetal-agent 监听的网卡名称&lt;/span&gt;
$ ocadm baremetal &lt;span style=&#34;color:#204a87&#34;&gt;enable&lt;/span&gt; --node &lt;span style=&#34;color:#000&#34;&gt;$node_name&lt;/span&gt; --listen-interface &lt;span style=&#34;color:#000&#34;&gt;$listen_interface&lt;/span&gt;
&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 观察 baremetal agent pod 状态查看是否启动成功&lt;/span&gt;
$ watch &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;kubectl get pods -n onecloud | grep baremetal&amp;#34;&lt;/span&gt;
default-baremetal-agent-7c84996c9b-hhllw   &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1&lt;/span&gt;/1     Running   &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;0&lt;/span&gt;          3m10s
&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 启动成功确认 baremetal-agent 注册到控制节点&lt;/span&gt;
$ climc agent-list
+--------------------------------------+--------------------------+----------------+-----------------------------+---------+------------+------------------------------------------+--------------------------------------+
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt;                  ID                  &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt;           Name           &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt;   Access_ip    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt;         Manager_URI         &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; Status  &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; agent_type &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt;                 version                  &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt;               zone_id                &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt;
+--------------------------------------+--------------------------+----------------+-----------------------------+---------+------------+------------------------------------------+--------------------------------------+
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; f3c2c671-c41d-4f30-8d04-e022b49bb9b5 &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; baremetal-10.168.222.150 &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;10&lt;/span&gt;.168.222.150 &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; https://10.168.222.150:8879 &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; enabled &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; baremetal  &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; remotes/origin/master&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;(&lt;/span&gt;5e415506120011509&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; 6230b485-2e54-480e-8284-33360b8202a8 &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt;
+--------------------------------------+--------------------------+----------------+-----------------------------+---------+------------+------------------------------------------+--------------------------------------+&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;部署完成后可以参考 &lt;a href=&#34;https://opensource.yunion.cn/docs/howto/baremetal&#34;&gt;&amp;ldquo;操作管理/物理机&amp;rdquo;&lt;/a&gt; 来进行对物理机的注册管理&lt;/p&gt;

&lt;h2 id=&#34;禁用-baremetal-agent&#34;&gt;禁用 baremetal-agent&lt;/h2&gt;

&lt;p&gt;可以在启用 baremetal-agent 的节点中选择节点禁止 baremetal-agent 调度到该节点。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;ocadm baremetal disable --node &lt;span style=&#34;color:#000&#34;&gt;$node_name&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
      </description>
    </item>
    
    <item>
      <title>Docs: 切换到企业版</title>
      <link>https://opensource.yunion.cn/docs/setup/ce-ee-switch/</link>
      <pubDate>Wed, 12 Feb 2020 12:55:46 +0800</pubDate>
      
      <guid>https://opensource.yunion.cn/docs/setup/ce-ee-switch/</guid>
      <description>
        
        
        

&lt;p&gt;默认情况下部署好的版本是 &lt;strong&gt;开源版本(CE: Community Edition)&lt;/strong&gt;，可以使用 &lt;code&gt;ocadm cluster update&lt;/code&gt; 命令切换成 &lt;strong&gt;企业版本(EE: Enterprise Edition)&lt;/strong&gt;。&lt;/p&gt;

&lt;h2 id=&#34;切换操作&#34;&gt;切换操作&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 切换到企业版&lt;/span&gt;
$ ocadm cluster update --use-ee --wait

&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 切换到开源版的 web 前端&lt;/span&gt;
$ ocadm cluster update --use-ce --wait&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;ocadm cluster update --use-ee/--use-ce&lt;/code&gt; 命令会更新替换当前的 default-web deployment，执行该命令后等到新的 pod 启动后，重新刷新前端页面，即可进入(开源版/企业版)前端。&lt;/p&gt;

&lt;h2 id=&#34;常见问题&#34;&gt;常见问题&lt;/h2&gt;

&lt;h3 id=&#34;访问前端出现错误&#34;&gt;访问前端出现错误&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;问题原因&lt;/strong&gt;: 开源与企业版本的前端分别依赖不同的 default-web configmap，直接切换过去会导致 default-web configmap 没有更新，会造成企业版本使用开源版本 configmap 的问题。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;解决办法&lt;/strong&gt;: 在控制节点上删除 web 服务的 nginx configmap 配置文件，并重启 web 服务即可。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 删除 default-web 的 configmap 文件&lt;/span&gt;
$ kubectl delete configmap -n onecloud default-web

&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 重启 default-web 服务&lt;/span&gt;
$ kubectl rollout restart deployment -n onecloud default-web&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
      </description>
    </item>
    
    <item>
      <title>Docs: 登录云主机</title>
      <link>https://opensource.yunion.cn/docs/howto/server/connect/</link>
      <pubDate>Fri, 19 Jul 2019 17:38:36 +0800</pubDate>
      
      <guid>https://opensource.yunion.cn/docs/howto/server/connect/</guid>
      <description>
        
        
        

&lt;p&gt;创建好主机后，登录的方式大概分为以下几种：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;ssh: linux 通用，要求主机网络可达;&lt;/li&gt;
&lt;li&gt;rdp: windows 远程桌面，要求主机网络可达；&lt;/li&gt;
&lt;li&gt;vnc: vnc 链接，对主机网络没有要求，只要能链接云平台 vnc proxy 即可;&lt;/li&gt;
&lt;li&gt;ipmi sol: 只对装有 BMC 的物理机可用;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;针对以上的链接方式，我们提供以下接口链接云主机：&lt;/p&gt;

&lt;h3 id=&#34;vnc-链接&#34;&gt;vnc 链接&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;climc webconsole-server&lt;/code&gt; 命令提供通过 vnc 的方式链接虚拟机，该方式对裸金属服务器不可用。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;$ climc webconsole-server &amp;lt;server_id&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;ssh-链接&#34;&gt;ssh 链接&lt;/h3&gt;

&lt;p&gt;查询 server 的 ip&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 可通过 server-list --search --details 的方式找到主机的 ip&lt;/span&gt;
$ climc server-list --search &amp;lt;server_name&amp;gt; --details 

&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 或者通过 server-show &amp;lt;server_id&amp;gt; 的方式得到 ip&lt;/span&gt;
$ climc server-show &amp;lt;server_name&amp;gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; grep ip
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; ips                  &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;10&lt;/span&gt;.168.222.226 &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;查询 server 的登录信息&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;$ climc server-logininfo &amp;lt;server_name&amp;gt;
+----------+-----------------------------+
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt;  Field   &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt;            Value            &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt;
+----------+-----------------------------+
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; password &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; @2aWXB6AmCbV                &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; updated  &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;2019&lt;/span&gt;-07-03T10:00:20.801716Z &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; username &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; root                        &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt;
+----------+-----------------------------+&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;ssh 登录&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;$ ssh root@10.168.222.226&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;通过 webconsole 登录&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ climc webconsole-ssh 10.168.222.226
https://console.yunion.cn/web-console?access_token=y7bjpBwtvJHLHpwOUMzNVvsYiAgY1vskIuVwB-aINfH4mm8MsZqwxKSfHqm2pCvY6O8bBA%3D%3D&amp;amp;api_server=https%3A%2F%2Foffice.yunion.io&amp;amp;protocol=tty
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;在浏览器打开 webconsole 放回的 url ，就会到对应虚拟机的登录界面&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;../images/webssh.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: 其他操作</title>
      <link>https://opensource.yunion.cn/docs/howto/server/others/</link>
      <pubDate>Fri, 19 Jul 2019 17:32:09 +0800</pubDate>
      
      <guid>https://opensource.yunion.cn/docs/howto/server/others/</guid>
      <description>
        
        
        

&lt;h3 id=&#34;开关机&#34;&gt;开关机&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 开机&lt;/span&gt;
$ climc server-start &amp;lt;server_id&amp;gt;

&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 关机&lt;/span&gt;
$ climc server-stop &amp;lt;server_id&amp;gt;

&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 强制关机&lt;/span&gt;
$ climc server-stop --is-force &amp;lt;server_id&amp;gt;

&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 重启&lt;/span&gt;
$ climc server-restart &amp;lt;server_id&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;删除&#34;&gt;删除&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 删除至回收站&lt;/span&gt;
$ climc server-delete &amp;lt;server_id&amp;gt;

&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 彻底删除&lt;/span&gt;
$ climc server-delete -f &amp;lt;server_id&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;重装密码&#34;&gt;重装密码&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;$ climc server-deploy --reset-password --password &amp;lt;your_password&amp;gt; &amp;lt;server_id&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;TODO&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: libvirt管理虚机导入</title>
      <link>https://opensource.yunion.cn/docs/howto/server/import/</link>
      <pubDate>Tue, 26 Nov 2019 16:57:43 +0800</pubDate>
      
      <guid>https://opensource.yunion.cn/docs/howto/server/import/</guid>
      <description>
        
        
        

&lt;p&gt;支持将libvirt管理的虚拟机导入到云联壹云平台。&lt;/p&gt;

&lt;h2 id=&#34;注意事项&#34;&gt;注意事项&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;首先需要在libvirt管理的宿主机上安装我们的计算节点&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;安装好计算节点后需要添加的虚拟机的网络到控制节点&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;确保libvirt服务关闭&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;相关操作&#34;&gt;相关操作&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;准备好需要导入虚拟机的信息文件&lt;code&gt;servers.yaml&lt;/code&gt;， 格式如下:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;hosts:
- host_ip: 10.168.222.137
xml_file_path: /etc/libvirt/qemu
monitor_path: /var/lib/libvirt/qemu
servers:
  - mac: 52:54:00:4A:19:AF
    ip: 10.168.222.53
  - mac: 52:54:00:4A:19:CC
    ip: 10.168.222.54
- host_ip: 10.168.222.130
xml_file_path: /etc/libvirt/qemu
monitor_path: /var/lib/libvirt/qemu
servers:
  - mac: 53:54:00:4A:19:EC
    ip: 11.168.222.50
  - mac: 53:54:00:4A:19:EE
    ip: 11.168.222.51
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;host_ip&lt;/code&gt; 是要导入的宿主机的ip&lt;/li&gt;
&lt;li&gt;&lt;code&gt;xml_file_path&lt;/code&gt;是libvirt存储虚拟机xml文件的路径，&lt;/li&gt;
&lt;li&gt;&lt;code&gt;monitor_path&lt;/code&gt;是libvirt存储虚拟机monitor socket文件的路径，&lt;/li&gt;
&lt;li&gt;&lt;code&gt;servers&lt;/code&gt;是需要导入的虚拟机，里面描述了虚拟机的ip和mac对应关系&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;ul&gt;
&lt;li&gt;执行 climc servers-import-from-libvirt 开始导入&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 导入前确认libvirt服务关闭&lt;/span&gt;
$ climc servers-import-from-libvirt servers.yaml&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
      </description>
    </item>
    
    <item>
      <title>Docs: GPU相关</title>
      <link>https://opensource.yunion.cn/docs/howto/server/gpu/</link>
      <pubDate>Fri, 19 Jul 2019 18:32:40 +0800</pubDate>
      
      <guid>https://opensource.yunion.cn/docs/howto/server/gpu/</guid>
      <description>
        
        
        

&lt;p&gt;目前仅支持 云联壹云 kvm 虚拟机使用 GPU，使用的 PCI Passthrough 的方式将宿主机上的 Nvidia/AMD GPU 透传给虚拟机使用。&lt;/p&gt;

&lt;h2 id=&#34;相关操作&#34;&gt;相关操作&lt;/h2&gt;

&lt;h3 id=&#34;创建-gpu-云主机&#34;&gt;创建 GPU 云主机&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;查询 gpu 列表&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;$ climc isolated-device-list --gpu
+--------------------------------------+----------+---------------------+---------+------------------+--------------------------------------+
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt;                  ID                  &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; Dev_type &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt;        Model        &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt;  Addr   &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; Vendor_device_id &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt;               Host_id                &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt;
+--------------------------------------+----------+---------------------+---------+------------------+--------------------------------------+
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; 273f4f72-06b6-49aa-8456-4beceec44997 &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; GPU-HPC  &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; GeForce GTX &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1050&lt;/span&gt; Ti &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;41&lt;/span&gt;:00.0 &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; 10de:1c82        &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; 3bce9607-2597-469f-8d9b-977345456739 &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; a77333e9-08d9-45c6-87eb-a7d8d902c5f5 &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; GPU-HPC  &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; Quadro FX &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;580&lt;/span&gt;       &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;05&lt;/span&gt;:00.0 &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; 10de:0659        &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; 3bce9607-2597-469f-8d9b-977345456739 &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt;
+--------------------------------------+----------+---------------------+---------+------------------+--------------------------------------+&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;创建 server&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;server-create 中的 &lt;code&gt;--isolated-device&lt;/code&gt; 参数指定透传的设备到云主机，可以重复使用多次，透传多个 gpu 到云主机，但要求透传到同一云主机的 gpu 必须在同一宿主机。其余创建参数和创建普通云主机是一样的。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;$ climc server-create --hypervisor kvm --isolated-device 273f4f72-06b6-49aa-8456-4beceec44997 ...&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;查询-gpu-云主机&#34;&gt;查询 GPU 云主机&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;$ climc server-list --gpu&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;关联-gpu&#34;&gt;关联 GPU&lt;/h3&gt;

&lt;p&gt;如果云主机所在的宿主机有可用的 gpu，在主机关机的情况下，可以通过 &lt;code&gt;server-attach-isolated-device&lt;/code&gt; 命令将 gpu 和云主机关联起来，下次主机启动后就可以使用该 gpu 。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;$ climc server-attach-isolated-device &amp;lt;server_id&amp;gt; &amp;lt;device_id&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;卸载-gpu&#34;&gt;卸载 GPU&lt;/h3&gt;

&lt;p&gt;如果云主机关联了 gpu，可以通过 &lt;code&gt;server-detach-isolated-device&lt;/code&gt; 卸载主机的某一 gpu。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;$ climc server-detach-isolated-device &amp;lt;server_id&amp;gt; &amp;lt;device_id&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
      </description>
    </item>
    
    <item>
      <title>Docs: 迁移相关</title>
      <link>https://opensource.yunion.cn/docs/howto/server/migrate/</link>
      <pubDate>Fri, 19 Jul 2019 18:58:33 +0800</pubDate>
      
      <guid>https://opensource.yunion.cn/docs/howto/server/migrate/</guid>
      <description>
        
        
        &lt;p&gt;TODO&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: 主备机</title>
      <link>https://opensource.yunion.cn/docs/howto/server/backup/</link>
      <pubDate>Fri, 19 Jul 2019 18:57:43 +0800</pubDate>
      
      <guid>https://opensource.yunion.cn/docs/howto/server/backup/</guid>
      <description>
        
        
        &lt;p&gt;TODO&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: 其他操作</title>
      <link>https://opensource.yunion.cn/docs/howto/image/operation/</link>
      <pubDate>Fri, 19 Jul 2019 17:29:09 +0800</pubDate>
      
      <guid>https://opensource.yunion.cn/docs/howto/image/operation/</guid>
      <description>
        
        
        

&lt;h2 id=&#34;导入镜像&#34;&gt;导入镜像&lt;/h2&gt;

&lt;p&gt;云平台的 glance 镜像服务支持从外部 url 导入镜像，对应 climc 的子命令为 &lt;code&gt;image-import&lt;/code&gt;　。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 导入 https://iso.yunion.cn/yumrepo-3.2/images/cirros-0.4.0-x86_64-disk.qcow2 镜像&lt;/span&gt;
$ climc image-import --format qcow2 --os-type Linux cirros-test.qcow2 https://iso.yunion.cn/yumrepo-3.2/images/cirros-0.4.0-x86_64-disk.qcow2&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;使用 &lt;code&gt;image-list&lt;/code&gt; 或 &lt;code&gt;image-show&lt;/code&gt; 查询导入镜像的状态，变为 active 时表明可以使用。&lt;/p&gt;

&lt;h2 id=&#34;下载镜像&#34;&gt;下载镜像&lt;/h2&gt;

&lt;p&gt;如果需要将云平台的镜像导出到本地，就需要用 &lt;code&gt;climc image-download&lt;/code&gt; 把 glance 存的镜像下载下来。&lt;/p&gt;

&lt;p&gt;参考 &lt;a href=&#34;../query/&#34;&gt;查询镜像&lt;/a&gt; 查询你想要下载的镜像，获取镜像 id 或 name。&lt;/p&gt;

&lt;p&gt;下载镜像:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# OUTPUT 指定镜像的保存路径和文件名称，如/root/test.qcow2&lt;/span&gt;
$ climc image-download &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;[&lt;/span&gt;--output OUTPUT&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;]&lt;/span&gt; &amp;lt;image_id&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&#34;删除镜像&#34;&gt;删除镜像&lt;/h2&gt;

&lt;p&gt;镜像默认启用了删除保护，当镜像确定不用了，需要先通过&lt;code&gt;climc image-update&lt;/code&gt;禁用删除保护，再通过 &lt;code&gt;climc image-delete&lt;/code&gt; 删除镜像。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 禁用镜像删除保护&lt;/span&gt;
$ climc image-update --unprotected &amp;lt;image_id&amp;gt;
&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 删除镜像&lt;/span&gt;
$ climc image-delete &amp;lt;image_id&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
      </description>
    </item>
    
    <item>
      <title>Docs: 升级相关</title>
      <link>https://opensource.yunion.cn/docs/setup/upgrade/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://opensource.yunion.cn/docs/setup/upgrade/</guid>
      <description>
        
        
        

&lt;p&gt;本文介绍从 v3.3.x 升级到 v3.4.x 的步骤以及注意事项。&lt;/p&gt;

&lt;p&gt;版本升级建议从相邻的版本升级，比如从 v3.0.x 升级到 v3.4.x 需要以下的步骤：&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;v3.0.x =&amp;gt; v3.1.x&lt;/li&gt;
&lt;li&gt;v3.1.x =&amp;gt; v3.2.x&lt;/li&gt;
&lt;li&gt;v3.2.x =&amp;gt; v3.3.x&lt;/li&gt;
&lt;li&gt;v3.3.x =&amp;gt; v3.4.x&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;直接跨多个版本升级可能会出现问题，建议参考以下的内容选择升级步骤:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://opensource.yunion.cn/v3.2/docs/setup/upgrade&#34; target=&#34;_blank&#34;&gt;v3.1.x 升级到 v3.2.x&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://opensource.yunion.cn/v3.3/docs/setup/upgrade&#34; target=&#34;_blank&#34;&gt;v3.2.x 升级到 v3.3.x&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;总体来说，升级的步骤如下:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;更新 rpm 源，升级 ocadm&lt;/li&gt;
&lt;li&gt;使用 ocadm 升级 云联壹云 服务&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&#34;查看当前版本&#34;&gt;查看当前版本&lt;/h2&gt;

&lt;p&gt;可以使用 kubectl 查看当前集群的版本&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 使用 kubectl 获得当前集群的版本为 v3.3.3&lt;/span&gt;
$ kubectl -n onecloud get onecloudclusters default -o&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;jsonpath&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;{.spec.version}&amp;#39;&lt;/span&gt;
v3.3.3&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&#34;更新-rpm-repo&#34;&gt;更新 rpm repo&lt;/h2&gt;

&lt;p&gt;ocadm 和 climc 这些命令行工具是以 yum rpm 包的方式安装，所以升级之前需要先更新这两个工具，然后再使用 ocadm 升级 云联壹云 服务。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 修改 baseurl，把 3.3 改成 3.4&lt;/span&gt;
$ sed -i &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;s|baseurl.*|baseurl=https://iso.yunion.cn/3.4|g&amp;#39;&lt;/span&gt; /etc/yum.repos.d/yunion.repo

&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 更新 yunion-ocadm, yunion-climc&lt;/span&gt;
$ yum clean all
$ yum install -y yunion-ocadm yunion-climc

&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 查看 ocadm 版本&lt;/span&gt;
$ ocadm version -o short
tags/v3.4.3&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;(&lt;/span&gt;99f04e620101609&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&#34;更新-云联壹云-服务&#34;&gt;更新 云联壹云 服务&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 使用 ocadm 更新 operator 以及相关服务到 v3.4.3 版本&lt;/span&gt;
&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 该步骤会因为拉取 docker 镜像等待较长时间，请耐心等待&lt;/span&gt;
$ ocadm cluster update --operator-version v3.4.3 --version v3.4.3 --wait

&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 另外可以在升级的过程中使用 kubectl 查看对应 pods 的升级情况&lt;/span&gt;
$ kubectl get pods -n onecloud --watch&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
      </description>
    </item>
    
  </channel>
</rss>
