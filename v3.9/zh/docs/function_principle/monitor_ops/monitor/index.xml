<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Cloudpods –
监控</title><link>https://www.cloudpods.org//v3.9/zh/docs/function_principle/monitor_ops/monitor/</link><description>Recent content in 监控 on Cloudpods</description><generator>Hugo -- gohugo.io</generator><lastBuildDate>Fri, 19 Jul 2019 20:59:00 +0800</lastBuildDate><atom:link href="https://www.cloudpods.org//v3.9/zh/docs/function_principle/monitor_ops/monitor/index.xml" rel="self" type="application/rss+xml"/><item><title>Docs: 监控代理</title><link>https://www.cloudpods.org//v3.9/zh/docs/function_principle/monitor_ops/monitor/monitoragent/</link><pubDate>Thu, 05 Aug 2021 00:00:00 +0000</pubDate><guid>https://www.cloudpods.org//v3.9/zh/docs/function_principle/monitor_ops/monitor/monitoragent/</guid><description>
&lt;p>监控代理 是运行在虚拟机上的 telegraf 守护进程，采集监控数据，并把数据传回Cloudpods的 InfluxDB。&lt;/p>
&lt;p>本文介绍三个问题：如何安装监控代理，如何采集监控数据，以及如何传输监控数据。&lt;/p>
&lt;h2 id="安装监控代理">安装监控代理&lt;/h2>
&lt;p>针对KVM虚拟机，平台支持在创建虚拟机时或关机时自动安装telegraf二进制和服务，安装路径在 /opt/.cloud-monitor/。&lt;/p>
&lt;p>针对运行时的KVM虚拟机，以及纳管的虚拟机，Cloudpods 使用 ansible 将 Agent 安装到虚拟机上。 为此，我们需要保证 ansible 控制服务能够 ssh 登录虚拟机&lt;/p>
&lt;p>&lt;img src="../images/20210805163249.png" alt="host_install">&lt;/p>
&lt;h3 id="ssh免密登录虚拟机">SSH免密登录虚拟机&lt;/h3>
&lt;p>Cloudpods已经能够连接到 VPC 内部的虚拟机，比如说通过 NAT网关或者虚拟机已经绑定了 EIP 等。&lt;/p>
&lt;p>&lt;img src="../images/20210805163416.png" alt="connect_direct">&lt;/p>
&lt;h4 id="直接免密登录">直接免密登录&lt;/h4>
&lt;p>如果虚拟机是通过Cloudpods平台创建出来的，那么Cloudpods是可以直接免密登录到虚拟机，
它是通过在虚拟机上自动创建一个可以通过公钥登录的 cloudroot 用户而实现的，对应的
私钥存储在Cloudpods的本地数据库。&lt;/p>
&lt;h4 id="用户协助配置免密登录">用户协助配置免密登录&lt;/h4>
&lt;p>如果虚拟机并非通过Cloudpods平台创建出来的，那么就需要用户协助配置免密登录了。&lt;/p>
&lt;p>用户需要在前端相关界面输入虚拟机的用户名和密钥/密码，以使Cloudpods能够暂时登录到
目标虚拟机，然后借助 Ansible 在目标虚拟机上创建 cloudroot 用户并配置公钥登录。&lt;/p>
&lt;p>&lt;img src="../images/20210805164138.png" alt="set_root">&lt;/p>
&lt;p>同理，其实也可以直接让用户在虚拟机上执行脚本，以达到创建 cloudroot 用户以及配置
公钥登录的目的。&lt;/p>
&lt;p>&lt;img src="../images/20210805164239.png" alt="exec_script">&lt;/p>
&lt;h3 id="ansible服务访问虚拟机">ansible服务访问虚拟机&lt;/h3>
&lt;p>Cloudpods的ansible服务一般不能直接访问云平台内的虚拟机。比如公有云 VPC 内部且没有配置
NAT 以及 EIP 的虚拟机。对于此种情况，我们使用 SSH 代理，具体来说是 Local Port
Forwarding。&lt;/p>
&lt;h4 id="ssh-local-port-forwarding">SSH Local Port Forwarding&lt;/h4>
&lt;p>&lt;img src="../images/20210805165213.png" alt="question1">&lt;/p>
&lt;p>假设网络 A 和网络 B 是两个隔离的网络，如果想让 VMA 能够访问 VMB 上监听在 80 端口
的 web 服务应该怎么办呢？&lt;/p>
&lt;p>在 proxyA 上执行&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">ssh –NfL 10.127.30.251:12345:172.31.25.194:80 cloudroot@140.179.54.109
&lt;/code>&lt;/pre>&lt;/div>&lt;p>上面的命令会在 proxyA 和 proxyB 之间建立 SSH隧道，并在 proxyA 上创建一个 port forwarding，
它将监听&lt;code>10.127.30.251:12345&lt;/code>，一旦有请求发来，就会通过 SSH 隧道转发到 proxyB，
proxyB 会把请求转发到&lt;code>172.31.25.194:80&lt;/code>&lt;/p>
&lt;p>&lt;img src="../images/20210805165029.png" alt="answer1">&lt;/p>
&lt;p>然后 VMA 只要访问&lt;code>10.127.30.251:12345&lt;/code>就能够访问 VMB 上的 web 服务。&lt;/p>
&lt;h2 id="采集监控数据">采集监控数据&lt;/h2>
&lt;p>监控数据存储在 InfluxDB 服务中，所以采集数据的 Agent 优先选择了 Telegraf，在其基础上修改了一些代码并定制了配置文件以满足Cloudpods采集数据的要求。&lt;/p>
&lt;p>配置主要描述了需要什么样的监控数据，数据的标签以及数据存储的地址。&lt;/p>
&lt;h2 id="上报监控数据">上报监控数据&lt;/h2>
&lt;p>Telegraf 可以通过以下几种方式向influxdb上报数据&lt;/p>
&lt;h3 id="直接上报">直接上报&lt;/h3>
&lt;p>如果虚拟机可以直接连接到Cloudpods中的 InfluxDB，那么数据就可以直接上报。一般KVM虚拟机，裸金属都适用这个场景。&lt;/p>
&lt;p>如果是KVM虚拟机，可以向虚拟机所在宿主机本地的metadata服务接口上报监控数据，上报地址为：http://169.254.169.254/monitor&lt;/p>
&lt;p>通过向metadata上报数据，就不要求云平台的 InfluxdDB 必须要被虚拟机网络访问。&lt;/p>
&lt;h3 id="ssh-remote-port-forwarding">SSH Remote Port Forwarding&lt;/h3>
&lt;p>如果主机无法直接访问influxdb，则需要设置ssh代理服务，通过SSH Remote Port Forwarding 建立从虚拟机到Influxdb的通信通道。&lt;/p>
&lt;p>&lt;img src="../images/20210805165957.png" alt="question2">&lt;/p>
&lt;p>网络 A 和网络 B 是两个隔离的网络，proxyB 具有公网 IP，所以 proxyA 可以访问到 proxyB，
如何让 VMB 访问 DB？&lt;/p>
&lt;p>在 proxyA 上执行:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">ssh –NfR 172.31.25.194:12345:10.127.40.251:30086 cloudroot@140.179.54.109
&lt;/code>&lt;/pre>&lt;/div>&lt;p>上面的命令会在 proxyA 和 proxyB 之间建立 SSH 隧道，并在 proxyB 上创建一个 port
forwarding，它将监听&lt;code>172.31.25.194:12345&lt;/code>，一旦有请求发来，就会通过 SSH 隧道转
发到 proxyA，proxyA 会把请求转发到&lt;code>10.172.40.251:80&lt;/code>&lt;/p>
&lt;p>&lt;img src="../images/20210805170059.png" alt="answer2">&lt;/p>
&lt;p>通过上面的方式，网络B 内部的 VMB 只要访问&lt;code>172.31.25.194:12345&lt;/code>就可以访问到 DB。&lt;/p>
&lt;p>总结来说，Local Port Forwarding 和 Remote Port Forwarding 的区别在于，Port
Forwarding 建立的位置对于执行命令的一方来说是 Local 还是 Remote。&lt;/p>
&lt;h3 id="传输数据">传输数据&lt;/h3>
&lt;p>在 proxy 和 proxyVM 之间建立 SSH 隧道，并在 proxy 执行命令以在 proxyVM 上建立
port fowarding，对 proxy 来说就是 remote port forwarding。&lt;/p>
&lt;p>VPC 内部的虚拟机就可以通过访问 proxyVM 的 port，访问Cloudpods的 DB 以把数据传输
回来。&lt;/p>
&lt;p>&lt;img src="../images/20210805170450.png" alt="tarnsfer">&lt;/p>
&lt;h2 id="总结">总结&lt;/h2>
&lt;p>总结来说，对于大多数情况，Cloudpods通过 SSH 代理连接到目标虚拟机，借助 Ansible 将
监控 Agent 安装到目标虚拟机上，并做好 Agent 的配置，而监控数据数据也将通过 SSH
代理传回到Cloudpods中的 InfluxDB 中。&lt;/p>
&lt;p>&lt;img src="../images/20210805170928.png" alt="summarize">&lt;/p></description></item><item><title>Docs: 自动迁移</title><link>https://www.cloudpods.org//v3.9/zh/docs/function_principle/monitor_ops/monitor/auto_migration/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.cloudpods.org//v3.9/zh/docs/function_principle/monitor_ops/monitor/auto_migration/</guid><description>
&lt;h2 id="使用场景">使用场景&lt;/h2>
&lt;ul>
&lt;li>当宿主机 CPU 使用率超过阈值或内存超过阈值后，自动迁移宿主机上部分虚拟机到指定范围的宿主机&lt;/li>
&lt;li>当宿主机 CPU 使用率超过阈值或内存超过阈值后，自动迁移宿主机上部分虚拟机到负载最空的宿主机&lt;/li>
&lt;/ul>
&lt;h2 id="监控指标">监控指标&lt;/h2>
&lt;p>每台宿主机都有对应的 cpu.usage_active 和 mem.available 监控指标，说明如下：&lt;/p>
&lt;ul>
&lt;li>cpu.usage_active: CPU 总核心使用率，上限为 100% ，表示所有核心都处于忙碌状态&lt;/li>
&lt;li>mem.available: 内存可用大小，单位为 Byte&lt;/li>
&lt;/ul>
&lt;h2 id="实现原理">实现原理&lt;/h2>
&lt;p>创建对应的宿主机监控报警指标，当宿主机发生报警的时候，监控服务根据指标的当前值和阈值只差，选择宿主机上对应的虚拟机进行迁移。&lt;/p>
&lt;h2 id="使用说明">使用说明&lt;/h2>
&lt;h3 id="cpu">CPU&lt;/h3>
&lt;p>下面以宿主机 CPU 超过阈值，迁移虚拟机到其他宿主举例：&lt;/p>
&lt;ol>
&lt;li>创建 cpu.usage_active 的迁移规则，名为 test-cpu ，监控宿主机 test-66-onecloud02 上的指标，当 cpu.usage_active 大于 60% 后触发自动迁移，每隔 2 分钟检查一次&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">$ climc monitor-migrationalert-create &lt;span style="color:#4e9a06">\
&lt;/span>&lt;span style="color:#4e9a06">&lt;/span> --period 2m &lt;span style="color:#4e9a06">\
&lt;/span>&lt;span style="color:#4e9a06">&lt;/span> --source-host test-66-onecloud02 &lt;span style="color:#4e9a06">\
&lt;/span>&lt;span style="color:#4e9a06">&lt;/span> test-cpu cpu.usage_active.gt &lt;span style="color:#0000cf;font-weight:bold">60&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="2">
&lt;li>创建对应的虚拟机进行测试，假设宿主机 CPU 40 核，为了达到阈值触发迁移，虚拟机的 CPU 核数就需要是 24 (40 * 60%) 核，然后在虚拟机使用 stress-ng 压测工具把所有核心打到 100%&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">&lt;span style="color:#8f5902;font-style:italic"># 创建虚拟机&lt;/span>
$ climc server-create --disk CentOS-7.6.1810-20190430.qcow2 &lt;span style="color:#4e9a06">\
&lt;/span>&lt;span style="color:#4e9a06">&lt;/span> --net your-net &lt;span style="color:#4e9a06">\
&lt;/span>&lt;span style="color:#4e9a06">&lt;/span> --mem-spec 1g &lt;span style="color:#4e9a06">\
&lt;/span>&lt;span style="color:#4e9a06">&lt;/span> --ncpu &lt;span style="color:#0000cf;font-weight:bold">24&lt;/span> &lt;span style="color:#4e9a06">\
&lt;/span>&lt;span style="color:#4e9a06">&lt;/span> --allow-delete &lt;span style="color:#4e9a06">\
&lt;/span>&lt;span style="color:#4e9a06">&lt;/span> --auto-start &lt;span style="color:#4e9a06">\
&lt;/span>&lt;span style="color:#4e9a06">&lt;/span> --prefer-host test-66-onecloud02 &lt;span style="color:#4e9a06">\
&lt;/span>&lt;span style="color:#4e9a06">&lt;/span> cpu-test-vm
&lt;span style="color:#8f5902;font-style:italic"># 登录虚拟机，使用 stress-ng 压测 CPU&lt;/span>
$ climc server-ssh cpu-test-vm
&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>cpu-test-vm&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span>$ yum install -y stress-ng
&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>cpu-test-vm&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span>$ stress-ng --cpu &lt;span style="color:#0000cf;font-weight:bold">24&lt;/span> --timeout 36000s
&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="3">
&lt;li>隔2分钟查看监控迁移记录&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">&lt;span style="color:#8f5902;font-style:italic"># 可以先登录 influxdb 查看当前宿主机的监控指标&lt;/span>
$ kubectl &lt;span style="color:#204a87">exec&lt;/span> -ti -n onecloud &lt;span style="color:#204a87;font-weight:bold">$(&lt;/span>kubectl get pods -n onecloud &lt;span style="color:#000;font-weight:bold">|&lt;/span> grep default-influxdb &lt;span style="color:#000;font-weight:bold">|&lt;/span> awk &lt;span style="color:#4e9a06">&amp;#39;{print $1}&amp;#39;&lt;/span>&lt;span style="color:#204a87;font-weight:bold">)&lt;/span> -- influx -host 127.0.0.1 -port &lt;span style="color:#0000cf;font-weight:bold">30086&lt;/span> -type influxql -ssl -precision rfc3339 -unsafeSsl
Connected to https://127.0.0.1:30086 version 1.7.7
InfluxDB shell version: 1.7.7
&amp;gt; use telegraf
&lt;span style="color:#8f5902;font-style:italic"># 通过 climc host-list --search test-66-onecloud02 得到 host_id 为 6fc10297-eb20-4a96-86a8-4b65260d6016&lt;/span>
&lt;span style="color:#8f5902;font-style:italic"># 下面查看该宿主过去 2m 的 cpu.usage_active 指标已经大于 60% 的阈值了&lt;/span>
&amp;gt; &lt;span style="color:#204a87;font-weight:bold">select&lt;/span> usage_active from cpu where &lt;span style="color:#000">host_id&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#4e9a06">&amp;#39;6fc10297-eb20-4a96-86a8-4b65260d6016&amp;#39;&lt;/span> and &lt;span style="color:#204a87">time&lt;/span> &amp;gt; now&lt;span style="color:#ce5c00;font-weight:bold">()&lt;/span> - 2m GROUP BY &lt;span style="color:#4e9a06">&amp;#34;host_id&amp;#34;&lt;/span>
name: cpu
tags: &lt;span style="color:#000">host_id&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>6fc10297-eb20-4a96-86a8-4b65260d6016
&lt;span style="color:#204a87">time&lt;/span> usage_active
---- ------------
2022-06-28T03:55:00Z 62.90831581190119
2022-06-28T03:56:00Z 70.15669899594904
&lt;span style="color:#8f5902;font-style:italic"># 查看报警迁移记录&lt;/span>
&lt;span style="color:#8f5902;font-style:italic"># 找到 id 为 a7a92f4a-fed1-49bb-880b-59eae5185acc&lt;/span>
$ climc monitor-migrationalert-list --scope system
+--------------------------------------+----------+------------------+
&lt;span style="color:#000;font-weight:bold">|&lt;/span> id &lt;span style="color:#000;font-weight:bold">|&lt;/span> name &lt;span style="color:#000;font-weight:bold">|&lt;/span> metric_type &lt;span style="color:#000;font-weight:bold">|&lt;/span>
+--------------------------------------+----------+------------------+
&lt;span style="color:#000;font-weight:bold">|&lt;/span> a7a92f4a-fed1-49bb-880b-59eae5185acc &lt;span style="color:#000;font-weight:bold">|&lt;/span> test-cpu &lt;span style="color:#000;font-weight:bold">|&lt;/span> cpu.usage_active &lt;span style="color:#000;font-weight:bold">|&lt;/span>
+--------------------------------------+----------+------------------+
&lt;span style="color:#8f5902;font-style:italic"># 查看迁移记录事件&lt;/span>
$ climc monitor-migrationalert-event a7a92f4a-fed1-49bb-880b-59eae5185acc --scope system
+--------+-----------------------------+--------------------------------------+----------------+----------+--------------+--------+------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
&lt;span style="color:#000;font-weight:bold">|&lt;/span> id &lt;span style="color:#000;font-weight:bold">|&lt;/span> ops_time &lt;span style="color:#000;font-weight:bold">|&lt;/span> obj_id &lt;span style="color:#000;font-weight:bold">|&lt;/span> obj_type &lt;span style="color:#000;font-weight:bold">|&lt;/span> obj_name &lt;span style="color:#000;font-weight:bold">|&lt;/span> user &lt;span style="color:#000;font-weight:bold">|&lt;/span> tenant &lt;span style="color:#000;font-weight:bold">|&lt;/span> action &lt;span style="color:#000;font-weight:bold">|&lt;/span> notes &lt;span style="color:#000;font-weight:bold">|&lt;/span>
+--------+-----------------------------+--------------------------------------+----------------+----------+--------------+--------+------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
&lt;span style="color:#000;font-weight:bold">|&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">428124&lt;/span> &lt;span style="color:#000;font-weight:bold">|&lt;/span> 2022-06-28T07:40:02.000000Z &lt;span style="color:#000;font-weight:bold">|&lt;/span> a7a92f4a-fed1-49bb-880b-59eae5185acc &lt;span style="color:#000;font-weight:bold">|&lt;/span> migrationalert &lt;span style="color:#000;font-weight:bold">|&lt;/span> test-cpu &lt;span style="color:#000;font-weight:bold">|&lt;/span> monitoradmin &lt;span style="color:#000;font-weight:bold">|&lt;/span> system &lt;span style="color:#000;font-weight:bold">|&lt;/span> find_result_fail &lt;span style="color:#000;font-weight:bold">|&lt;/span> find result to migrate: not found target &lt;span style="color:#204a87;font-weight:bold">for&lt;/span> guest &lt;span style="color:#000;font-weight:bold">&amp;amp;&lt;/span>balancer.cpuCandidate&lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>guestResource:&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>*balancer.guestResource&lt;span style="color:#ce5c00;font-weight:bold">)(&lt;/span>0xc001963c20&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span>, usageActive:99.46995000000001, guestCPUCount:24, hostCPUCount:40&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>: &lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span>host:test-69-onecloud01:current&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>55.313408&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> + guest:cpu-test-vm:score&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>59.681970&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &amp;gt;&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> threshold&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>60.000000&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span>, host:a15:current&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>62.305391&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> + guest:cpu-test-vm:score&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>59.681970&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &amp;gt;&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> threshold&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>60.000000&lt;span style="color:#ce5c00;font-weight:bold">)]&lt;/span> &lt;span style="color:#000;font-weight:bold">|&lt;/span>
&lt;span style="color:#000;font-weight:bold">|&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">427991&lt;/span> &lt;span style="color:#000;font-weight:bold">|&lt;/span> 2022-06-28T03:56:57.000000Z &lt;span style="color:#000;font-weight:bold">|&lt;/span> a7a92f4a-fed1-49bb-880b-59eae5185acc &lt;span style="color:#000;font-weight:bold">|&lt;/span> migrationalert &lt;span style="color:#000;font-weight:bold">|&lt;/span> test-cpu &lt;span style="color:#000;font-weight:bold">|&lt;/span> sysadmin &lt;span style="color:#000;font-weight:bold">|&lt;/span> system &lt;span style="color:#000;font-weight:bold">|&lt;/span> create &lt;span style="color:#000;font-weight:bold">|&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;id&amp;#34;&lt;/span>:&lt;span style="color:#4e9a06">&amp;#34;a7a92f4a-fed1-49bb-880b-59eae5185acc&amp;#34;&lt;/span>,&lt;span style="color:#4e9a06">&amp;#34;name&amp;#34;&lt;/span>:&lt;span style="color:#4e9a06">&amp;#34;test-cpu&amp;#34;&lt;/span>,&lt;span style="color:#4e9a06">&amp;#34;res_name&amp;#34;&lt;/span>:&lt;span style="color:#4e9a06">&amp;#34;migrationalert&amp;#34;&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span> &lt;span style="color:#000;font-weight:bold">|&lt;/span>
+--------+-----------------------------+--------------------------------------+----------------+----------+--------------+--------+------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
&lt;span style="color:#8f5902;font-style:italic"># 发现了一条 find_result_fail 的记录，表示虽然发生了报警，但是没有找到对应的目标宿主机进行迁移&lt;/span>
&lt;span style="color:#8f5902;font-style:italic"># 原因是集群中的另外两台宿主机 test-69-onecloud01 当前指标为 55.313408%，a15 为 59.681970%，如果把 cpu-test-vm 59.681970% 的 cpu 负载迁移到另外两台宿主机&lt;/span>
&lt;span style="color:#8f5902;font-style:italic"># 又会导致其他两台宿主机超过阈值，所以失败&lt;/span>
&lt;span style="color:#8f5902;font-style:italic"># 如果把集群节点的负载降低，或者加入新的宿主机，负载高的虚拟机预期就会迁移过去，下面是迁移成功的记录&lt;/span>
&lt;span style="color:#8f5902;font-style:italic"># 假设我重新使用 climc monitor-migrationalert-create 创建了一条 a15 宿主机的迁移规则，大于 60 触发，id 为 afc9468c-2cd7-4be8-83c7-92d7535a53cf&lt;/span>
$ climc monitor-migrationalert-event afc9468c-2cd7-4be8-83c7-92d7535a53cf --scope system
+--------+-----------------------------+--------------------------------------+----------------+----------+--------------+--------+-----------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
&lt;span style="color:#000;font-weight:bold">|&lt;/span> id &lt;span style="color:#000;font-weight:bold">|&lt;/span> ops_time &lt;span style="color:#000;font-weight:bold">|&lt;/span> obj_id &lt;span style="color:#000;font-weight:bold">|&lt;/span> obj_type &lt;span style="color:#000;font-weight:bold">|&lt;/span> obj_name &lt;span style="color:#000;font-weight:bold">|&lt;/span> user &lt;span style="color:#000;font-weight:bold">|&lt;/span> tenant &lt;span style="color:#000;font-weight:bold">|&lt;/span> action &lt;span style="color:#000;font-weight:bold">|&lt;/span> notes &lt;span style="color:#000;font-weight:bold">|&lt;/span>
+--------+-----------------------------+--------------------------------------+----------------+----------+--------------+--------+-----------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
&lt;span style="color:#000;font-weight:bold">|&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">428147&lt;/span> &lt;span style="color:#000;font-weight:bold">|&lt;/span> 2022-06-28T07:56:01.000000Z &lt;span style="color:#000;font-weight:bold">|&lt;/span> afc9468c-2cd7-4be8-83c7-92d7535a53cf &lt;span style="color:#000;font-weight:bold">|&lt;/span> migrationalert &lt;span style="color:#000;font-weight:bold">|&lt;/span> test-cpu &lt;span style="color:#000;font-weight:bold">|&lt;/span> monitoradmin &lt;span style="color:#000;font-weight:bold">|&lt;/span> system &lt;span style="color:#000;font-weight:bold">|&lt;/span> migrating &lt;span style="color:#000;font-weight:bold">|&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;guest&amp;#34;&lt;/span>:&lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;host&amp;#34;&lt;/span>:&lt;span style="color:#4e9a06">&amp;#34;a15&amp;#34;&lt;/span>,&lt;span style="color:#4e9a06">&amp;#34;host_id&amp;#34;&lt;/span>:&lt;span style="color:#4e9a06">&amp;#34;733b10fa-bd33-4503-836d-2ccd225bf12f&amp;#34;&lt;/span>,&lt;span style="color:#4e9a06">&amp;#34;id&amp;#34;&lt;/span>:&lt;span style="color:#4e9a06">&amp;#34;a3107d1f-c46e-43cf-8aa8-55743d1533b1&amp;#34;&lt;/span>,&lt;span style="color:#4e9a06">&amp;#34;name&amp;#34;&lt;/span>:&lt;span style="color:#4e9a06">&amp;#34;aisenzhe&amp;#34;&lt;/span>,&lt;span style="color:#4e9a06">&amp;#34;score&amp;#34;&lt;/span>:10.769393333333335,&lt;span style="color:#4e9a06">&amp;#34;vcpu_count&amp;#34;&lt;/span>:8,&lt;span style="color:#4e9a06">&amp;#34;vmem_size&amp;#34;&lt;/span>:8192&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>,&lt;span style="color:#4e9a06">&amp;#34;target_host&amp;#34;&lt;/span>:&lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;id&amp;#34;&lt;/span>:&lt;span style="color:#4e9a06">&amp;#34;6fc10297-eb20-4a96-86a8-4b65260d6016&amp;#34;&lt;/span>,&lt;span style="color:#4e9a06">&amp;#34;name&amp;#34;&lt;/span>:&lt;span style="color:#4e9a06">&amp;#34;test-66-onecloud02&amp;#34;&lt;/span>,&lt;span style="color:#4e9a06">&amp;#34;score&amp;#34;&lt;/span>:22.65071999099409&lt;span style="color:#ce5c00;font-weight:bold">}}&lt;/span> &lt;span style="color:#000;font-weight:bold">|&lt;/span>
+--------+-----------------------------+--------------------------------------+----------------+----------+--------------+--------+-----------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
&lt;span style="color:#8f5902;font-style:italic"># 上述信息表示把 a15 上的 aisenzhe 虚拟机(cpu.usage_active 10.76%) 迁移到 test-66-onecloud02(cpu.usage_active 22.65%) 目标宿主机上&lt;/span>
&lt;span style="color:#8f5902;font-style:italic"># 查看虚拟机的状态发现正在迁移中&lt;/span>
$ climc server-list --search aisenzhe
+--------------------------------------+----------+--------------+-----------+------------+-----------+-----------+-----------------------------+------------+---------+-----------+
&lt;span style="color:#000;font-weight:bold">|&lt;/span> ID &lt;span style="color:#000;font-weight:bold">|&lt;/span> Name &lt;span style="color:#000;font-weight:bold">|&lt;/span> Billing_type &lt;span style="color:#000;font-weight:bold">|&lt;/span> Status &lt;span style="color:#000;font-weight:bold">|&lt;/span> vcpu_count &lt;span style="color:#000;font-weight:bold">|&lt;/span> vmem_size &lt;span style="color:#000;font-weight:bold">|&lt;/span> Secgrp_id &lt;span style="color:#000;font-weight:bold">|&lt;/span> Created_at &lt;span style="color:#000;font-weight:bold">|&lt;/span> Hypervisor &lt;span style="color:#000;font-weight:bold">|&lt;/span> os_type &lt;span style="color:#000;font-weight:bold">|&lt;/span> is_system &lt;span style="color:#000;font-weight:bold">|&lt;/span>
+--------------------------------------+----------+--------------+-----------+------------+-----------+-----------+-----------------------------+------------+---------+-----------+
&lt;span style="color:#000;font-weight:bold">|&lt;/span> a3107d1f-c46e-43cf-8aa8-55743d1533b1 &lt;span style="color:#000;font-weight:bold">|&lt;/span> aisenzhe &lt;span style="color:#000;font-weight:bold">|&lt;/span> postpaid &lt;span style="color:#000;font-weight:bold">|&lt;/span> migrating &lt;span style="color:#000;font-weight:bold">|&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">8&lt;/span> &lt;span style="color:#000;font-weight:bold">|&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">8192&lt;/span> &lt;span style="color:#000;font-weight:bold">|&lt;/span> default &lt;span style="color:#000;font-weight:bold">|&lt;/span> 2022-01-06T08:34:45.000000Z &lt;span style="color:#000;font-weight:bold">|&lt;/span> kvm &lt;span style="color:#000;font-weight:bold">|&lt;/span> Linux &lt;span style="color:#000;font-weight:bold">|&lt;/span> &lt;span style="color:#204a87">false&lt;/span> &lt;span style="color:#000;font-weight:bold">|&lt;/span>
+--------------------------------------+----------+--------------+-----------+------------+-----------+-----------+-----------------------------+------------+---------+-----------+
&lt;span style="color:#8f5902;font-style:italic"># 热迁移会持续一段时间，具体时间视虚拟机内存和磁盘大小而定，等待迁移结束后，会记录迁移成功的日志&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="其他操作">其他操作&lt;/h3>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">&lt;span style="color:#8f5902;font-style:italic"># 自动调节集群宿主机 cpu 负载，即不指定 --source-host 参数&lt;/span>
$ climc monitor-migrationalert-create --period 5m all-host-cpu cpu.usage_active.gt &lt;span style="color:#0000cf;font-weight:bold">80&lt;/span>
&lt;span style="color:#8f5902;font-style:italic"># 指定目标宿主机，当宿主机 cpu.usage_active 大于 80 后，只能迁移到目标宿主机 host1 和 host2&lt;/span>
$ climc monitor-migrationalert-create --period 5m --target-host host1 --target-host host2 target-host-cpu cpu.usage_active.gt &lt;span style="color:#0000cf;font-weight:bold">80&lt;/span>
&lt;span style="color:#8f5902;font-style:italic"># 指定监控的源宿主机，只关心 src-host1 和 src-host2 的监控&lt;/span>
$ climc monitor-migrationalert-create --period 5m --source-host src-host1 --source-host src-host2 src-host-cpu cpu.usage_active.gt &lt;span style="color:#0000cf;font-weight:bold">80&lt;/span>
&lt;span style="color:#8f5902;font-style:italic"># 指定迁移的源虚拟机，当宿主机 cpu.usage_active 大于 80 时候，只能迁移 gst1 和 gst2 虚拟机&lt;/span>
$ climc monitor-migrationalert-create --period 5m --source-guest gst1 --source-guest gst2 host-gst-cpu cpu.usage_active.gt &lt;span style="color:#0000cf;font-weight:bold">80&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="注意事项">注意事项&lt;/h2>
&lt;p>该功能目前只是 alpha 版本不一定稳定，仅限测试使用。&lt;/p>
&lt;p>另外为了防止迁移条件判断不准确，导致宿主机之前虚拟机相互迁移，最后出现雪崩效应。&lt;/p>
&lt;p>目前同一个时刻，只会一条报警触发的迁移逻辑，会一次迁移一批机器。如果该时刻另外一个 migrationalert 报警规则触发，会放弃此次迁移，必须等待全局没有其他 migrationalert 触发的迁移时，才会开始自己的迁移逻辑。&lt;/p></description></item><item><title>Docs: 监控拉取服务(cloudmon)</title><link>https://www.cloudpods.org//v3.9/zh/docs/function_principle/monitor_ops/monitor/cloudmon/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.cloudpods.org//v3.9/zh/docs/function_principle/monitor_ops/monitor/cloudmon/</guid><description>
&lt;p>cloudmon服务可以认为是一个cronjob周期任务,通过API调用方式采集各个云平台的监控数据, 并存储到influxdb数据库中, 以供monitor服务查询&lt;/p>
&lt;h2 id="采集类型">采集类型&lt;/h2>
&lt;p>采集一般分为两类, 根据&lt;strong>资源ID获取监控&lt;/strong>和&lt;strong>根据监控项获取&lt;/strong>类型&lt;/p>
&lt;h3 id="资源id类型">资源ID类型&lt;/h3>
&lt;p>此类采集监控数据，每次API调用都需要传入资源Id, 甚至还需要传入监控项，因此会消耗大量API调用
假设有100个资源要获取4类监控数据就需要调用100次甚至400次API&lt;/p>
&lt;h3 id="监控项类型">监控项类型&lt;/h3>
&lt;p>此类采集监控数据，每次API调用仅需要传入监控项即可返回多个资源的监控数据，因此
假设有100个资源要获取4类监控数据，最低仅需要调用4次API即可，如果出现分页也仅仅是需要多调用几次&lt;/p>
&lt;div class="alert alert-warning" role="alert">
&lt;h4 class="alert-heading">说明&lt;/h4>
&lt;p>腾讯云是这两类的结合体, 它需要传入监控项，但是限制了每次最多查10个实例的监控数据，因此
假设有100个资源需要获取4类监控数据就需要调用40次API&lt;/p>
&lt;p>调高采集周期可以减少资源ID类型的API调用次数&lt;/p>
&lt;/div>
&lt;h2 id="采集周期">采集周期&lt;/h2>
&lt;p>cloudmon默认每6分钟采集一次监控(一个周期内根据资源多少会调用不同云平台多次API)
可以通过以下命令更改采集周期&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-shell" data-lang="shell">&lt;span style="color:#8f5902;font-style:italic"># 更改采集周期后会影响查看监控的时效性&lt;/span>
$ climc service-config --config &lt;span style="color:#000">collect_metric_interval&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">12&lt;/span> cloudmon
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="忽略某个云平台监控拉取">忽略某个云平台监控拉取&lt;/h2>
&lt;p>cloudmon支持忽略某些云平台的监控拉取，但不支持忽略某一个云账号的监控拉取&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-shell" data-lang="shell">&lt;span style="color:#8f5902;font-style:italic"># 云平台类型通过逗号隔开&lt;/span>
$ climc service-config --config &lt;span style="color:#4e9a06">&amp;#39;skip_metric_pull_providers=Aliyun,Azure&amp;#39;&lt;/span> cloudmon
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="并发控制">并发控制&lt;/h2>
&lt;p>默认一次会同时拉取10个账号的云监控数据, 若云账号过多可适当增加并发量&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-shell" data-lang="shell">$ climc service-config --config &lt;span style="color:#000">cloud_account_collect_metrics_batch_count&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">15&lt;/span> cloudmon
&lt;/code>&lt;/pre>&lt;/div>&lt;p>默认每个账号一次性会拉取40个资源的监控, 可以通过以下命令控制资源并发数&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-shell" data-lang="shell">&lt;span style="color:#8f5902;font-style:italic"># 此命令仅对根据资源ID采集监控生效&lt;/span>
$ climc service-config --config &lt;span style="color:#000">cloud_resource_collect_metrics_batch_count&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">20&lt;/span> cloudmon
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="常用云平台使用监控api">常用云平台使用监控API&lt;/h2>
&lt;h3 id="阿里云监控项类别">阿里云(监控项类别)&lt;/h3>
&lt;p>&lt;a href="https://next.api.aliyun.com/api/Cms/2019-01-01/DescribeMetricList?lang=GO">DescribeMetricList&lt;/a>&lt;/p>
&lt;h3 id="飞天监控项类别">飞天(监控项类别)&lt;/h3>
&lt;p>DescribeMetricList
GetOrganizationTree&lt;/p>
&lt;h3 id="aws资源id类别">AWS(资源ID类别)&lt;/h3>
&lt;p>&lt;a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/APIReference/API_GetMetricStatistics.html">GetMetricStatistics&lt;/a>&lt;/p>
&lt;h3 id="azure资源id类别">Azure(资源ID类别)&lt;/h3>
&lt;p>&lt;a href="https://learn.microsoft.com/en-us/rest/api/monitor/metrics/list?tabs=HTTP">Metric List&lt;/a>
&lt;a href="https://learn.microsoft.com/en-us/rest/api/monitor/metric-definitions/list?tabs=HTTP">Metric Definitions&lt;/a>
&lt;a href="https://learn.microsoft.com/en-us/rest/api/loganalytics/workspaces/get?tabs=HTTP">Workspaces - Get&lt;/a>
&lt;a href="https://learn.microsoft.com/en-us/rest/api/loganalytics/dataaccess/query/get?tabs=HTTP">Workspaces Query&lt;/a>&lt;/p>
&lt;div class="alert alert-warning" role="alert">
&lt;h4 class="alert-heading">说明&lt;/h4>
&lt;p>除Metric List接口外, 其他三个接口是为了获取虚拟机内存和磁盘使用率, 但是会额外产生费用，因此默认不采集
可以通过以下命令开启&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-shell" data-lang="shell">$ climc service-config --config &lt;span style="color:#4e9a06">&amp;#39;support_azure_table_storage_metric=true&amp;#39;&lt;/span> cloudmon
&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;h3 id="品高云资源id类别">品高云(资源ID类别)&lt;/h3>
&lt;p>GetMetricStatistics&lt;/p>
&lt;h3 id="esxi监控项类别">Esxi(监控项类别)&lt;/h3>
&lt;p>&lt;a href="https://vdc-repo.vmware.com/vmwb-repository/dcr-public/da47f910-60ac-438b-8b9b-6122f4d14524/16b7274a-bf8b-4b4c-a05e-746f2aa93c8c/doc/vim.PerformanceManager.QuerySpec.html">PerfQuerySpec&lt;/a>&lt;/p>
&lt;div class="alert alert-warning" role="alert">
&lt;h4 class="alert-heading">说明&lt;/h4>
磁盘使用率esxi每半小时才会有一次数据, 且会出现使用率高于100%的情况(esxi控制台可以看到已使用的磁盘大小高于分配大小)
&lt;/div>
&lt;h3 id="google监控项类别">Google(监控项类别)&lt;/h3>
&lt;p>&lt;a href="https://cloud.google.com/monitoring/api/metrics_gcp">Metrics&lt;/a>&lt;/p>
&lt;h3 id="华为云资源id类别">华为云(资源ID类别)&lt;/h3>
&lt;p>&lt;a href="https://support.huaweicloud.com/intl/en-us/api-ces/ces_03_0034.html">batch-query-metric-data&lt;/a>&lt;/p>
&lt;h3 id="腾讯云">腾讯云&lt;/h3>
&lt;p>&lt;a href="https://cloud.tencent.com/document/api/248/51845">DescribeStatisticData&lt;/a>
&lt;a href="https://cloud.tencent.com/document/product/248/31014">GetMonitorData&lt;/a>&lt;/p></description></item></channel></rss>