"use strict";(self.webpackChunkdocs_new=self.webpackChunkdocs_new||[]).push([[8034],{22163:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>t,default:()=>u,frontMatter:()=>i,metadata:()=>d,toc:()=>a});var r=s(85893),o=s(11151);const i={title:"\u4f7f\u7528 Cgroups \u9650\u5236 Kubernetes Pod \u8fdb\u7a0b\u6570",date:new Date("2021-06-25T00:00:00.000Z"),slug:"cgroups-kubernetes-pid-limits",authors:[{name:"Zexi Li",url:"https://github.com/zexi",image_url:"https://github.com/zexi.png"}]},t=void 0,d={permalink:"/en/blog/cgroups-kubernetes-pid-limits",editUrl:"https://github.com/yunionio/website/tree/master/blog/2021-06-25-k8s-kubelet-pid-limits.md",source:"@site/blog/2021-06-25-k8s-kubelet-pid-limits.md",title:"\u4f7f\u7528 Cgroups \u9650\u5236 Kubernetes Pod \u8fdb\u7a0b\u6570",description:"Kubernetes \u91cc\u9762\u7684 Pod \u8d44\u6e90\u662f\u6700\u5c0f\u7684\u8ba1\u7b97\u5355\u5143\uff0c\u62bd\u8c61\u4e86\u4e00\u7ec4\uff08\u4e00\u4e2a\u6216\u591a\u4e2a\uff09\u5bb9\u5668\u3002\u5bb9\u5668\u4e5f\u662f Linux \u7cfb\u7edf\u4e0a\u7684\u8fdb\u7a0b\uff0c\u4f46\u57fa\u4e8e Namespace \u548c Cgroups(Control groups) \u7b49\u6280\u672f\u5b9e\u73b0\u4e86\u4e0d\u540c\u7a0b\u5ea6\u7684\u9694\u79bb\u3002",date:"2021-06-25T00:00:00.000Z",formattedDate:"June 25, 2021",tags:[],readingTime:13.565,hasTruncateMarker:!0,authors:[{name:"Zexi Li",url:"https://github.com/zexi",image_url:"https://github.com/zexi.png",imageURL:"https://github.com/zexi.png"}],frontMatter:{title:"\u4f7f\u7528 Cgroups \u9650\u5236 Kubernetes Pod \u8fdb\u7a0b\u6570",date:"2021-06-25T00:00:00.000Z",slug:"cgroups-kubernetes-pid-limits",authors:[{name:"Zexi Li",url:"https://github.com/zexi",image_url:"https://github.com/zexi.png",imageURL:"https://github.com/zexi.png"}]},unlisted:!1,prevItem:{title:"\u95ee\u9898\u5206\u6790\uff1a\u4e3a\u4ec0\u4e48keystone\u7684\u672c\u5730\u7528\u6237\u8ba4\u8bc1\u63a5\u53e3\u538b\u6d4b\u6027\u80fd\u5f88\u5dee\uff1f",permalink:"/en/blog/keystone-slow-password-auth"},nextItem:{title:"\u4f7f\u7528Linux vfio\u5c06Nvidia GPU\u900f\u4f20\u7ed9QEMU\u865a\u62df\u673a",permalink:"/en/blog/nvidia-gpu-passthrough-record"}},c={authorsImageUrls:[void 0]},a=[{value:"\u573a\u666f\u4ecb\u7ecd",id:"\u573a\u666f\u4ecb\u7ecd",level:2},{value:"\u89e3\u51b3\u65b9\u6cd5",id:"\u89e3\u51b3\u65b9\u6cd5",level:2},{value:"Kubelet \u5f00\u542f PodPidsLimit \u529f\u80fd",id:"kubelet-\u5f00\u542f-podpidslimit-\u529f\u80fd",level:3},{value:"\u9a8c\u8bc1 PodPidsLimit",id:"\u9a8c\u8bc1-podpidslimit",level:3},{value:"\u539f\u7406\u5b9e\u73b0",id:"\u539f\u7406\u5b9e\u73b0",level:2},{value:"Kubelet \u4ee3\u7801\u8c03\u7528",id:"kubelet-\u4ee3\u7801\u8c03\u7528",level:3},{value:"Systemd Cgroup slice",id:"systemd-cgroup-slice",level:3},{value:"Cgroup FS",id:"cgroup-fs",level:3}];function p(e){const n={a:"a",code:"code",h2:"h2",h3:"h3",p:"p",pre:"pre",strong:"strong",...(0,o.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.p,{children:"Kubernetes \u91cc\u9762\u7684 Pod \u8d44\u6e90\u662f\u6700\u5c0f\u7684\u8ba1\u7b97\u5355\u5143\uff0c\u62bd\u8c61\u4e86\u4e00\u7ec4\uff08\u4e00\u4e2a\u6216\u591a\u4e2a\uff09\u5bb9\u5668\u3002\u5bb9\u5668\u4e5f\u662f Linux \u7cfb\u7edf\u4e0a\u7684\u8fdb\u7a0b\uff0c\u4f46\u57fa\u4e8e Namespace \u548c Cgroups(Control groups) \u7b49\u6280\u672f\u5b9e\u73b0\u4e86\u4e0d\u540c\u7a0b\u5ea6\u7684\u9694\u79bb\u3002\n\u7b80\u5355\u6765\u8bf4 Namespace \u53ef\u4ee5\u8ba9\u6bcf\u4e2a\u8fdb\u7a0b\u6709\u72ec\u7acb\u7684 PID, IPC \u548c\u7f51\u7edc\u7a7a\u95f4\u3002Cgroups \u53ef\u4ee5\u63a7\u5236\u8fdb\u7a0b\u7684\u8d44\u6e90\u5360\u7528\uff0c\u6bd4\u5982 CPU \uff0c\u5185\u5b58\u548c\u5141\u8bb8\u7684\u6700\u5927\u8fdb\u7a0b\u6570\u7b49\u7b49\u3002"}),"\n",(0,r.jsx)(n.p,{children:"\u4eca\u5929\u4e3b\u8981\u4ecb\u7ecd\u5982\u4f55\u901a\u8fc7 Cgroups \u91cc\u9762\u7684 pids \u63a7\u5236\u5668\u9650\u5236 Kubernetes Pod \u5bb9\u5668\u7684\u6700\u5927\u8fdb\u7a0b\u6570\u91cf\u3002"}),"\n",(0,r.jsx)(n.h2,{id:"\u573a\u666f\u4ecb\u7ecd",children:"\u573a\u666f\u4ecb\u7ecd"}),"\n",(0,r.jsx)(n.p,{children:"\u4e4b\u524d\u9047\u5230\u8fc7\u8fd9\u6837\u4e00\u4e2a\u95ee\u9898\uff0c\u6211\u4eec\u7684\u670d\u52a1\u4f1a\u8c03\u7528\u6267\u884c\u5916\u90e8\u7684\u547d\u4ee4\uff0c\u6bcf\u8c03\u7528\u4e00\u6b21\u5916\u90e8\u547d\u4ee4\u5c31\u4f1a fork \u4ea7\u751f\u5b50\u8fdb\u7a0b\u3002\u4f46\u662f\u7531\u4e8e\u4ee3\u7801\u4e0a\u7684 bug \uff0c\u6ca1\u6709\u53ca\u65f6\u5bf9\u5b50\u8fdb\u7a0b\u56de\u6536\uff0c\u7136\u540e\u8fd9\u4e2a\u5bb9\u5668\u4e0d\u65ad fork \u4ea7\u751f\u5b50\u8fdb\u7a0b\uff0c\u8017\u5c3d\u4e86\u5bbf\u4e3b\u673a\u7684\u8fdb\u7a0b\u8868\u7a7a\u95f4\uff0c\u6700\u7ec8\u5bfc\u81f4\u6574\u4e2a\u7cfb\u7edf\u4e0d\u54cd\u5e94\uff0c\u5f71\u54cd\u4e86\u5176\u5b83\u7684\u670d\u52a1\u3002"}),"\n",(0,r.jsx)(n.p,{children:"\u8fd9\u79cd\u95ee\u9898\u9664\u4e86\u8ba9\u5f00\u53d1\u4eba\u5458\u4fee\u590d bug \u5916\uff0c\u4e5f\u9700\u8981\u5728\u7cfb\u7edf\u5c42\u9762\u5bf9\u8fdb\u7a0b\u6570\u91cf\u8fdb\u884c\u9650\u5236\u3002\u6240\u4ee5\uff0c\u5982\u679c\u4e00\u4e2a\u5bb9\u5668\u91cc\u9762\u8fd0\u884c\u7684\u670d\u52a1\u4f1a fork \u4ea7\u751f\u5b50\u8fdb\u7a0b\uff0c\u5c31\u5f88\u6709\u5fc5\u8981\u4f7f\u7528 Cgroups \u7684 pids \u63a7\u5236\u5668\u9650\u5236\u8fd9\u4e2a\u5bb9\u5668\u80fd\u8fd0\u884c\u7684\u6700\u5927\u8fdb\u7a0b\u6570\u91cf\u3002"}),"\n",(0,r.jsx)(n.h2,{id:"\u89e3\u51b3\u65b9\u6cd5",children:"\u89e3\u51b3\u65b9\u6cd5"}),"\n",(0,r.jsx)(n.h3,{id:"kubelet-\u5f00\u542f-podpidslimit-\u529f\u80fd",children:"Kubelet \u5f00\u542f PodPidsLimit \u529f\u80fd"}),"\n",(0,r.jsxs)(n.p,{children:["Kubernetes \u91cc\u9762\u7684\u6bcf\u4e2a\u8282\u70b9\u90fd\u4f1a\u8fd0\u884c\u4e00\u4e2a\u53eb\u505a Kubelet \u7684\u670d\u52a1\uff0c\u8d1f\u8d23\u8282\u70b9\u4e0a\u5bb9\u5668\u7684\u72b6\u6001\u548c\u751f\u547d\u5468\u671f\uff0c\u6bd4\u5982\u521b\u5efa\u548c\u5220\u9664\u5bb9\u5668\u3002\u6839\u636e Kubernetes \u7684\u5b98\u65b9\u6587\u6863 ",(0,r.jsx)(n.a,{href:"https://kubernetes.io/docs/concepts/policy/pid-limiting/",children:"Process ID Limits And Reservations"})," \u5185\u5bb9\uff0c\u53ef\u4ee5\u8bbe\u7f6e Kubelet \u670d\u52a1\u7684 ",(0,r.jsx)(n.strong,{children:"--pod-max-pids"})," \u914d\u7f6e\u9009\u9879\uff0c\u4e4b\u540e\u5728\u8be5\u8282\u70b9\u4e0a\u521b\u5efa\u7684\u5bb9\u5668\uff0c\u6700\u7ec8\u90fd\u4f1a\u4f7f\u7528 Cgroups pid \u63a7\u5236\u5668\u9650\u5236\u5bb9\u5668\u7684\u8fdb\u7a0b\u6570\u91cf\u3002"]}),"\n",(0,r.jsxs)(n.p,{children:["\u6211\u4eec Kubernetes \u662f\u5728 CentOS 7 \u4e0a\u4f7f\u7528 kubeadm \u90e8\u7f72\u7684 v1.15.9 \u7248\u672c\uff0c\u9700\u8981\u989d\u5916\u8bbe\u7f6e ",(0,r.jsx)(n.strong,{children:"SupportPodPidsLimit"})," \u7684 feature-gate\uff0c\u5bf9\u5e94\u64cd\u4f5c\u5982\u4e0b\uff08\u5176\u5b83\u53d1\u884c\u7248\u5e94\u8be5\u4e5f\u7c7b\u4f3c\uff09\uff1a"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:'# kubelet \u4f7f\u7528 systemd \u542f\u52a8\u7684\uff0c\u53ef\u4ee5\u901a\u8fc7\u7f16\u8f91 /etc/sysconfig/kubelet\n# \u6dfb\u52a0\u989d\u5916\u7684\u542f\u52a8\u53c2\u6570\uff0c\u8bbe\u7f6e pod \u6700\u5927\u8fdb\u7a0b\u6570\u4e3a 1024\n$ vim /etc/sysconfig/kubelet\nKUBELET_EXTRA_ARGS="--pod-max-pids=1024 --feature-gates=\\"SupportPodPidsLimit=true\\""\n\n# \u91cd\u542f kubelet \u670d\u52a1\n$ systemctl restart kubelet\n\n# \u67e5\u770b\u53c2\u6570\u662f\u5426\u751f\u6548\n$ ps faux | grep kubelet | grep pod-max-pids\nroot     104865 10.5  0.6 1731392 107368 ?      Ssl  11:56   0:30 /usr/bin/kubelet ... --pod-max-pids=10 --feature-gates=SupportPodPidsLimit=true\n'})}),"\n",(0,r.jsx)(n.h3,{id:"\u9a8c\u8bc1-podpidslimit",children:"\u9a8c\u8bc1 PodPidsLimit"}),"\n",(0,r.jsxs)(n.p,{children:["\u901a\u8fc7\u914d\u7f6e Kubelet \u7684 ",(0,r.jsx)(n.strong,{children:"--pod-max-pids=1024"})," \u9009\u9879\uff0c\u9650\u5236\u4e86\u4e00\u4e2a\u5bb9\u5668\u5185\u5141\u8bb8\u7684\u6700\u5927\u8fdb\u7a0b\u6570\u4e3a 1024 \u4e2a\u3002\u73b0\u5728\u6765\u6d4b\u8bd5\u4e0b\u5982\u679c\u5bb9\u5668\u5185\u4e0d\u65ad fork \u5b50\u8fdb\u7a0b\uff0c\u6570\u76ee\u5230\u8fbe 1024 \u4e2a\u65f6\u4f1a\u89e6\u53d1\u4ec0\u4e48\u884c\u4e3a\u3002"]}),"\n",(0,r.jsxs)(n.p,{children:["\u53c2\u8003 ",(0,r.jsx)(n.a,{href:"https://en.wikipedia.org/wiki/Fork_bomb",children:"Fork bomb"})," \u7684\u5185\u5bb9\uff0c\u53ef\u4ee5\u521b\u5efa\u4e00\u4e2a pod\uff0c\u4e0d\u65ad fork \u5b50\u8fdb\u7a0b\u3002"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:'# \u521b\u5efa\u666e\u901a\u7684 nginx pod yaml\n$ cat <<EOF > test-nginx.yaml\napiVersion: v1\nkind: Pod\nmetadata:\n  name: test-nginx\nspec:\n  containers:\n  - name: nginx\n    image: nginx\nEOF\n\n# \u521b\u5efa\u5230 Kubernetes \u96c6\u7fa4\n$ kubectl apply -f test-nginx.yaml\n\n# \u8fdb\u5165 nginx \u5bb9\u5668\u6a21\u62df fork bomb \n$ kubectl exec -ti test-nginx bash\nroot@test-nginx:/# bash -c "fork() { fork | fork &  }; fork"\nenvironment: fork: retry: Resource temporarily unavailable\nenvironment: fork: retry: Resource temporarily unavailable\nenvironment: fork: retry: Resource temporarily unavailable\n'})}),"\n",(0,r.jsxs)(n.p,{children:["\u901a\u8fc7\u8fdb\u5165\u4e00\u4e2a nginx \u5bb9\u5668\u91cc\u9762\u4f7f\u7528 bash \u8fd0\u884c fork bomb \u547d\u4ee4\uff0c\u6211\u4eec\u4f1a\u53d1\u73b0\u5f53 fork \u7684\u5b50\u8fdb\u7a0b\u8fbe\u5230\u9650\u5236\u7684\u4e0a\u9650\u6570\u76ee\u540e\uff0c\u4f1a\u62a5 ",(0,r.jsx)(n.strong,{children:"retry: Resource temporarily unavailable"})," \u7684\u9519\u8bef\uff0c\u8fd9\u4e2a\u65f6\u5019\u518d\u770b\u4e0b\u5bbf\u4e3b\u673a\u7684 fork \u8fdb\u7a0b\u6570\u76ee\u3002"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# \u901a\u8fc7\u5728\u5916\u90e8\u5bbf\u4e3b\u673a\u6267\u884c\u4e0b\u9762\u7684\u547d\u4ee4\uff0c\u4f1a\u53d1\u73b0 fork \u7684\u8fdb\u7a0b\u6570\u76ee\u63a5\u8fd1 1024 \u4e2a\n$ ps faux | grep fork | wc -l\n1019\n"})}),"\n",(0,r.jsxs)(n.p,{children:["\u901a\u8fc7\u4ee5\u4e0a\u7684\u5b9e\u9a8c\uff0c\u53d1\u73b0\u80fd\u591f\u901a\u8fc7\u8bbe\u7f6e Kubelet \u7684 ",(0,r.jsx)(n.strong,{children:"--pod-max-pids"})," \u9009\u9879\uff0c\u9650\u5236\u5bb9\u5668\u7c7b\u7684\u8fdb\u7a0b\u6570\uff0c\u907f\u514d\u5bb9\u5668\u8fdb\u7a0b\u6570\u4e0d\u65ad\u4e0a\u5347\u6700\u7ec8\u8017\u5c3d\u5bbf\u4e3b\u673a\u8d44\u6e90\uff0c\u62d6\u57ae\u6574\u4e2a\u5bbf\u4e3b\u673a\u7cfb\u7edf\u3002"]}),"\n",(0,r.jsx)(n.h2,{id:"\u539f\u7406\u5b9e\u73b0",children:"\u539f\u7406\u5b9e\u73b0"}),"\n",(0,r.jsx)(n.p,{children:"\u901a\u8fc7\u4e4b\u524d\u63cf\u8ff0\u7684\u89e3\u51b3\u65b9\u6cd5\uff0c\u5df2\u7ecf\u80fd\u591f\u9650\u5236\u5bb9\u5668\u7684\u8fdb\u7a0b\u6570\u4e86\u3002"}),"\n",(0,r.jsx)(n.p,{children:"\u73b0\u5728\u4ece\u4ee3\u7801\u7684\u5c42\u9762\u770b\u4e0b Kubelet \u5982\u4f55\u8bbe\u7f6e Cgroups pids \u63a7\u5236\u5668\u3002"}),"\n",(0,r.jsx)(n.h3,{id:"kubelet-\u4ee3\u7801\u8c03\u7528",children:"Kubelet \u4ee3\u7801\u8c03\u7528"}),"\n",(0,r.jsxs)(n.p,{children:["\u9996\u5148\u6765\u770b\u4e0b Kubelet \u4ee3\u7801\u91cc\u9762 ",(0,r.jsx)(n.strong,{children:"--pod-max-pids"})," \u662f\u600e\u4e48\u751f\u6548\u7684\uff0cKubernetes \u7684\u7248\u672c\u4e3a v1.15.9\u3002"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"--pid-max-pids"})," \u9009\u9879\u662f\u5728 ",(0,r.jsx)(n.code,{children:"cmd/kubelet/app/options/options.go"})," \u91cc\u9762\u7684 ",(0,r.jsx)(n.code,{children:"AddKubeletConfigFlags"})," \u51fd\u6570\u8bbe\u7f6e\u7684\uff0c\u5bf9\u5e94\u4ee3\u7801\u5982\u4e0b\u3002"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-go",children:'// cmd/kubelet/app/options/options.go\nfunc AddKubeletConfigFlags(mainfs *pflag.FlagSet, c *kubeletconfig.KubeletConfiguration) {\n...\n    // \u8fd9\u91cc\u5b9a\u4e49\u4e86 \'--pod-max-pids\' \u7684\u9009\u9879\n    // \u5bf9\u5e94\u53c2\u6570\u7684\u503c\u901a\u8fc7\u547d\u4ee4\u884c\u89e3\u6790\u5230 kubeletconfig.KubeletConfiguration.PodPidsLimit \u91cc\u9762\n    fs.Int64Var(&c.PodPidsLimit, "pod-max-pids", c.PodPidsLimit, "Set the maximum number of processes per pod.  If -1, the kubelet defaults to the node allocatable pid capacity.")\n...\n}\n'})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"PodPidsLimit"})," \u914d\u7f6e\u53c2\u6570\u89e3\u6790\u5b8c\u6210\u540e\uff0ckubelet \u4f1a\u5728\u542f\u52a8\u7684\u65f6\u5019\u628a\u503c\u8bbe\u7f6e\u5230 ContainerManager \u91cc\u9762\uff0c\u5bf9\u5e94\u4ee3\u7801\u5728 ",(0,r.jsx)(n.code,{children:"cmd/kubelet/app/server.go"})," \u91cc\u9762\u7684 ",(0,r.jsx)(n.code,{children:"run"})," \u51fd\u6570\uff0c\u6ce8\u91ca\u5982\u4e0b\u3002"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-go",children:"// cmd/kubelet/app/server.go\nfunc run(s *options.KubeletServer, kubeDeps *kubelet.Dependencies, stopCh <-chan struct{}) (err error) {\n...\n        kubeDeps.ContainerManager, err = cm.NewContainerManager(\n            ...\n            cm.NodeConfig{\n                ...\n                // \u5bb9\u5668 runtime\uff0c\u9ed8\u8ba4\u4f7f\u7528 docker\n                ContainerRuntime:      s.ContainerRuntime,\n                // \u4f7f\u7528 Cgroups \u63a7\u5236 pod \u7684\u670d\u52a1\u8d28\u91cf\n                CgroupsPerQOS:         s.CgroupsPerQOS,\n                // \u64cd\u4f5c Cgroups \u7684\u9a71\u52a8\uff0c\u6709 cgroupfs \u548c systemd \u4e24\u79cd\n                // \u6211\u4eec\u9ed8\u8ba4\u914d\u7f6e\u4f7f\u7528 systemd \u6765\u63a7\u5236 Cgroups\n                CgroupDriver:          s.CgroupDriver,\n                ...\n                // \u8fd9\u91cc\u5c31\u662f PodPidsLimit \u7684\u8bbe\u7f6e\u4e86\uff0c\u901a\u8fc7\u521a\u624d options \u7684\u89e3\u6790\n                // \u8d4b\u503c\u5230\u4e86 ContainerManager.ExperimentalPodPidsLimit \u5c5e\u6027\n                ExperimentalPodPidsLimit:              s.PodPidsLimit,\n                // \u9650\u5236\u5bb9\u5668 CPU \u4f7f\u7528\u7387\u7684\u53c2\u6570\n                EnforceCPULimits:                      s.CPUCFSQuota,\n                CPUCFSQuotaPeriod:                     s.CPUCFSQuotaPeriod.Duration,\n            },\n            ...\n            ...)\n...\n}\n"})}),"\n",(0,r.jsxs)(n.p,{children:["\u521d\u59cb\u5316 ContainerManager \u540e\uff0c\u4f1a\u5728 ",(0,r.jsx)(n.code,{children:"pkg/kubelet/cm/container_manager_linux.go"})," \u91cc\u9762\u8c03\u7528 ",(0,r.jsx)(n.code,{children:"NewPodContainerManager"})," \u521b\u5efa PodContainerManager\uff0c\u4ee3\u7801\u5982\u4e0b\u3002"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-go",children:"// pkg/kubelet/cm/container_manager_linux.go\n...\nfunc (cm *containerManagerImpl) NewPodContainerManager() PodContainerManager {\n    // \u9ed8\u8ba4\u60c5\u51b5\u4e0b\u5df2\u7ecf\u6253\u5f00\u4e86 CgroupsPerQOS \u7684\u9009\u9879\n    if cm.NodeConfig.CgroupsPerQOS {\n        // \u8fd9\u91cc\u8fd4\u56de PodContainerManager \u63a5\u53e3\u7684\u5b9e\u73b0\n        return &podContainerManagerImpl{\n            qosContainersInfo: cm.GetQOSContainersInfo(),\n            subsystems:        cm.subsystems,\n            cgroupManager:     cm.cgroupManager,\n            // \u8fd9\u91cc\u8bbe\u7f6e podPidsLimit\n            podPidsLimit:      cm.ExperimentalPodPidsLimit,\n            enforceCPULimits:  cm.EnforceCPULimits,\n            cpuCFSQuotaPeriod: uint64(cm.CPUCFSQuotaPeriod / time.Microsecond),\n        }\n    }\n    return &podContainerManagerNoop{\n        cgroupRoot: cm.cgroupRoot,\n    }\n}\n...\n"})}),"\n",(0,r.jsxs)(n.p,{children:["\u4ece\u4e4b\u524d\u7684\u4ee3\u7801\u80fd\u53d1\u73b0 PodContainerManager \u662f\u4e00\u4e2a\u63a5\u53e3\uff0c\u5bf9\u5e94\u7684\u5b9e\u73b0\u5728 ",(0,r.jsx)(n.code,{children:"pkg/kubelet/cm/pod_container_manager_linux.go"})," \u91cc\u9762\uff0c\u4e0e Cgroup \u76f8\u5173\u7684\u51fd\u6570\u5219\u662f ",(0,r.jsx)(n.code,{children:"podContainerManagerImpl.EnsureExists"})," \u51fd\u6570\u3002"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-go",children:'// pkg/kubelet/cm/pod_container_manager_linux.go\n...\n// podContainerManagerImpl \u5c31\u662f\u5b9e\u73b0 PodContainerManager \u63a5\u53e3\u7684\u7ed3\u6784\u4f53\n// EnsureExists \u4f1a\u6839\u636e api \u91cc\u9762 Pod \u7684\u5b9a\u4e49\uff0c\u5728\u5f53\u524d\u7cfb\u7edf\u521b\u5efa\u5bf9\u5e94\u5bb9\u5668\u7684 cgroup \u914d\u7f6e\nfunc (m *podContainerManagerImpl) EnsureExists(pod *v1.Pod) error {\n    // podContainerName \u4e5f\u4f1a\u4f5c\u4e3a cgroup name\uff0c\u6839\u636e pod \u7684 QOS \u7ea7\u522b\u548c UUID \u751f\u6210\n    // \u67e5\u770b\u5bb9\u5668\u662f\u5426\u5b58\u5728\n    alreadyExists := m.Exists(pod)                                                                                  \n    if !alreadyExists {\n        // \u521b\u5efa pod \u5bf9\u5e94\u5bb9\u5668\u7684 cgroup\n        containerConfig := &CgroupConfig{\n            Name:               podContainerName,\n            ResourceParameters: ResourceConfigForPod(pod, m.enforceCPULimits, m.cpuCFSQuotaPeriod),\n        }\n        // \u5982\u679c\u542f\u7528\u4e86 SupportPodPidsLimit feature-gate \uff0c\u5e76\u4e14 podPidsLimit \u5927\u4e8e 0\n        if utilfeature.DefaultFeatureGate.Enabled(kubefeatures.SupportPodPidsLimit) && m.podPidsLimit > 0 {\n            // \u8fd9\u91cc\u5c31\u4f1a\u914d\u7f6e PidsLimit\n            containerConfig.ResourceParameters.PidsLimit = &m.podPidsLimit\n        }\n        // \u8c03\u7528 cgroupManager \u6839\u636e containerConfig \u521b\u5efa\u5bf9\u5e94\u7684 cgroup\n        if err := m.cgroupManager.Create(containerConfig); err != nil {\n            return fmt.Errorf("failed to create container for %v : %v", podContainerName, err)\n        }\n    }\n    ...\n    return nil\n}\n...\n'})}),"\n",(0,r.jsxs)(n.p,{children:["\u63a5\u4e0b\u6765\u770b cgroupManager.Create \u51fd\u6570\u7684\u5b9e\u73b0\uff0c\u5bf9\u5e94\u4ee3\u7801\u5b9e\u73b0\u5728 ",(0,r.jsx)(n.code,{children:"pkg/kubelet/cm/cgroup_manager_linux.go"})," \u91cc\u9762\u7684 ",(0,r.jsx)(n.code,{children:"cgroupManagerImpl.Create"}),"\u3002"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-go",children:"...\nfunc (m *cgroupManagerImpl) Create(cgroupConfig *CgroupConfig) error {\n...\n    resources := m.toResources(cgroupConfig.ResourceParameters)\n    libcontainerCgroupConfig := &libcontainerconfigs.Cgroup{\n        Resources: resources,\n    }\n    // libcontainer consumes a different field and expects a different syntax\n    // depending on the cgroup driver in use, so we need this conditional here.\n    if m.adapter.cgroupManagerType == libcontainerSystemd {\n        // \u6211\u4eec\u4f7f\u7528 systemd \u7ba1\u7406 cgroup \uff0c\u6240\u4ee5\u8fd9\u91cc\u4f1a\u66f4\u65b0\u4e0b systemd \u5bf9\u5e94 cgroup \u7684\u914d\u7f6e\n        updateSystemdCgroupInfo(libcontainerCgroupConfig, cgroupConfig.Name)\n    } else {\n        libcontainerCgroupConfig.Path = cgroupConfig.Name.ToCgroupfs()\n    }\n\n    if utilfeature.DefaultFeatureGate.Enabled(kubefeatures.SupportPodPidsLimit) && cgroupConfig.ResourceParameters != nil && cgroupConfig.ResourceParameters.PidsLimit != nil {\n        // \u8bbe\u7f6e libcontainerCgroupConfig \u91cc\u9762\u7684 PidsLimit\n        // \u8fd9\u91cc PidsLimit \u5c31\u662f\u4e00\u5f00\u59cb\u53c2\u6570\u6307\u5b9a\u7684 --pod-max-pids \u7684\u503c\n        libcontainerCgroupConfig.PidsLimit = *cgroupConfig.ResourceParameters.PidsLimit\n    }\n\n    // \u8fd9\u91cc\u6839\u636e cgroup \u7684\u914d\u7f6e\u8fd4\u56de libcontainercgroups.Manager \u63a5\u53e3\u7684\u5b9e\u73b0\n    // \u8fd9\u91cc\u7684\u5b9e\u73b0\u662f systemd \u7684\u5b9e\u73b0\n    manager, err := m.adapter.newManager(libcontainerCgroupConfig, nil)\n    if err != nil {\n        return err\n    }\n\n    // \u8c03\u7528 libcontainer \u91cc\u9762\u7684 cgroups manager Apply \u63a5\u53e3\u628a pod \u7684 cgroup \u914d\u7f6e\u5e94\u7528\u5230\u7cfb\u7edf\n    // \u5728\u6211\u4eec\u7684\u73af\u5883\u4e2d\uff0c\u8fd9\u4e2a Apply \u51fd\u6570\u4f1a\u7531 libcontainer/cgroupfs/systemd.Manager \u5b9e\u73b0\n    if err := manager.Apply(-1); err != nil {\n        return err\n    }\n    ...\n\n    return nil\n}\n...\n"})}),"\n",(0,r.jsxs)(n.p,{children:["\u5728\u770b\u4e0b\u6700\u540e\u7684 ",(0,r.jsx)(n.code,{children:"Apply"})," \u51fd\u6570\uff0c\u8be5\u51fd\u6570\u4f1a\u8c03\u7528\u5230 ",(0,r.jsx)(n.code,{children:"vendor/github.com/opencontainers/runc/libcontainer/cgroups/systemd/apply_systemd.go"})," \u91cc\u9762\u7684 systemd \u5b9e\u73b0\u3002"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-go",children:'// vendor/github.com/opencontainers/runc/libcontainer/cgroups/systemd/apply_systemd.go\n...\nfunc (m *Manager) Apply(pid int) error {\n    // \u521d\u59cb\u5316 systemd cgroup \u9700\u8981\u7684\u4e00\u4e9b\u53d8\u91cf\n    var (\n        c          = m.Cgroups\n        // systemd unit name\n        unitName   = getUnitName(c)\n        slice      = "system.slice"\n        // systemd unit \u91cc\u9762\u7684\u914d\u7f6e\u5c5e\u6027\n        properties []systemdDbus.Property\n    )\n...\n    // Always enable accounting, this gets us the same behaviour as the fs implementation,\n    // plus the kernel has some problems with joining the memory cgroup at a later time.\n    properties = append(properties,\n        newProp("MemoryAccounting", true),\n        newProp("CPUAccounting", true),\n        newProp("BlockIOAccounting", true))\n    ...\n    if c.Resources.Memory != 0 {\n        // \u8bbe\u7f6e cgroup memory limit\n        properties = append(properties,\n            newProp("MemoryLimit", uint64(c.Resources.Memory)))\n    }\n\n    if c.Resources.CpuShares != 0 {\n        // \u8bbe\u7f6e cgroup cpu shares\n        properties = append(properties,\n            newProp("CPUShares", c.Resources.CpuShares))\n    }\n...\n    if c.Resources.BlkioWeight != 0 {\n        // \u8bbe\u7f6e cgroup block io weight\n        properties = append(properties,\n            newProp("BlockIOWeight", uint64(c.Resources.BlkioWeight)))\n    }\n\n    if c.Resources.PidsLimit > 0 {\n        // \u8fd9\u91cc\u8bbe\u7f6e\u4e86\u672c\u6587\u5173\u6ce8\u7684 PidsLimit \u53c2\u6570\n        // \u53d1\u73b0\u4f1a\u5bf9\u5e94 systemd \u91cc\u9762\u7684 TasksAccounting \u548c TasksMax \u5c5e\u6027\n        properties = append(properties,\n            newProp("TasksAccounting", true),\n            newProp("TasksMax", uint64(c.Resources.PidsLimit)))\n    }\n...\n    // \u901a\u8fc7 systemdDbus \u6839\u636e\u4e4b\u524d\u7684 cgroup \u8bbe\u7f6e\u521b\u5efa\u5bf9\u5e94\u7684 unit\n    if _, err := theConn.StartTransientUnit(unitName, "replace", properties, statusChan); err == nil {\n        ...\n    }\n\n    // \u6700\u540e\u52a0\u5165 Cgroups\n    if err := joinCgroups(c, pid); err != nil {\n        return err\n    }\n...\n}\n...\n'})}),"\n",(0,r.jsx)(n.h3,{id:"systemd-cgroup-slice",children:"Systemd Cgroup slice"}),"\n",(0,r.jsx)(n.p,{children:"\u901a\u8fc7\u5bf9 Kubelet \u8c03\u7528 libcontainer\uff0c\u6700\u540e\u7531 systemd \u521b\u5efa pod \u5bb9\u5668\u5bf9\u5e94 cgroup unit \u7684\u4ee3\u7801\u8c03\u7528\u5206\u6790\uff0c\u5728\u8fd9\u91cc\u770b\u4e0b\u5bf9\u5e94 pod \u7684 systemd unit \u914d\u7f6e\u3002"}),"\n",(0,r.jsxs)(n.p,{children:["\u4ece\u4e4b\u524d\u4ee3\u7801\u770b\uff0c\u6700\u7ec8\u751f\u6210\u7684 systemd unit \u548c cgroup \u548c pod \u7684 ",(0,r.jsx)(n.code,{children:"uid"})," \u548c ",(0,r.jsx)(n.code,{children:"qosClass"})," \u6709\u5173\u7cfb\uff0c\u6240\u4ee5\u5148\u901a\u8fc7\u4ee5\u4e0b\u7684\u547d\u4ee4\u62ff\u5230 pod \u7684 ",(0,r.jsx)(n.code,{children:"uid"})," \u548c ",(0,r.jsx)(n.code,{children:"qosClass"}),"\u3002"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"$ kubectl get pods test-nginx -o yaml | grep -E 'uid|qos'\n  uid: 2ac1e32c-d8d6-4533-8eab-d04d60465065\n  qosClass: BestEffort\n"})}),"\n",(0,r.jsx)(n.p,{children:"\u7136\u540e\u627e\u5230\u5bf9\u5e94\u7684 systemd unit .slice \u6587\u4ef6\u3002"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# uid \u53d6\u524d 8 \u4f4d\uff0cqosClass \u5c0f\u5199\n# \u627e\u5230\u5bf9\u5e94\u7684 kubepods-besteffort-pod2ac1e32c_d8d6_4533_8eab_d04d60465065.slice\n$ systemctl | grep 2ac1e32c | grep besteffort\nkubepods-besteffort-pod2ac1e32c_d8d6_4533_8eab_d04d60465065.slice      loaded active active    libcontainer container kubepods-besteffort-pod2ac1e32c_d8d6_4533_8eab_d04d60465065.slice\n\n# \u67e5\u770b\u5bf9\u5e94 slice \u7684\u914d\u7f6e\n$ systemctl status kubepods-besteffort-pod2ac1e32c_d8d6_4533_8eab_d04d60465065.slice\n\u25cf kubepods-besteffort-pod2ac1e32c_d8d6_4533_8eab_d04d60465065.slice - libcontainer container kubepods-besteffort-pod2ac1e32c_d8d6_4533_8eab_d04d60465065.slice\n   Loaded: loaded (/run/systemd/system/kubepods-besteffort-pod2ac1e32c_d8d6_4533_8eab_d04d60465065.slice; static; vendor preset: disabled)\n  Drop-In: /run/systemd/system/kubepods-besteffort-pod2ac1e32c_d8d6_4533_8eab_d04d60465065.slice.d\n           \u2514\u250050-BlockIOAccounting.conf, 50-CPUAccounting.conf, 50-CPUShares.conf, 50-DefaultDependencies.conf, 50-Delegate.conf, 50-Description.conf, 50-MemoryAccounting.conf, 50-TasksAccounting.conf, 50-TasksMax.conf, 50-Wants-kubepods-besteffort\\x2eslice.conf\n   Active: active since Fri 2021-06-25 16:21:25 CST; 7min ago\n    Tasks: 6 (limit: 1024)\n   Memory: 6.8M\n   CGroup: /kubepods.slice/kubepods-besteffort.slice/kubepods-besteffort-pod2ac1e32c_d8d6_4533_8eab_d04d60465065.slice\n           \u251c\u2500docker-2d151786c9985db74632c09412207fa99755473fde93d09920604e097f25a2b7.scope\n           \u2502 \u251c\u250032662 nginx: master process nginx -g daemon off;\n           \u2502 \u251c\u250032703 nginx: worker process\n           \u2502 \u251c\u250032704 nginx: worker process\n           \u2502 \u251c\u250032705 nginx: worker process\n           \u2502 \u2514\u250032706 nginx: worker process\n           \u2514\u2500docker-966047566d9e90d9ef64126b605101c174d750ec0cde3d3a83c5b313c7af9a21.scope\n             \u2514\u250032544 /pause\n\nJun 25 16:21:25 centos7-oc-dev systemd[1]: Created slice libcontainer container kubepods-besteffort-pod2ac1e32c_d8d6_4533_8eab_d04d60465065.slice.\n\n# \u901a\u8fc7 systemctl status \u80fd\u53d1\u73b0 50-TasksMax.conf \u7684\u6587\u4ef6\n# \u4ece\u4e4b\u524d\u7684\u4ee3\u7801\u5206\u6790\uff0c\u53d1\u73b0 PodPidsLimit \u4f1a\u5bf9\u5e94\u5230 systemd \u7684 TasksMax \u5c5e\u6027\n# \u73b0\u5728\u5728\u770b\u4e0b\u8fd9\u4e2a\u6587\u4ef6\u7684\u5185\u5bb9\n$ cat /run/systemd/system/kubepods-besteffort-pod2ac1e32c_d8d6_4533_8eab_d04d60465065.slice.d/50-TasksMax.conf\n[Slice]\nTasksMax=1024\n# TasksMax \u8bbe\u7f6e\u4e3a\u4e86 1024 \uff0c\u9650\u5236\u4e86\u8fd9\u4e2a\u8fdb\u7a0b\u6700\u5927\u5b50\u8fdb\u7a0b\uff08Task\uff09\u6570\u91cf\n"})}),"\n",(0,r.jsx)(n.h3,{id:"cgroup-fs",children:"Cgroup FS"}),"\n",(0,r.jsxs)(n.p,{children:["\u67e5\u770b\u4e4b\u524d\u7684 ",(0,r.jsx)(n.code,{children:"vendor/github.com/opencontainers/runc/libcontainer/cgroups/systemd/apply_systemd.go"})," \u4ee3\u7801\uff0c\u53d1\u73b0\u5728\u521b\u5efa\u5b8c pod \u5bb9\u5668\u5bf9\u5e94\u7684 systemd cgroup slice \u540e\uff0c\u8fd8\u4f1a\u8c03\u7528\u4e00\u6b21 ",(0,r.jsx)(n.code,{children:"joinCgroups"})," \u8fd9\u4e2a\u51fd\u6570\u3002\u8fd9\u4e2a\u51fd\u6570\u4f1a\u4f7f\u7528 Cgroup FS \u539f\u751f\u7684\u65b9\u6cd5\uff0c\u5728 ",(0,r.jsx)(n.code,{children:"/sys/fs/cgroup"})," \u91cc\u9762\u521b\u5efa\u5bf9\u5e94 pod \u5bb9\u5668\u7684 group \u3002"]}),"\n",(0,r.jsx)(n.p,{children:"\u6240\u4ee5\u518d\u770b\u4e0b Cgroup FS \u91cc\u9762 pod \u8bbe\u7f6e pid limit \u7684\u914d\u7f6e\u3002"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# \u627e\u5230 Cgroup FS pids \u63a7\u5236\u5668\u7684\u6302\u8f7d\u70b9\n$ cgroup on /sys/fs/cgroup/pids type cgroup (rw,nosuid,nodev,noexec,relatime,pids)\n\n# \u770b\u4e0b /sys/fs/cgroup/pids \u76ee\u5f55\u4e0b\u7684\u6587\u4ef6\n$ ls -alh /sys/fs/cgroup/pids\n...\n# \u53d1\u73b0\u6709\u4e00\u4e2a\u7531 Kubelet \u521b\u5efa\u7684 kubepods.slice\ndrwxr-xr-x   4 root root   0 Jun 25 04:49 kubepods.slice\n...\n\n# \u518d\u901a\u8fc7\u67e5\u770b /sys/fs/cgroup/pids/kubepods.slice \u76ee\u5f55\n# \u4f1a\u53d1\u73b0 kubepods-besteffort.slice \u548c kubepods-burstable.slice \u4e24\u4e2a\u76ee\u5f55\n# \u5206\u522b\u5bf9\u5e94 pod \u5bb9\u5668\u7684 QOS \u7ea7\u522b\n$ ls -alh /sys/fs/cgroup/pids/kubepods.slice\n...\ndrwxr-xr-x 42 root root 0 Jun 25 16:21 kubepods-besteffort.slice\ndrwxr-xr-x  8 root root 0 Jun 25 04:49 kubepods-burstable.slice\n...\n\n# \u7ed3\u5408\u521a\u624d\u7684\u4ee3\u7801\u7247\u6bb5\uff0c\u4e5f\u53ef\u4ee5\u60f3\u5230\u539f\u751f Cgroup FS \u7684\u76ee\u5f55\u548c systemd \u7684\u5e94\u8be5\u662f\u5dee\u4e0d\u591a\u7684\u5c42\u7ea7\n# \u73b0\u5728\u76f4\u63a5\u7528 find \u547d\u4ee4\u67e5\u770b pids \u63a7\u5236\u5668\u4e0b\u9762\u7684 cgroup \u8bbe\u7f6e\n$ find /sys/fs/cgroup/pids/kubepods.slice -type f | grep pod2ac1e32c\n...\n# \u80fd\u53d1\u73b0 pids.current \u548c pids.max \u4e24\u4e2a cgroup \u7684\u914d\u7f6e\n# pids.current \u8868\u793a\u5f53\u524d pod \u91cc\u9762\u7684\u8fdb\u7a0b\uff08Task\uff09\u6570\u91cf\n/sys/fs/cgroup/pids/kubepods.slice/kubepods-besteffort.slice/kubepods-besteffort-pod2ac1e32c_d8d6_4533_8eab_d04d60465065.slice/pids.current\n# pids.max \u5219\u8868\u793a pod \u91cc\u9762\u80fd\u8fd0\u884c\u7684\u8fdb\u7a0b\uff08Task\uff09\u4e0a\u9650\n/sys/fs/cgroup/pids/kubepods.slice/kubepods-besteffort.slice/kubepods-besteffort-pod2ac1e32c_d8d6_4533_8eab_d04d60465065.slice/pids.max\n...\n\n# \u67e5\u770b pod pids.max \u8bbe\u7f6e\uff0c\u7ed3\u679c\u4e3a 1024\n$ cat /sys/fs/cgroup/pids/kubepods.slice/kubepods-besteffort.slice/kubepods-besteffort-pod2ac1e32c_d8d6_4533_8eab_d04d60465065.slice/pids.max\n1024 \n"})}),"\n",(0,r.jsxs)(n.p,{children:["\u53e6\u5916\u8fd9\u7bc7\u5185\u6838\u6587\u6863 ",(0,r.jsx)(n.a,{href:"https://www.kernel.org/doc/Documentation/cgroup-v1/pids.txt",children:"Process Number Controller"})," \u5bf9 cgroup pids \u63a7\u5236\u5668\u7684\u4f7f\u7528\u8fdb\u884c\u4e86\u4ecb\u7ecd\uff0c\u53ef\u4ee5\u4e86\u89e3\u4e0b\u3002"]})]})}function u(e={}){const{wrapper:n}={...(0,o.a)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(p,{...e})}):p(e)}},11151:(e,n,s)=>{s.d(n,{Z:()=>d,a:()=>t});var r=s(67294);const o={},i=r.createContext(o);function t(e){const n=r.useContext(i);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:t(e.components),r.createElement(i.Provider,{value:n},e.children)}}}]);